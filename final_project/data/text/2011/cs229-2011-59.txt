CS229 Project, Yang Zhang, 05591714, Dec.2011 

!

Interpreter aided salt boundary segmentation using SVM 
regression shape deformation technique 

 
Problem Introduction 
For the seismic imaging project in offshore oil and gas exploration, a good 
velocity model is a must in order to achieve the best seismic image quality. Accurate salt 
body geometry extraction is a key component in the velocity model building workflow. 
However, salt-body boundary picking is a very human-intensive procedure even with the 
help of currently available automatic picking tools.  
It is very unlikely that there can be a super algorithm that can fully automates the 
boundary extraction procedure without sacrificing the result quality. Therefore this report 
addresses the problem of automatically and accurately segmenting the salt body in a 
series of neighboring seismic slices given only the accurate salt segmentation result on 
one single reference slice. This is achieved with a landmark based shape deformation 
technique plus SVM style regression. In this way, we can achieve the optimum trade-off 
between the amount of manpower and the quality of segmentation result. 
Due to the large noise in seismic data, simple image processing filter plus local 
boundary tracker algorithm gives very poor result or fails easily; very often some parts of 
the salt boundary are just missing due to poor illumination or miscellaneous source of 
noise (see Fig 1). Human interpreter's inputs at these trouble regions are essential 
(Halpert, 2011). 
However as today's seismic imaging practices evolve to 3-dimensions (think that 
the 2-D images now becomes 3-D volume), it would be too time-consuming for the 
human to manually take care every single slice. Therefore the idea of manually 
segmenting only a small amount of “key” slices and then intelligently propagating these 
results to the entire volume comes into play. Here I use a land-mark based shape-
deformation technique to propagate a single slice of manual segmentation result into its 
neighboring slices, thus yielding much better segmentation result than simply applying 
automatic methods. The design goal for such intelligent boundary propagation consists of 
two parts:  
•  First, I ask the new boundary to honor the available boundary information that 
can be extracted from the image.  
•  Secondly, the new boundary should preserve the shape information known from 
the manual segmentation input, such that the boundary will deform reasonably 
where we don’t have well-defined boundaries. 

Methodology 

 
Similar situations are encountered in the medical imaging field as well. My 
approach is based on the paper from Wang (2001) in ICCV’2001 (Please refer that paper 
for details). I will briefly describe this workflow in the following paragraphs: 
 
Let me define the references image slice that has been properly segmented as the 
template image, and define the image that we want to propagate the segmentation result 
to as the input image. The segmentation result in the template image is characterized by a 
set of contours. For simplicity, we consider the case in which the template contains only 
one single closed contour. Extension to the case of multiple contours is straightforward. 

CS229 Project, Yang Zhang, 05591714, Dec.2011 

!

(a) 

(b) 

 

 

Fig1. (a) A typical seismic image showing the salt body in the center. Some parts of the 
boundary are not well depicted due to the very limited image quality. (b) The same image 
shown with the human-interpreted boundary. 

We represent the known contour as a set of landmark points, V={V1,V2, …, Vn} 
where Vi = (xi,yi). Then for each landmark Vi, the proposed method first identifies a set of 
(j), j=1,2,...,ni} on the input image, where 
possible corresponding landmark points Bi = {Vi
(j)=(xi
(j),yi
(j)). Then conceptually the problem is solved in two major steps: 
Vi
1. Identify the best landmark point vi' from the landmark set Bi such that V' = {V1',V2', …, 
Vn'} located in or near the real object boundary in the input image. 
2. Deform the prior shape V to match V' while keeping the general shape characteristics 
of V. 
The cartoon below illustrates this landmark-searching step. 

 
Fig2.Search for best landmarks on the input image based on the initial landmarks in the template (Wang, 2001). 
 

CS229 Project, Yang Zhang, 05591714, Dec.2011 

!

 
In practices, it is difficult to determine the best landmark point vi' in advance, and 
therefore we just choose randomly an element in Bi as the initial set V' and iterate this 
process during which we update the set V' such that V' more likely contains the correct 
corresponding landmarks. 
 
The deformation step is formulated by finding the optimal solution to an objective 
function which takes into account both the goal of deforming the points in V into the 
current landmark set V' and the goal of preserving the prior shape V (use the bending 
energy formula from Bookstein (1989)). The objective function is shown below 

(*) 
 
 
 
 
 
in  which  t  defines  the  deformation  as  a  mapping,  i.e.  t:  (x,y)!(f(x,y),g(x,y))=(x',y'). 
Function Q describes the term that penalizes the mismatch between V' (the landmarks we 
found on the input image) and the mapping defined by t(V), such term corresponds to the 
first  goal mentioned  at  the  beginning  of  this  paragraph.  Function 
"[t]  is  a  regularization 
term,  which  tries  to  force  the  mapping  to  t  be  smooth,  in  other  words,  preserving  the 
global shape information of the original V.  
 
We can see that these two terms are fighting with each other; therefore a ! 
! 
parameter is added to balance these two parts. The optimization is solved using the 
classical SVM optimization technique, the fitting outliers are identified by the support-
vectors, therefore we use this information to update the estimate of the best landmarks s 
et V'. I iterate the procedure above for a few iterations. 
 
Experiment results 
 
I test this algorithm on a 3-D seismic image cube from Gulf of Mexico survey. 
The cube is of discrete size 970X784X12 in depth(Z)/inline(X)/crossline(Y) directions 
respectively. I have the human-interpreted segmentation result in slice 1 only, which I use 
as the template image. I did initial processing on this segmentation result to extract the 
template landmarks as shown below. 

 
 
 
Fig3. Preprocessing flow on the segmentation result of the input image. 1) Build the salt-
body mask. 2) Extract the boundary. 3) Subsample to a list of landmarks. 4) Find the out-
normal directions for each landmark on the contour. 
 
To find candidates for the set Bi, I overlay the landmark on the input image (neighboring 
slice), then I search along the normal direction for certain image features which might 
suggest the position to be a part of boundary. Here I just use a very simple criterion, I 
choose the image locations that the image envelope amplitude local maxima lie as the 
boundary point candidates. 

 

CS229 Project, Yang Zhang, 05591714, Dec.2011 

!

Then I run the SVM optimization for a few iterations, within each iteration I identifies all 
the support vectors (which corresponds to the fitting outliers); for each support vector 
index i, I try to use other candidates in Bi set such that the fitting 
| hi " #i |  gets improved. 

Fig5. The update of set V' in one 
iteration. Blue indicates all support 
! 
vector points, red shows the 
original points in V', green shown 
the updated V' set by replacing the 
badly fitting point vi' with better 
fitting candidates in Bi. 

 

Finally I deform all 12 slices one by one, from slices close to the template slice to slice 
far from the template. In figure 6, I show the comparison between the obtained deformed 
boundary and the boundary found by automatic methods. The improvement is very 
prominent. 

Conclusion 

 
In this paper, I propose to improve the salt-body segmentation for 3-D seismic 
images by deforming the accurate boundary on human-interpreted slice into the 
neighboring slices. The deformation not only honors the available boundary information 
on the input slice, but also preserves the shape information from the template slice. The 
numerical examples show very promising results. 

References 

•  Song Wang; Weiyu Zhu; Zhi-Pei Liang; , "Shape deformation: SVM regression 
and application to medical image segmentation," Computer Vision, 2001. ICCV 
2001. Proceedings. Eighth IEEE International Conference on, vol.2, no., pp.209-
216 vol.2, 2001 
•  Halpert, A., R. G. Clapp and B. L. Biondi, 2011, Interpreter guidance for 
automated seismic image segmentation: Presented at the 74th Annual 
International Conference and Exhibition, EAGE. 
•  Bookstein, F.L. , Principal warps: Thin-plate splines and the decomposition of 
deformations. IEEE Trans. PAMI, 11:567– 585, June 1989.  

 

CS229 Project, Yang Zhang, 05591714, Dec.2011 

!

Fig 6. The 
segmentation result for 
Slice NO. 1,4,8,12 
using the boundary 
deformation (left 
column) and using the 
simple automatic 
methods (right 
column).  

 

 

 

 

 

 

 

 

 

 

 

CS229 Project, Yang Zhang, 05591714, Dec.2011 

!

 
Appendix 
Math  details  for  solving  the  optimization  (you  can  safely  skip  it  if  you  are  not 
interested) 
 
With  regard  to  the  actual  form  of  the  objective  function  in  (*),  particularly  I 
choose function Q to be the !-insensitive L1 norm, as the following 

. 
Since new  landmarks  in V'  is searched along  the shape’s normal direction ni. We confine 
that the desired mapping t(V) should map along ni as well, i.e. 
 
 
t(v i ) = v i + "in i .  
 
Since  points  in  V'  is  found  along  normal  directions  of  V  as  well,  we  have 
then the previous objective function can be written as 

 
(1) 
v i ' = v i + h in i , 

! 

! 

subject to constrain (1).  
As for 
"[t] , we choose the so called bending energy term, it is defined as 

 

! 

where 
.  The  nice  thing  about  choosing  such  bending 
energy  term,  is  that we  know  in  advance,  given  all  the mapping  t  that  satisfies  constrain 
(1),  the  thin-plate  spline  interpolation  will  minimize  the  bending  energy  (Bookstein, 
1989), which takes the form: t = (f,g), and 

, 

K is the well-known thin-plate kernel function. 
 
"[t]  with  the  vector 
As  shown  in  Wang(2001),  we  can  also  represent 
" = {"i : i = 1, .2, ...n} ,  therefore  this  variational  problem  (optimization  with  variables  as 
functions) turns into one much simpler numerical convex optimization problem. Then we 
just try to find the optimal 
" = {"i : i = 1, .2, ...n}  that 

! 

 

! 

, 
! 
here 
ˆ x , ˆ y  is the vector representation of the first and second coordinates of the points in 
set t(V) (keep in mind that 
t(v i ) = v i + "in i ). 
Using the standard SVM technique, we can instead solve the dual problem according to 
the K.K.T. condition. It ended up as being a standard quadratic programming problem 
with both upper and lower bounds (see Wang(2001)).
! 

! 

