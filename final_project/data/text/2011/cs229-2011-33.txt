Increasing Indoor Localization Accuracy Using Wiﬁ Signals

Chris Pak, Alex Huang
Final Pro ject Report for CS 229
Stanford University, Fall 2011-12

December 16, 2011

Abstract

The widespread availability of wireless networks has
created an increased interest in harnessing them for
other purposes, such as localizing mobile devices.
Our particular goal was to be able to use these
techniques as well as others in order to better pre-
dict the location of a smart phone inside a build-
ing. The current state of the art techniques use
Gaussian Process Latent Variable Models to solve
this problem. However, existing implementations
of this technique require ground traces (wiﬁ data
collected sequentially) and are limited to signal-
rich environments. Due to the constraints of using
phones for this, we were restricted to non sequen-
tial data. Since this eleminates the possbility of
using traditional GP-LVM techniques, we created
a locally weighted regression based machine learn-
ing algorithm for geographical localization of a mo-
bile device in an indoor environment based on WiFi
signal strength data. Our contribution is a novel
approach to generating adequate likelihood models
based on locally weighted sums of Gaussian proba-
bility densities. The results show that our algorithm
is eﬀectively deduces the original ﬂoor plan of the
environment and presents a more accurate estimate
of the device’s location.

1

Introduction

There has long been interest in the ability to de-
termine the physical location of a device given only
WiFi signal strength. This problem, called WiFi
localization, has important applications in activity
recognition, robotics, and surveillance. This is an
extremely challenging task that hes been researched
for over a decade now. Recent advances in mobile

computing technology and the increasing availabil-
ity of WiFi networks have enabled more accurate
localization in indoor environments where GPS is
less precise. Our goal in particular was to ﬁnd a
way to localize something ubiquitous in today’s so-
ciety: the cell phone.

2 Description of Problem

There are several key challenges associated with lo-
calization, and in particular doing so with the limi-
tations imposed by using smart phone data. These
include data collection, power usage of the phones,
and the challenge of localization itself. All three of
these aspects add to the diﬃculty in this problem.

2.1 Data Collection

One obstacle to cell phone localization is in data
collection.
It is certainly desirable to take thou-
sands of scans of a particular building, and map it
to a ground truth map; however, the time and cost
of this method is prohibitively expensive. Instead,
an intelligent method for extracting the most infor-
mation with the least cost must be found. Instead
of this, we chose to use existing smart phone ap-
plications to assist us in data collection. Working
with a company that is developing other location
based software, we would piggyback data that we
would need along with theirs. This means that any-
one with this application installed will be collecting
data, and will not drain batteries more than would
ordinarily occur. While this certainly makes it sim-
ple to collect huge amounts of data in a relatively
short amount of time, it creates another problem:
which data do we need for a particular building.
This problem was beyond the scope of our current

1

goals, and for this pro ject, data was simply nar-
rowed down by hand to a speciﬁc building as nec-
essary.

2.2 Phone Limitations

Another obstacle to designing an algorithm for
smart phones are the limitations of the phones
themselves. As mentioned above, one ma jor lim-
itation for phones is battery life. This is in fact
the single largest obstacle to designing more com-
plex algorithms, as we cannot insist that the user
constantly be scanning wiﬁ networks in order to lo-
calize, as that would be an enourmous strain on
battery consumption. One aspect of phones that
we could not account for at all was dealing with the
wide variety of phones and corresponding hardware,
putting limits on how much we could trust the data
given to us. Finally, the computing and memory
requirements have to be taken into consideration.
While it is true that smart phones are highly capa-
ble machines, the users themselves don’t want an
application that takes gigabytes of data just to im-
prove accuracy in localization. Similarly, in order
for localization to be useful, it must be relatively
fast (ie ¡ 1-2 seconds). This also limits how we are
able to process incoming data.

2.3 Localization Challenges

The key challenge of localization is overcoming the
unpredictability of WiFi signal propagation through
indoor environments. The data distribution may
vary based on changes in temperature and humidity,
as well as the position of moving obstacles, such
as people walking throughout the building. This
uncertainty makes it diﬃcult to generate accurate
estimates of signal strength measurements. Thus,
the bulk of research in this area focuses on reﬁning
the location likelihood models from the available
data collected in the environment.

2.4 Approach

In order to resolve these challenges, we present a
machine learning based algorithm for localizing a
mobile device using a locally weighted regression
to map high-dimensional data to a likelihood func-
tion in a low-dimensional latent space. In our con-
text, the high-dimensional data represents signal

strength for all WiFi access points in the indoor
environment, and the low-dimensional space corre-
sponds to the geographical coordinates of the de-
vice’s location. Our technique considers that signal
strength correlates with physical location. Observa-
tions with similar signal strength measurements are
likely to be close to each other. This constraint is
important when dealing with data from close loops,
where the person visits a location at two diﬀerent
points in time. The data we collected consists of
signal strength measurements annotated with GPS
readings and error estimates. We collected data sets
via the method described above, and chose Packard
building to model, as it has a relatively simple lay-
out and we had the most data for this building. For
calculation, we oﬄoaded this to the server for two
reasons in particular. The ﬁrst, and most obvious,
is that local regression is non-parametric and thus
we would need to send a phone large amounts of
data in order to process it onboard. Second, this
allows us to use the signiﬁcantly higher processing
power of the servers.

3 Results

After paring down data for a speciﬁc building
(Packard in this case) we get a design matrix of
427 observations with a total of 191 detected ac-
cess points. We denote X as our design matrix,
with each row xn being a vector in Z191 with each
dimension representing the signal strength of each
access point (AP) detected by at least one observa-
tion. We also have the labels, Y , which represent
the estimated GPS location given. Each row of Y ,
yn contains latitude, longitude, and the error esti-
mate given by the phone. From here we can actu-
ally generate a likelihood function. The standard
N(cid:88)
equation is:
wi (yi − θT xi )2
i=1
(cid:32) −(cid:107)xi − x(cid:107)2
(cid:33)
We use the standard weight function,
2τ 2

wi = exp

J (θ) =

(1)

(2)

However, instead of performing a least squares re-
gression, we treat each yi as a guassian RV with

2

Figure 2: The likelihood function, plot-
ted over the area of the environment.

Figure 1: The original GPS readings are
black points. For the selected observation,
shown in yellow, we generated a likelihood
function, shown in a contour plot.

mean at it’s location, and a variance proportional
(cid:32) (cid:107)y − yi(cid:107)2
(cid:33)
to it’s error estimate. We simplify calculations by
converting the PDF of each yi to be in terms of r:
Pyi (r) ∝ exp
error2
We turn the environment into a grid of 1m x 1m
squares, over which the likelihood function is de-
ﬁned, and then choose the square that contains the
maximum likelihood. This yields our location esti-
N(cid:88)
mate y as:
i=1

wi ∗ Pyi ((cid:107)yi − y(cid:107))

J (y) =

/error2

(3)

(4)

While this function is certainly not convex, we
ﬁnd that in practice, this function is well behaved
and we can thus easily ﬁnd maximum estimates of
it. For each observation, we generated a likelihood
function using this equation. We then chose the
maximum value over the distribution to be our MLE
for the coordinates of the chosen observation. Iter-
ating over the entire data set, we generated a rough
plot of the building’s layout.
For a data set of 427 observations of 191 access
points, our algorithm had a run time of about 10
to 20 seconds. While this certainly seems slow, in
fact only one observation will have to be run for a
given person, which means that for a given observa-
tion, we can have a computation time of less than a
tenth of a second, an acceptable speed for the given
application.

3

Figure 3: Figure 3: Maximum likelihood
estimates (blue), contrasting with the orig-
inal data (green). We added a small noise
component (red) to the blue points because
many of the estimates were overlapping.

4 Comparison
techniques

of

localization

Throughout this pro ject we tried several diﬀer-
ent techniques to get more accurate localization
using WiFi. The two that are representative of
these methods are Gaussian Process Latent Vari-
able Models and WiFi triangulation.

4.1 GP-LVM

The currently most popular and arguably most
state of the art technique is the Gaussian Process
Latent variable model.
In this model, they use a
similar kernel to our in terms of w, a squared ex-
ponential weighting for WiFi points. However, they
also assign to each WiFi reading a latent variable
tied to the time the sample was taken. This allows
them to make the following assumptions: successive
positions in time have a proximity component, the
change in position is likely parallel to other similar
reading transitions, and orientation between succes-
sive points is relatively low. (this follows from the
fact that most hallways are straight corridors. Their
ﬁnal constraint, again like ours, is to assume that
similar signal strength readings possess similar coor-
dinates in space. While we began our testing using
this model, it was not very eﬀective, since we did
not have the temporal data that we needed. Data
collection for a single phone occurred at most once
every 15 seconds, and more commonly was on the
order of several minutes. This essentially zeroed
out any calculations involving the latent variables,
making this method ineﬀective.

4.2 Triangulation

This is certainly the most naive approach when
attempting localization. Essentially, one consid-
ers signal strengths to be distances from an Ac-
cess point with an exponentially decaying signal
strength and random noise factor, ε. When we tried
this, we used two steps: We began by using a por-
tion of the data to try to localize the APs nearby,
and from there used the rest of the data in for try-
ing to ﬁnd any error terms. This was even less ef-
fective than the above method, due to the faulty as-
sumption that signal strength decays uniformly as a
function of radius. As mentioned previously, walls,
furniture, and even other people in thte building

4

Figure 4: The same data points, overlaid
on top of Packard’s ﬁrst ﬂoor.

J., Millman, D.,
[Huang et al., 2011] Huang,
Quigley, M., Stavens, D., Thrun, S., and
Eﬃcient, generalized
Aggarwal, A. (2011).
indoor wiﬁ graphslam.
In Proceedings of the
IEEE International Conference on Robotics and
Automation.

[Siddiqi et al., 2003] Siddiqi, S., Sukhatme, G. S.,
and Howard, A. (2003). Experiments in monte-
carlo localization using wiﬁ signal strength.
In
Proceedings of the International Conference on
Advanced Robotics, Coimbra, Portugal.

[Yang et al., 2007] Yang, Q., Pan, S. J., and Zheng,
V. W. (2007). Estimating location using wi-ﬁ.
IEEE Intel ligent Systems.

can eﬀect the signal strength of a particular access
point, which makes it virtually impossible to use
this method without signiﬁcant error.

5 Conclusions

We developed an algorithm that predicts latent geo-
graphical coordinates based on observed WiFi data
by generating likelihood models based on locally
weighted sums of Gaussian distributions centered
at historical observations. Our algorithm was able
to deduce the general structure of the Packard’s
layout,
including the long hallway and the large
lobby area. From these results we observed, we
conclude that the algorithm can accurately local-
ize a mobile device. There remains much room for
future improvement. For example, further testing
with various bandwidths and threshold levels will
be needed to ﬁnd a better tradeoﬀ between bias
and variance. In future studies, we hope to include
timestamps into the design matrix and develop con-
straints based on time data. Once classiﬁcation
can be done with higher degrees of conﬁdence and
accuracy, implementation in a mobile environment
would be the next step. Moving the operations from
Matlab to C or Python could increase our compu-
tational speed to facilitate future integration with a
mobile application.

References

[Biswas and Veloso, 2010] Biswas, J. and Veloso,
M. (2010). Wiﬁ localization and navigation for
autonomous indoor mobile robots.
In Proceed-
ings of the IEEE International Conference on
Robotics and Automation.

[Ferris et al., 2007] Ferris, B., Fox, D.,
and
Lawrence, N. (2007). Wiﬁ-slam using gaussian
process latent variable models. In Proceedings of
the International Joint Conferences on Artiﬁcial
Intel ligence, pages 2480–2485.

[Howard et al., 2003] Howard, A., Siddiqi, S., and
Sukhatme, G. S. (2003). An experimental study
of localization using wireless ethernet.
In Pro-
ceedings of the International Conference on Field
and Service Robotics.

5

