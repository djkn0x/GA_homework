Compressive neural representation of sparse,
high-dimensional probabilities

xaq pitkow
Department of Brain and Cognitive Sciences
University of Rochester
Rochester, NY 14607
xpitkow@bcs.rochester.edu

Abstract

This paper shows how sparse, high-dimensional probability distributions could
be represented by neurons with exponential compression. The representation is a
novel application of compressive sensing to sparse probability distributions rather
than to the usual sparse signals. The compressive measurements correspond to
expected values of nonlinear functions of the probabilistically distributed vari-
ables. When these expected values are estimated by sampling, the quality of the
compressed representation is limited only by the quality of sampling. Since the
compression preserves the geometric structure of the space of sparse probability
distributions, probabilistic computation can be performed in the compressed do-
main. Interestingly, functions satisfying the requirements of compressive sensing
can be implemented as simple perceptrons.
If we use perceptrons as a simple
model of feedforward computation by neurons, these results show that the mean
activity of a relatively small number of neurons can accurately represent a high-
dimensional joint distribution implicitly, even without accounting for any noise
correlations. This comprises a novel hypothesis for how neurons could encode
probabilities in the brain.

1

Introduction

Behavioral evidence shows that animal behaviors are often inﬂuenced not only by the content of
sensory information but also by its uncertainty. Different theories have been proposed about how
neuronal populations could represent this probabilistic information [1, 2]. Here we propose a new
theory of how neurons could represent probability distributions, based on the burgeoning ﬁeld of
‘compressive sensing.’
An arbitrary probability distribution over multiple variables has a parameter count that is exponential
in the number of variables. Representing these probabilities can therefore be prohibitively costly.
One common approach is to use graphical models to parameterize the distribution in terms of a
smaller number of interactions. Here I consider an alternative approach. In many cases of interest,
only a few unknown states have high probabilities while the rest have neglible ones; such a distribu-
tion is called ‘sparse’. I will show that sufﬁciently sparse distributions can be described by a number
of parameters that is merely linear in the number of variables.
Until recently, it was generally thought that encoding of sparse signals required dense sampling at a
rate greater than or equal to signal bandwidth. However, recent ﬁndings prove that it is possible to
fully characterize a signal at a rate limited not by its bandwidth but by its information content [3, 4,
5, 6] which can be much smaller. Here I apply such compression to sparse probability distributions
over binary variables, which are, after all, just signals with some particular properties.

1

In most applications of compressive sensing, the ultimate goal is to reconstruct the original signal
efﬁciently. Here, we do not wish to reconstruct the signal at all. Instead, we use the guarantees that
the signal could be reconstructed to ensure that the signal is accurately represented by its compressed
version. Below, when we do reconstruct it is only to show that our method actually works in practice.
We don’t expect that the brain needs to explicitly reconstruct a probability distribution in some
canonical mathematical representation in order to gain the advantages of probabilistic reasoning.
Traditional compressive sensing considers signals that lives in an N -dimensional space but have
only S nonzero coordinates in some basis. We say that such a signal is S -sparse. If we were told
the location of the nonzero entries, then we would need only S measurements to characterize their
coefﬁcients and thus the entire signal. But even if we don’t know where those entries are, it still
takes little more than S linear measurements to perfectly reconstruct the signal. Furthermore, those
measurements can be ﬁxed in advance without any knowledge of the structure of the signal. Under
certain conditions, these excellent properties can be guaranteed [3, 4, 5].
The basic mathematical setup of compressive sensing is as follows. Assume that an N -dimensional
signal s has S nonzero coefﬁcients. We make M linear measurements y of this signal by applying
the M × N matrix A:
(1)
y = As
We would then like to recover the original signal s from these measurements. Under conditions on
the measurement matrix A described below, the original can be found perfectly by computing the
vector with minimal (cid:96)1 norm that reproduces the measurements,
(cid:107)s(cid:48)
(cid:107)(cid:96)1 such that As(cid:48) = y = As
ˆs = argmin
s(cid:48)
The (cid:96)1 norm is usually used instead of (cid:96)0 because (2) can be solved far more efﬁciently [3, 4, 5, 7].
Compressive sensing is generally robust to two deviations from this ideal setup. First, target signals
may not be strictly S -sparse. However, they may be ‘compressible’ in the sense that they are well
approximated by an S -sparse signal. Signals whose rank-ordered coefﬁcients fall off at least as fast
−1 satisfy this property [4]. Second, measurements may be corrupted by noise with bounded
as rank
amplitude . Under these conditions, the error of the (cid:96)1 -reconstructed signal ˆs is bounded by the
error of the best S -sparse approximation sS plus a term proportional to the measurement noise:
(cid:107)ˆs − s(cid:107)(cid:96)2 ≤ C0(cid:107)sS − s(cid:107)(cid:96)2 /√S + C1 
for some constants C0 and C1 [8].
Several conditions on A have been used in compressive sensing to guarantee good performance
[4, 6, 9, 10, 11]. Modulo various nuances, they all essentially ensure that most or all relevant sparse
signals lie sufﬁciently far from the null space of A: It would be impossible to recover signals in the
null space since their measurements are all zero and cannot therefore be distinguished. The most
commonly used condition is the Restricted Isometry Property (RIP), which says that A preserves (cid:96)2
norms of all S -sparse vectors within a factor of 1 ± δS that depends on the sparsity,
(4)
(1 − δS )(cid:107)s(cid:107)(cid:96)2 ≤ (cid:107)As(cid:107)(cid:96)2 ≤ (1 + δS )(cid:107)s(cid:107)(cid:96)2
If A satisﬁes the RIP with small enough δS , then (cid:96)1 recovery is guaranteed to succeed. For random
matrices whose elements are independent and identically distributed Gaussian or Bernoulli variates,
the RIP holds as long as the number of measurements M satisﬁes
(5)
M ≥ C S log N/S
for some constant C that depends on δS [8]. No other recovery method, however intractable, can
perform substantially better than this [8].

(3)

(2)

2 Compressing sparse probability distributions

Compressive sensing allows us to use far fewer resources to accurately represent high-dimensional
objects if they are sufﬁciently sparse. Even if we don’t ultimately intend to reconstruct the signal, the
reconstruction theorem described above (3) ensures that we have implicitly represented all the rel-
evant information. This compression proves to be extremely useful when representing multivariate
joint probability distributions, whose size is exponentially large even for the simplest binary states.

2

yi = Aip =

Consider the signal to be a probability distribution over an n-dimensional binary vector x ∈
{−1, +1}n , which I will write sometimes as a function p(x) and sometimes as a vector p indexed
by the binary state x. I assume p is sparse in the canonical basis of delta-functions on each state,
δx,x(cid:48) . The dimensionality of this signal is N = 2n , which for even modest n can be so large it
cannot be represented explicitly.
The measurement matrix A for probability vectors has size M × 2n . Each row corresponds to a
different measurement, indexed by i. Each column corresponds to a different binary state x. This
column index x ranges over all possible binary vectors of length n, in some conventional sequence.
For example, if n = 3 then the column index would take the 8 values
x ∈ {−−− ; −−+ ; −+− ; −++ ; +−− ; +−+ ; ++− ; +++}
Each element of the measurement matrix, Ai (x), can be viewed as a function applied to the binary
(cid:88)
state. When this matrix operates on a probability distribution p(x), the result y is a vector of M
expectation values of those functions, with elements
Ai (x)p(x) = (cid:104)Ai (x)(cid:105)p(x)
x
For example, if Ai (x) = xi then yi = (cid:104)xi (cid:105)p(x) measures the mean of xi drawn from p(x).
For suitable measurement matrices A, we are guaranteed accurate reconstruction of S -sparse prob-
ability distributions as long as the number of measurements is
(7)
M ≥ O(S log N/S ) = O(Sn − S log S )
The exponential size of the probability vector, N = 2n , is cancelled by the logarithm. For distri-
butions with a ﬁxed sparseness S , the required number of measurements per variable, M /n, is then
independent of the number of variables.1
In many cases of interest it is impractical to calculate these expectation values directly: Recall that
the probabilities may be too expensive to represent explicitly in the ﬁrst place. One remedy is to
(cid:88)
draw T samples xt from the distribution p(x), and use a sum over these samples to approximate the
expectation values,
t
The probability ˆp(x) estimated from T samples has errors with variance p(x)(1 − p(x))/T , which
is bounded by 1/4T . This allows us to use the performance limits from robust compressive sensing,
which according to (3) creates an error in the reconstructed probabilities that is bounded by
C1√T
(cid:107) ˆp − p(cid:107)(cid:96)2 ≤ C0(cid:107)pS − p(cid:107)(cid:96)2 +
where pS is a vector with the top S probabilities preserved and the rest set to zero. Strictly speaking,
(3) applies to bounded errors, whereas here we have a bounded variance but possibly large errors.
To ensure accurate reconstruction, we can choose the constant C1 large enough that errors larger
than some threshold (say, 10 standard deviations) have a negligible probability.

xt ∼ p(x)

yi ≈

Ai (xt )

1
T

(6)

(8)

(9)

2.1 Measurements by random perceptrons

In compressive sensing it is common to use a matrix with independent Bernoulli-distributed random
values, Ai (x) ∼ B( 1
2 ), which guarantees A satisﬁes the RIP [12]. Each row of this matrix represents
all possible outputs of an arbitrarily complicated Boolean function of the n binary variables x.
Biological neural networks would have great difﬁculty computing such arbitrary functions in a sim-
(cid:16)(cid:88)
(cid:17)
ple manner. However, neurons can easily compute a large class of simpler boolean functions, the
perceptrons. These are simple threshold functions of a weighted average of the input
Wij xj − θj
1Depending on the problem, the number of signiﬁcant nonzero entries S may grow with the number of
variables. This growth may be fast (e.g. the number of possible patterns grows as en ) or slow (e.g. the number
of possible translations of a given pattern grows only as n).

Ai (x) = sgn

(10)

j

3

where W is an M × n matrix. Here I take W to have elements drawn randomly from a standard
normal distribution, Wij ∼ N (0, 1), and call the resultant functions ‘random perceptrons’. An
example measurement matrix for random perceptrons is shown in Figure 1. These functions are
readily implemented by individual neurons, where xj is the instantaneous activity of neuron j ,
Wij is the synaptic weight between neurons i and j , and the sgn function approximates a spiking
threshold at θ .

Figure 1: Example measurement matrix Ai (x) for M = 100 random perceptrons applied to all 29 possible
binary vectors of length n = 9.

The step nonlinearity sgn is not essential, but some type of nonlinearity is: Using a purely linear
function of the states, A = W x, would result in measurements y = Ap = W (cid:104)x(cid:105). This provides
at most n linearly independent measurements of p(x), even when M > n. In most cases this is
not enough to adequately capture the full distribution. Nonlinear Ai (x) allow a greater number of
linearly independent measurements of p(x). Although the dimensionality of W is merely M × n,
which is much smaller than the 2n -dimensional space of probabilities, (10) can generate O(2n2
)
distinct perceptrons [13]. By including an appropriate threshold, a perceptron can assign any indi-
vidual state x a positive response and assign a negative response to every other state. This shows
that random perceptrons generate the canonical basis and can thus span the space of possible p(x).
In what follows, I assume that θ = 0 for simplicity.
In the Appendix I prove that random perceptrons with zero threshold satisfy the requirements for
compressive sensing in the limit of large n. Present research is directed toward deriving the condition
number of these measurement matrices for ﬁnite n, in order to provide rigorous bounds on the
number of measurements required in practice. Below I present empirical evidence that even a small
number of random perceptrons largely preserves the information about sparse distributions.

3 Experiments

3.1 Fidelity of compressed sparse distributions

To test random perceptrons in compressive sensing of probabilities, I generated sparse distributions
using small Boltzmann machines [14], and compressed them using random perceptrons driven by
samples from the Boltzmann machine. Performance was then judged by comparing (cid:96)1 reconstruc-
tions to the true distributions, which are exactly calculable for modest n.
In a Boltzmann Machine, binary states x occur with probabilities given by the Boltzmann distribu-
tion with energy function E (x),
(cid:62)
x − x(cid:62)J x
p(x) ∝ e−E (x)
(11)
E (x) = −b
determined by biases b and pairwise couplings J . Sampling from this distribution can be accom-
plished by running Glauber dynamics [15], at each time step turning a unit on with probability
p(xi = +1|x\i ) = 1/(1 + e−∆E ), where ∆E = E (xi = +1, x\i ) − E (xi = −1, x\i ). Here x\i
is the vector of all components of x except the ith.
For simulations I distinguished between two types of units, hidden and visible, x = (h, v). On
each trial I ﬁrst generated a sample of all units according to (11).
I then ﬁxed only the visible
units and allowed the hidden units to ﬂuctuate according to the conditional probability p(h|v) to be
represented. This probability is given again by the Boltzmann distribution, now with energy function
(cid:62)
E (h|v) = −(bh − Jhv v)(cid:62)h − h
(12)
Jhhh
4

State vector xMeasurement iAll bias terms b were set to zero, and all pairwise couplings J were random draws from a zero-
mean normal distribution, Jij ∼ N (0, 1
3 ). Experiments used n hidden and n visible units, with
n ∈ {8, 10, 12}. This distribution of couplings produced sparse posterior distributions whose rank-
−1 and were thus compressible [4].
ordered probabilities fell faster than rank
The compression was accomplished by passing the hidden unit activities h through random per-
ceptrons a with weights W , according to a = sgn (W h). These perceptron activities ﬂuctuate
along with their inputs. The mean activity of these perceptron units compressively senses the prob-
ability distribution according to (8). This process of sampling and then compressing a Boltzmann
distribution can be implemented by the simple neural network shown in Figure 2.

Figure 2: Compressive sensing of a probability distribution by model neurons. Left: a neural architecture for
generating and then encoding a sparse, high-dimensional probability distribution. Right: activity of each popu-
lation of neurons as a function of time. Sparse posterior probability distribution are generated by a Boltzmann
Machine with visible units v (Inputs), hidden units h (Samplers), feedforward couplings Jvh from visible to
hidden units, and recurrent connections between hidden units Jhh . The visible units’ activities are ﬁxed by
an input. The hidden units are stochastic, and sample from a probability distribution p(h|v). The samples
are recoded by feedforward weights W to random perceptrons a. The mean activity y of the time-dependent
perceptron responses captures the sparse joint distribution of the hidden units.

We are not ultimately interested in reconstruction of the large, sparse distribution, but rather the
distribution’s compressed representation. Nonetheless, reconstruction is useful to show that the
information has been preserved. I reconstruct sparse probabilities using nonnegative (cid:96)1 minimization
with measurement constraints [16, 17], minimizing
(cid:107)p(cid:107)(cid:96)1 + λ(cid:107)Ap − y(cid:107)2
(cid:96)2
where λ is a regularization parameter that was set to 2T in all simulations. Reconstructions were
quite good, as shown in Figure 3. Even with far fewer measurements than signal dimensions, recon-
struction accuracy is limited only by the sampling of the posterior. Enough random perceptrons do
the same (cid:96)1 norm: (cid:107)p(cid:107)(cid:96)1 = (cid:80)
not lose any available information.
In the context of probability distributions, (cid:96)1 reconstruction has a serious ﬂaw: All distributions have
x p(x) = 1! To minimize the (cid:96)1 norm, therefore, the estimate will
not be a probability distribution. Nonetheless, the individual probabilities of the most signiﬁcant
states are accurately reconstructed, and only the highly improbable states are set to zero. Figure 3B
shows that the shortfall is small: (cid:96)1 reconstruction recovers over 90% of the total probability mass.

(13)

3.2 Preserving computationally important relationships

There is value in being able to compactly represent these high-dimensional objects. However, it
would be especially useful to perform probabilistic computations using these representations, such
as marginalization and evidence integration. Since marginalization is a linear operation on the prob-
ability distribution, this is readily implementable in the linearly compressed domain. In contrast,
evidence integration is a multiplicative process acting in the canonical basis, so this operation will
be more complicated after the linear distortions of compressive measurement A. Nonetheless, such
computations should be feasible as long as the informative relationships are preserved in the com-
pressed space: Similar distributions should have similar compressive representations, and dissimilar

5

Samplers hPerceptrons aInputs vtimeneuronsfeedforwardWrecurrentJhhfeedforwardJvhFigure 3: Reconstruction of sparse posteriors from random perceptron measurements. (A) A sparse posterior
distribution over 10 nodes in a Boltzmann machine is sampled 1000 times, fed to 50 random perceptrons,
and reconstructed by nonnegative (cid:96)1 minimization. (B) A histogram of the sum of reconstructed probabilities
reveals the small shortfall from a proper normalization of 1. (C) Scatter plots show reconstructions versus
true probabilities. Each box uses different numbers of compressive measurements M and numbers of samples
T . (D) With increasing numbers of compressive measurements, the mean squared reconstruction error falls to
1/T = 10−3 , the limit imposed by ﬁnite sampling.

distributions should have dissimilar compressive representations. In fact, that is precisely the guar-
antee of compressive sensing: topological properties of the underlying space are preserved in the
compressive domain [18]. Figure 4 illustrates how not only are individual sparse distributions re-
coverable despite signiﬁcant compression, but the topology of the set of all such distributions is
retained.
For this experiment, an input x is drawn from a dictionary of input patterns X ⊂ {+1, −1}n .
Each pattern in X is a translation of a single binary template x0 whose elements are generated by
thresholding a noisy sinusoid (Figure 4A): x0
j = sgn [4 sin (2πj /n) + ηj ] with ηj ∼ N (0, 1). On
each trial, one of these possible patterns is drawn randomly with equal probability 1/|X |, and then
is measured by a noisy process that randomly ﬂips bits with a probability η = 0.35 to give a noisy
(cid:89)
pattern r . This process induces a posterior distribution over the possible input patterns
p(x)ηN −h(x,r) (1 − η)h(x,r)
1
1
p(x|r) =
p(ri |xi ) =
Z
Z
i
where h(x, r) is the Hamming distance between x and r . This posterior is nonzero for all patterns in
the dictionary. The noise level and the similarities between the dictionary elements together control
the sparseness.
1000 trials of this process generates samples from the set of all possible posterior distributions.
Just as the underlying set of inputs has a translation symmetry, the set of all possible posterior
distributions has a cyclic permutation symmetry. This symmetry can be revealed by a nonlinear
embedding [19] of the set of posteriors into two dimensions (Figure 4B).
Compressive sensing of these posteriors by 10 random perceptrons produces a much lower-
dimensional embedding that preserves this symmetry. Figure 4C shows that the same nonlinear em-
bedding algorithm applied to the reduced representation, and one sees the same topological pattern.
In compressive sensing, similarity is measured by Euclidean distance. When applied to probability
distributions it will be interesting to examine instead how well information-geometric measures like
the Kullback-Leibler divergence are preserved under this dimensionality reduction [20].

(14)

p(x)

4 Discussion

Probabilistic inference appears to be essential for both animals and machines to perform well on
complex tasks with natural levels of ambiguity, but it remains unclear how the brain represents and
manipulates probability. Present population models of neural inference either struggle with high-
dimensional distributions [1] or encode them by hard-to-measure high-order correlations [2]. Here I
have proposed an alternative mechanism by which the brain could efﬁciently represent probabilities:
random perceptrons. In this model, information about probabilities is compressed and distributed

6

State xState xProbabilityReconstructionMeasurement ratio M/nMeasurements M102Samples T103104ProbabilitySamplingerrorReconstructionsHistogramReconstructionerror (MSE)802032010–1163224810–3n=81012ACDSum of  1-reconstructedprobabilities0.9.99.999B(A)
Figure 4: Nonlinear embeddings of a family of probability distributions with a translation symmetry.
The process of generating posterior distributions: (i) A set of 100 possible patterns is generated as cyclic
translations of a binary pattern (only 9 shown). With uniform probability, one of these patterns is selected (ii),
and a noisy version is obtained by randomly ﬂipping bits with probability 0.35 (iii). From such noisy patterns,
an observer can infer posterior probability distributions over possible inputs (iv). (B) The set of posteriors from
1000 iterations of this process is nonlinearly mapped [19] from 100 dimensions to 2 dimensions. Each point
represents one posterior and is colored according to the actual pattern from which the noisy observations were
made. The permutation symmetry of this process is revealed as a circle in this mapping. (C) This circular
structure is retained even after each posterior is compressed into the mean output of 10 random perceptrons.

in neural population activity. Amazingly, the brain need not measure any correlations between the
perceptron outputs to capture the joint statistics of the sparse input distribution. Only the mean
activities are required. Figure 2 illustrates one network that implements this new representation, and
many variations on this circuit are possible.
Successful encoding in this compressed representation requires that the input distribution be sparse.
Posterior distributions over sensory stimuli like natural images are indeed expected to be highly
sparse: the features are sparse [21], the prior over images is sparse [22], and the likelihood pro-
duced by sensory evidence is usually restrictive, so the posteriors should be even sparser. Still, it
will be important to quantify just how sparse the relevant posteriors are under different conditions.
This would permit us to predict how neural representations in a ﬁxed population should degrade as
sensory evidence becomes weaker.
Brains appear to have a mix of structure and randomness. The results presented here show that
purely random connections are sufﬁcient to ensure that a sparse probability distribution is properly
encoded. Surprisingly, more structured connections cannot allow a network with the same computa-
tional elements to encode distributions with substantially fewer neurons, since compressive sensing
is already nearly optimal [8]. On the other hand, some representational structure may make it easier
to perform computations later. Note that unknown randomness is not an impediment to further pro-
cessing, as reconstruction can be performed even without explicit knowledge of random perceptron
measurement matrix [23].
Even in the most convenient representations, inference is generally intractable and requires approx-
imation. Since compressive sensing preserves the essential geometric relationships of the signal
space, learning and inference based on these relationships may be no harder after the compression,
and could even be more efﬁcient due to the reduced dimensionality. Biologically plausible mech-
anisms for implementing probabilistic computations in the compressed representation is important
work for the future.

Appendix: Asymptotic orthogonality of random perceptron matrix

To evaluate the quality of the compressive sensing matrix A, we need to ensure that S -sparse vectors
are not projected to zero by the action of A. Here I show that the random perceptrons are asymp-
totically well-conditioned: ˆA(cid:62) ˆA → I for large n and M , where ˆA = A/√M . This ensures that
distinct inputs yield distinct measurements.

7

nonlinear embedding ofposterior distributions (N=100)possible patternstrue pattern xnoisy pattern rpattern indexposteriornonlinear embedding ofcompressed posteriors (M=10)100150truepatternindexBAiiiiiiivC1100X=

+

=

+

(15)

First I compute the mean and variance of the mean inner product (cid:104)Cxx(cid:48) (cid:105)W between columns of ˆA
for a given pair of states x (cid:54)= x(cid:48) . For compactness I will write wi for the ith row of the perceptron
weight matrix W . Angle brackets (cid:104) (cid:105)W indicate averages over random perceptron weights Wij ∼
(cid:68)(cid:88)
(cid:69)
(cid:88)
N (0, 1). We ﬁnd
ˆAi (x) ˆAi (x(cid:48) )
i (cid:104)sgn (wi ·x) sgn (wi ·x(cid:48) )(cid:105)W
1
(cid:104)Cxx(cid:48) (cid:105)W =
M
i
W
and since the different wi are independent, this implies that
(cid:104)Cxx(cid:48) (cid:105)W = (cid:104)sgn (wi ·x) sgn (wi ·x(cid:48) )(cid:105)W
(16)
The n-dimensional half-space in W where sgn (wi · x) = +1 intersects with the corresponding
half-space for x(cid:48) in a wedge-shaped region with an angle of θ = cos−1 (x · x(cid:48)/(cid:107)x(cid:107)(cid:96)2 (cid:107)x(cid:48)
(cid:107)(cid:96)2 ). This
angle is related to the Hamming distance h = h(x, x(cid:48) ):
θ(h) = cos−1 (x · x(cid:48)/n) = cos−1 (1 − 2h/n)
(17)
The signs of wi · x and wi · x(cid:48) agree within this wedge region and its reﬂection about W = 0, and
disagree in the supplementary wedges. The mean inner product is therefore
(cid:104)Cxx(cid:48) (cid:105)W =P [ sgn (wi ·x) = sgn (wi ·x(cid:48) )] − P [ sgn (wi ·x) (cid:54)= sgn (wi ·x(cid:48) )]
(18)
(19)
=1 − 2
π θ(h)
Vxx(cid:48) = (cid:10)C 2
xx(cid:48) (cid:11)
The variance of Cxx(cid:48) caused by variability in W is given by
(cid:68) ˆAi (x) ˆAi (x(cid:48) ) ˆAj (x) ˆAj (x(cid:48) )
(cid:69)
(cid:68) ˆA2
(cid:69)
(cid:88)
(cid:88)
W − (cid:104)Cxx(cid:48) (cid:105)2
W
i (x(cid:48) )
(cid:42)
(cid:43)
W − (cid:104)Cxx(cid:48) (cid:105)2
i (x) ˆA2
(cid:28) sgn (wi ·x)
(cid:29)2
=
(cid:88)
(cid:88)
W
i(cid:54)=j
W
i=j
sgn (wi ·x(cid:48) )2
sgn (wi ·x(cid:48) )
sgn (wi ·x)2
W− (cid:104)Cxx(cid:48) (cid:105)2
W (22)
√M
√M
M
M
i (cid:54)=j
i
W
π θ(h(x, x(cid:48) ))(cid:1)2(cid:17)
(cid:16)
M 2 − M
(cid:0)1 − 2
1
(1 − 2θ(h)/π)2 − (cid:104)Cxx(cid:48) (cid:105)2
+
W
M 2
M
1
1 −
M
This variance falls with M , so for large numbers of measurements M the inner products between
columns concentrates around the various state-dependent mean values (19).
Next I consider the diversity of inner products for different pairs (x, x(cid:48) ) of binary state vectors. I
take the limit of large M so that the diversity is dominated by variations over the particular pairs,
tion, p(h) = (cid:0)n
(cid:1)2−n with mean n/2 and variance n/4. Designating by an overbar the average over
rather than by variations over measurements. The mean inner product depends only on the Hamming
distance h between x and x(cid:48) , which for sparse signals with random support has a binomial distribu-
h
randomly chosen states x and x(cid:48) , the mean C and variance δC 2 of the inner product are
(cid:19)2
(cid:18) ∂C
π cos−1 (1 − 2h
C = (cid:104)Cxx(cid:48) (cid:105)W = 1 − 2
n ) = 0
4
16
n
δC 2 = δh2
π2n2 =
=
π2n
∂h
4
This proves that in the limit of large n and M , different columns of the random perceptron mea-
surement matrix have inner products that concentrate around 0. The matrix of inner products is
thus orthonormal almost surely, ˆA(cid:62) ˆA → I . Consequently, with enough measurements the random
perceptrons asymptotically provide an isometry. Future work will investigate how the measurement
matrix behaves for ﬁnite n and M , which will determine the number of measurements required in
practice to capture a signal of a given sparseness.

(25)

=

=

(20)

(21)

(23)

(24)

(26)

Acknowledgments

Thanks to Alex Pouget, Jeff Beck, Shannon Starr, and Carmelita Navasca for helpful conversations.

8

References
[1] Ma W, Beck J, Latham P, Pouget A (2006) Bayesian inference with probabilistic population codes. Nat
Neurosci 9: 1432–8.
[2] Berkes P, Orb ´an G, Lengyel M, Fiser J (2011) Spontaneous cortical activity reveals hallmarks of an
optimal internal model of the environment. Science 331: 83–7.
[3] Cand `es E, Romberg J, Tao T (2006) Robust uncertainty principles: Exact signal reconstruction from
highly incomplete frequency information. IEEE Transactions on Information Theory 52: 489–509.
[4] Cand `es E, Tao T (2006) Near-optimal signal recovery from random projections: Universal encoding
strategies? IEEE Transactions on Information Theory 52: 5406–5425.
[5] Donoho D (2006) Compressed sensing. IEEE Transactions on Information Theory 52: 1289–1306.
[6] Cand `es E, Plan Y (2011) A probabilistic and RIPless theory of compressed sensing. IEEE Transactions
on Information Theory 57: 7235–7254.
[7] Donoho DL, Maleki A, Montanari A (2009) Message-passing algorithms for compressed sensing. Proc
Natl Acad Sci USA 106: 18914–9.
[8] Cand `es E, Wakin M (2008) An introduction to compressive sampling. Signal Processing Magazine 25:
21–30.
[9] Kueng R, Gross D (2012) RIPless compressed sensing from anisotropic measurements. Arxiv preprint
arXiv:12051423 .
[10] Calderbank R, Howard S, Jafarpour S (2010) Construction of a large class of deterministic sensing matri-
ces that satisfy a statistical isometry property. Selected Topics in Signal Processing 4: 358–374.
[11] Gurevich S, Hadani R (2009) Statistical rip and semi-circle distribution of incoherent dictionaries. arXiv
cs.IT.
[12] Mendelson S, Pajor A, Tomczak-Jaegermann N (2006) Uniform uncertainty principle for Bernoulli and
subgaussian ensembles. arXiv math.ST.
[13] Irmatov A (2009) Bounds for the number of threshold functions. Discrete Mathematics and Applications
6: 569–583.
[14] Ackley D, Hinton G, Sejnowski T (1985) A learning algorithm for Boltzmann machines. Cognitive
Science 9: 147–169.
[15] Glauber RJ (1963) Time-dependent statistics of the Ising model. Journal of Mathematical Physics 4:
294–307.
[16] Yang J, Zhang Y (2011) Alternating direction algorithms for L1 problems in compressive sensing. SIAM
Journal on Scientiﬁc Computing 33: 250–278.
[17] Zhang Y, Yang J, Yin W (2010) YALL1: Your ALgorithms for L1. CAAM Technical Report : TR09-17.
[18] Baraniuk R, Cevher V, Wakin MB (2010) Low-dimensional models for dimensionality reduction and
signal recovery: A geometric perspective. Proceedings of the IEEE 98: 959–971.
[19] der Maaten LV, Hinton G (2008) Visualizing high-dimensional data using t-SNE. Journal of Machine
Learning Research 9: 2579–2605.
[20] Carter KM, Raich R, Finn WG, Hero AO (2011) Information-geometric dimensionality reduction. IEEE
Signal Process Mag 28: 89–99.
[21] Olshausen BA, Field DJ (1996) Emergence of simple-cell receptive ﬁeld properties by learning a sparse
code for natural images. Nature 381: 607–9.
[22] Stephens GJ, Mora T, Tkacik G, Bialek W (2008) Thermodynamics of natural images. arXiv q-bio.NC.
[23] Isely G, Hillar CJ, Sommer FT (2010) Deciphering subsampled data: adaptive compressive sampling as
a principle of brain communication. arXiv q-bio.NC.

9

