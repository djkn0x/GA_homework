Machine Learning and Capri, a Commuter Incentive
Program
Hossein Karkeh Abadi, Jia Shuo Tom Yue
Stanford Center for Societal Networks, https://scsn.stanford.edu/

1

I . INTRODUC T ION
Societal problems, such as peak hour congestion, over-usage
of water, and power shortages, have become more frequent
and pronounced in the last decade. Fortunately, technology
can now aid in the search for solutions of such problems.
Capri1 (short for Congestion and Parking Relief Incentives)
is a program currently underway at Stanford, which seeks to
demonstrate that technology can be used to reduce peak hour
congestion in a large urban area.

A. Background: trafﬁc congestion at Stanford
Stanford is one of the largest employers in the County
of Santa Clara. During morning and afternoon peak hours,
trafﬁc in and out of the main Stanford campus have caused
congestion on major thoroughfares in the surrounding cities
(such as El Camino Real and Page Mill Road). In the fall
of 2000, Stanford established a General Use Permit with the
County, specifying the conditions under which Stanford will
be allowed to begin new constructions[1]. Per the agreement,
Stanford needs to control the amount of peak hour trafﬁc
in and out of the campus in the mornings and evenings[2].
Capri is a program started by the Stanford Center for Societal
Networks2 aimed at incentivizing daily commuters to drive
into and out of the campus at off-peak hours, thereby relieving
trafﬁc pressure during peak hours and helping Stanford comply
with the GUP.

B. Capri
Capri leverages RFID technology to provide commuters
with near-instantaneous feedback on their driving behavior. A
Capri user is given a RFID tag to apply onto her windshield.
Each of the user’s commutes is captured by a RFID tag
scanner when the user drives through one of the 10 predeﬁned
entrances/exits around the Stanford Campus. If the commute’s
capture time is within the “off-peak” period (7-8AM, 9-10AM
for inbound commutes; 4-5PM, 6-7PM for outbound com-
mutes), the user is rewarded with “credits”. These credits can
be deterministically or probabilistically redeemed for cash,
paid out monthly.
As of November 2012, Capri has been in operation for 7
months; we have registered over 2000 Stanford commuters,
90% of whom have taken at least one trip with a Capri RFID
tag. Capri has captured over 170,000 commutes and paid out
over $60,000.

1 https://stanfordcapri.org/
2 http://scsn.stanford.edu/

C. Machine learning opportunities
Capri has copious amounts of commute data. By using
machine learning, we are able to understand behaviors and
changes in Stanford’s commuting population. We are also able
to use machine learning to provide guidance for improving
Capri’s incentives to better target
this population. In this
report, we focus our attention on two applications of machine
learning:
• Improving Capri trip scanning accuracy. RFID tags can
experience wear and tear; improper installations, bending,
etc. will also cause the tags to degrade. A degraded tag
may only scan sporadically or not at all. When a user is
not credited for an eligible commute, the Capri Team has
to re-issue a new tag and add missed commutes. For this
reason, it is desired to have a system that would detect
when the user is likely to have had a uncredited commute.
• Carpool matching. Until now, there has been no easy way
for commuters who live in the same area to discover each
other and to form carpool partnerships. However, Capri
can be used to group participants who live in the same
area, facilitating carpool matching.

I I . BU I LD ING A COMMUT ER MODE L
We wish to build a model to characterize the commute
behaviour of each user. To do this, we have taken anonymous
data from Capri’s database of commutes. Each item consists
of the following attributes:
• Anonymous user id: used to aggregate all commutes
belonging to a certain user. The id cannot be used to
reveal the identity of the user.
• Commute time.
• Location: speciﬁc entrance/exit used for the commute.
Figure 1 shows the locations deﬁned for Capri.

A. Commute model
We start by making the following assumptions:
1) Each user may have different driving times on different
days of the week. For example, a student may arrive
early on Monday and Wednesday for her CS229 class,
but later on other days.
2) On the same day of the week, the user sticks to roughly
the same schedule. This might change between quarters,
which would necessitate re-building the model for each
academic quarter.

2

large variances in user 1’s models, versus the very small
variances user 3’s models.
• Users keep different schedules for different days of the
week; for example, user 2 arrives after 9PM and leaves
after 5PM on Tuesdays, Thursdays and Fridays, but arrive
before 8PM and leave before 5PM on Wednesdays.
• Capri is effective in incentivizing users to avoid commut-
ing into/out of campus during peak hours, shaded in grey.
User 2, when unable to enter the campus at her dominant
time, still strives to avoid the peak hours by moving an
hour before or after.
However, this model does not take into consideration transient
occurences; for example, construction on Junipero Serra Blvd.
may delay trafﬁc in the area by up to 30 minutes on Nov 1.
We create a different model, called “day model”, to deal with
such events.

B. Day model
The day model DMr,t captures the distribution of commutes
on a certain date r , at a certain time t (morning or afternoon)
over all locations. (We do not have enough data to create
separate models for each location on a certain day.) We quickly
see that modelling the commutes for a day model using one
Gaussian RV is insufﬁcient. Instead, we consider a Gaussian
mixture model with three Gaussians, describing:
• commuters who tend to commute prior to the peak hour;
• commuters who tend to commute during the peak hour;
• commuters who tend to commute after the peak hour.
We use the Matlab gmdistribution.fit function to
arrive at these models. Each DMr,t is described by 9 variables:
for 1 ≤ g ≤ 3, µDM ,r,t,g , σ2
DM ,r,t,g and φDM ,r,t,g are the
mean,
the variance, and the mixture ratio of Gaussian g ,
respectively. WLOG, assume that µDM ,r,t,1 < µDM ,r,t,2 <
µDM ,r,t,3 . See Figure 2 for an example of the Gaussian
mixture trained.
We also create an all-days model that captures the dis-
tribution of all commutes on all dates at a certain time of
day t, ADMt . Combined, these two sets of models give us
information about transient events occuring on certain dates
that will inﬂuence our predictions. ADMt is described by 9
variables µADM ,t,g , σ2
ADM ,t,g and φADM ,t,g as deﬁned above.
See Figure 2 for the ADMt Gaussians trained.
We see that
the three Gaussians assumption is largely
correct; for morning commutes, a signiﬁcant number of com-
muters arrive in the morning prior to the peak hour. The
Gaussian corresponding to this set of commutes has a large
mixture percentage. Peak hour commutes in the morning are
reduced. This effect is less pronounced in afternoon commutes;
we elaborate on possible reasons in section 3.2.

C. Morning-evening correlations
We further note that a commuter’s morning and afternoon
commutes are correlated when she enters the campus prior
to 8AM, and leaves prior to 5PM, as shown in Figure 3.
However, there is very weak correlation between entrance time
and departure time at other times of the day. Therefore, we

Figure 1. Capri RFID scanner locations.

Based on these two assumptions, for each commuter, we need
to build 10 models: for each day d of the week (1 ≤ d ≤ 5),
two models are necessary, one corresponding to the morning
commute (t = 1), and the other corresponding to the afternoon
commute (t = 2). We call each model a “commute model”,
denoted CMd,t .
Furthermore, the user may prefer to drive through different
locations. Therefore, we use Gaussian Discriminant Analysis
to arrive at a model for each commute. Let the samples be
d,t , · · · , x(m)
x(1)
d,t , corresponding to the commute times of all
the commutes taken by the commuter on a certain day d of
the week and a certain time of day t. The target variables
d,t , · · · , y (m)
y (1)
label the locations used for each commute,
(cid:111)
(cid:110)
m(cid:88)
d,t
taking integer values between 1 and 10. Let
y (j )
d,t = i
φCM ,d,t,i = P r(yd,t = i) =
j=1
variable xd,t |yd,t = i ∼ N (cid:16)
(cid:17)
be the probability of the user taking location i. For each
location, we model the commutes via a Gaussian random
j=1 1 (cid:8)y (j ) = i(cid:9) x(j )
(cid:80)m
, deﬁned by:
µCM ,d,t,i , σ2
CM ,d,t,i
j=1 1 (cid:8)y (j ) = i(cid:9)
(cid:80)m
(cid:1)2
j=1 1 (cid:8)y (j ) = i(cid:9) (cid:0)x(j ) − µi
(cid:80)m
d,t
µCM ,d,t,i =
j=1 1 (cid:8)y (j ) = i(cid:9)
(cid:80)m
Now, if a commute is not recorded on a certain day ˆd at a
certain time ˆt, the most likely location ˆi and time ˆx for her
commute is given by

σ2
CM ,d,t,i =

.

1
m

1

ˆi = arg max
P r(y ˆd,ˆt = i) = arg max
φCM , ˆd,ˆt,i
i
i
p(x|y ˆd,ˆt = ˆi) = µCM , ˆd,ˆt,ˆi .
ˆx = arg max
x
We illustrate these models for three particular users in
Figure 2. We can discern certain trends, and conﬁrm our
assumptions about commuting behaviour:
• Some users have a large variance in arrival time, while
others keep very tight schedules. This can be seen by the

3

Figure 2. Models created: (a) user models for three users; for each day of the week and each time of the day, the most likely location is used and the time
distribution for that location is shown. (b) day model for October 3, 2012. (c) all days model.

ˆr and time of day ˆt (morning/afternoon) via the following
algorithm:
• Let ˆi = arg maxi φCM , ˆd,ˆt,i be the most likely location the
user commuted through, where ˆd is the day of the week
(cid:16)
(cid:17)
corresponding to ˆr . Use µCM , ˆd,ˆt,ˆi as a rough estimate of
the user’s commute time.
• Let ˆg = arg maxg φADM ,ˆt,g pADM ,ˆt,g
be the
µCM , ˆd,ˆt,ˆi
most likely Gaussian corresponding to the user’s rough
estimate commute time.
• Consider the day model DM ˆr,ˆt . This is the day model
describing the overall commute condition on date ˆr and
time of day ˆt. Let d = µDM , ˆr,ˆt,ˆg − µADM ,ˆt,ˆg . d describes
the delay (or anti-delay) caused by external factors on
date ˆr .
• Then we estimate the commute time for the user to be
x = µCM , ˆd,ˆt,ˆi + d.

Figure 3. Density of morning-afternoon trip pairs. Darker regions indicate
more commuters making both morning and afternoon trips in the same day.

do not consider morning and evening commutes times to be
correlated, and we do not use this information in our models.

I I I . A P PL ICAT ION : PRED IC T ING COMMUT E T IM E S
A straightforward application of the model is to predict
commute times for missed commutes.

A. Model-based prediction
To predict a user’s commute time, we combine information
given by the commute model and the day model. For a user,
we predict her commute time and location for particular date

B. Results

We train the model described in section 2 with Capri
commute data taken between June 1 and Oct 31; a randomly
chosen subset is withheld for testing. The error historgram is
reported in Figure 4. The error for each prediction is calculated
as  = xestimated − xactual ; we report the mean, variance
and absolute mean of the errors, calculated for all commutes,
morning commutes and afternoon commutes. These ﬁgures are
given in Table I.

morningafternoon  7891016171819102030405060708090100µ(k)
CM ,d,t =

(cid:16)

(cid:17)2

(cid:17)2 − (cid:16)
µ(k)
µ(k)
CM ,d,t,i
CM ,d,t
 m − (µ(i)
(cid:113)
CM ,d,t − µ(j )
CM ,d,t )
CM ,d,t + σ2(j )
σ2(i)
CM ,d,t

 .

4

(1)

(2)

(3)

σ2(k)
CM ,d,t =

10(cid:88)
φ(k)
CM ,d,t,iµ(k)
10(cid:88)
10(cid:88)
CM ,d,t,i
i=1
(cid:16)(cid:12)(cid:12)(cid:12)T (i)
(cid:12)(cid:12)(cid:12) < m
(cid:17)
CM ,d,t,iσ2(k)
φ(k)
φ(k)
CM ,d,t,i +
CM ,d,t,i
(cid:17)
(cid:16)−m < T (i)
i=1
i=1
CM ,d,t − T (j )
p(i,j )
d,t,m = P r
CM ,d,t
 − Q
 −m − (µ(i)
CM ,d,t − T (j )
= P r
CM ,d,t < m
(cid:113)
CM ,d,t − µ(j )
CM ,d,t )
CM ,d,t + σ2(j )
σ2(i)
CM ,d,t

= Q

Equations used for carpool matching.

Figure 4. Prediction results.

Trips
All
Morning
Afternoon

Mean
4.36
-5.18
14.38

St. dev.
21.23
11.88
24.14

Abs. mean
14.27
9.16
19.64

Table I
PRED ICT ION ERROR S IN M INU T E S .

the morning estimates are more
The results show that
consistent and accurate. This is in line with our expecta-
tions, as morning commute times are largely dictated by
class and work schedules, and commuters tend to follow
roughly the same schedule on a day-to-day basis. However,
afternoon commute times are dictated by more factors, such
as after-work activities. Therefore, afternoon commute times
are more variable and less schedule-based. Prediction failures
(instances where the predicted commute time differs from
actual commute time by a signiﬁcant amount) are largely due
to commuters deviating from their normal schedule, and are
more pronounced in the afternoon.

IV. CAR POO L MATCH ING

Capri may introduce additional incentives whereby carpool
drivers are incentivized differently than single drivers. For
this reason, it may be useful for Capri to match drivers in
the database to form carpool partners. To perform carpool
matching, we consider the zipcodes provided by users when

Figure 5. Top 20 zipcodes of Capri participants.

they register. Figure 5 shows the top 20 zipcodes of Capri
participants.
We use the models created to estimate the probability
that two users who reside in a same zipcode may want to
commute together on a given day of the week. Suppose
ck , k = 1, · · · , K , represent
the commuters of a certain
zipcode, and φ(k)
CM ,d,t,i , µ(k)
CM ,d,t,i and σ2(k)
CM ,d,t,i are their
corresponding parameters as estimated by the model. In our
new model, we assume that the carpool partnerships are not
affected by the difference of entrance/exit locations used by
commuters. In practice, this is valid as entrance/exit locations

−20200.20.40.60.81Testing error (hours)FrequencyAll trips−20200.20.40.60.81Testing error (hours)FrequencyMorning trips−20200.20.40.60.81Testing error (hours)FrequencyAfternoon trips5

Figure 6. Carpool matching results for zipcode 94025. (a) number of pairs as a function of mthr with pthr = 0.7. (b) number of pairs as a function of
pthr with mthr = 20 minutes. (c) sample matchings with pthr = 0.7 and mthr = 20 minutes.

are strongly correlated with zipcodes. We deﬁne new random
variables T (k)
CM ,d,t as the entrance/exit time of commuter ck
on a certain day d of the week and a certain direction t.
N (cid:16)
(cid:17)
Furthermore, we assume that variables T (k)
CM ,d,t are Gaussian
CM ,d,t ∼
with mean µ(k)
CM ,d,t , i.e. T (k)
CM ,d,t , and variance σ2(k)
µ(k)
CM ,d,t , σ2(k)
. Using our previous model parameters,
CM ,d,t
the values of µ(k)
CM ,d,t and σ2(k)
CM ,d,t can be computed by
equations (1) and (2), derived from the Law of Conditional
Variances. For each day d of the week and direction t we
can estimate the probability p(i,j )
d,t,m that two users ci and cj
commute within m minutes of each other by equation (3).
We suggest two commuters to carpool on day d of the
week if for a certain threshold mthr , the calculated probability
p(i,j )
exceeds a certain probability threshold pthr for both
d,t,mthr
morning and evening commutes. Figure 6 shows the number
of pairs of commuters for zipcode 94025 who could become
carpool partners according to our carpool matching method,
and a sample carpool matching done for this zipcode on
Mondays with thresholds mthr = 20 minutes and pthr = 0.7.
We are able to identify a few potential pairs of carpool
partners. Furthermore, there is one well-connected sub-graph,
suggesting that a few commuters could beneﬁt from vanpool-
ing.

V. OTH ER MOD E L S : K -M EAN S C LU ST ER ING
Registered commuters can be classiﬁed into four different
groups according to their afﬁliations with Stanford: faculties,
staffs, students and others. It would be beneﬁcial to classify
commuters using an unsupervised learning method such as
K-means. In order to employ K-means algorithm, we ﬁrst
estimate the empirical distributions for both entrance/exit times
for each commuter and then feed them to the algorithm as
features. Let the samples x(1) , · · · , x(m) be the entrance times
of all the morning commutes taken by a certain commuter.
In our model we break down the time interval 7-10AM into
half-hour time slots, Ti for i = 1, 2, .., 6, and estimate the
(cid:110)
(cid:111)
m(cid:88)
empirical distributions of entrance time as
P r(t ∈ Ti ) =
x(j ) ∈ Ti
j=1

1
m

1

.

The same approach can be done on evening commutes to
estimate the empirical distribution of exit times. So, in this
model the feature vectors are 12 dimensional. If we feed these
features as the input to the K-means algorithm, then for k = 2
the result is shown in Table II.

Faculty
Staff
Students
Others

Cluster 1
18%
42%
7%
10%

Cluster 2
82%
58%
93%
90%

Table II
2 C LU ST ER S V S A FFIL IAT ION S .

Although this clustering algorithm put most of the students
in one cluster (students are more likely to enter the campus
after 9am), both clusters have a remarkable number of staff
members. We repeated the algorithm for k = 3 and k = 4 but
again all the clusters contain commuters from all afﬁliations.
So, It seems that we don’t have sufﬁcient data to classify com-
muters; we need to add more features in our implementation
to get better results.

V I . CONC LU S ION S
We have created a model for commutes, using anonymous
data from the Capri commutes database. We have been able
to predict commute times for missing commutes in this model
with a fair degree of accuracy. We also used this model to
create a carpooling recommendation system where commuters
in the same zipcode are matched based on commute behiavour,
and similar commuters are recommended as carpool partners.
We also attempted to classify commuters using an unsuper-
vised algorithm with features generated from their commute
times. The results show that commute times alone are not
sufﬁcient for generating accurate clusters.

R E FER ENC E S
[1] Stanford University General Use Permit Conditions of Approval. Re-
trieved from http://gup.stanford.edu/pdf/FINAL_GUP%202000.pdf, Nov
19, 2012.
[2] Stanford University Parking and Transportation Services. Frequently
Asked Questions: Stanford and the GUP. Retrieved from http://transporta-
tion.stanford.edu/pdf/GUP_FAQs.pdf, Nov 19, 2012.

