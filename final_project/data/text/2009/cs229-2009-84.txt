Online Parameter Estimation for the Adaptive Control of
Unmanned Aerial Vehicles

Tristan Flanzer and S. Andrew Ning

December 10, 2009

1

Introduction

2 Unscented Kalman Filter

The accurate modeling of aircraft dynamics is
essential when applying optimal control algorithms
to unmanned aircraft. However, for low cost vehicles
the dynamics may be diﬃcult to predict. A number
of factors work against the engineer; the aircraft is
more likely to suﬀer manufacturing imperfections
and rely on relatively crude actuation mechanisms,
atmospheric disturbances play a signiﬁcant role
in performance, and under these conditions some
aerodynamic performance parameters are diﬃcult
to accurately predict. Furthermore, a hard landing
or other disturbance could easily alter the control
surface trims of the aircraft and perhaps even it’s
dynamic response. Finally, low cost aircraft are more
susceptible to actuator failures in ﬂight. All of these
factors motivate online parameter estimation. Our
strategy is outlined as follows:

Repeat the following until ob jective is obtained (e.g.
waypoint is reached) {

1. Use a Kalman ﬁlter and sensor data to provide
estimate of aircraft state.

2. Perform actions based on current control gain
matrix and current error in reaching desired
state.

3. Every two seconds re-linearize the dynamic equa-
tions of motion about the current state and es-
timate control gains to maximize a quadratic re-
ward function.

4. Every ten seconds make a maximum a posteri-
ori estimate of aerodynamic parameters based on
past states and prior knowledge of the parame-
ters.

}

In an attempt to reproduce conditions in hardware,
we use a special type of Kalman ﬁlter known as an
Unscented Kalman Filter [1] to provide an estimate
of the aircraft state based on noisy measurements.
Like extended Kalman ﬁlters, UKFs allow estimation
of non-linear functions. Kalman ﬁlters consist of two
steps: prediction, followed by update. The prediction
phase takes the previous state estimate and produces
one for the current time step. In the update step, the
current prediction is combined with current observa-
tion to reﬁne the estimate. The state of the ﬁlter
is represented by the a posteriori state estimate and
a posteriori error covariance matrix. The UKF pre-
serves much of this high level architecture. It diﬀers
in that the predict and update functions can be non-
linear, and that rather than linearizing the underly-
ing model as done using an EKF, the UKF propa-
gates a set of points through the nonlinear state and
measurement functions and recovers an estimate of
the mean and covariance of the state. The under-
lying intuition is that ‘it is easier to approximate a
probability distribution than it is to approximate an
arbitrary nonlinear function or transformation’. Fig-
ure 1 shows output from a simulation demonstrating
the accuracy of the state estimates. Here it is as-
sumed that GPS position and velocity information
is received at 4 Hz and that IMU data consisting of
three axis accelerometer and gyroscopic data is used
to advance the state estimate at 20 Hz.

3 Parameter Estimation

The ob jective of the parameter estimation is to
learn a linear aerodynamic model for the aircraft.
The motivation for this approach is that the aero-
dynamic forces of the aircraft (with the exception of
drag) are well approximated by linear functions. The
only nonlinearities that arise are in extremely rapid
maneuvers or near stall. Our aircraft is not designed
for aerobatic maneuvering and is not designed to ﬂy

1

where A and b are nonlinear functions of the states
and actions, and  is assumed to be sampled from a
Gaussian distribution ( ∼ N (0, σ2 I )).
From our sensors we will not be able to provide
˙p, ˙q , and ˙r directly. Numerical diﬀerentiation is also
undesirable, since the state estimates will have some
noise. Instead, we can use integration to relate ˙s to
the state in the next time step. Using a forward Euler
approximation we have

sθ t+1 = R(st , st+1 )[sθ + ˙sθ∆t]t

(2)

where R is a rotation matrix that rotates from the
body frame at time t to the body frame at time t+1 If
we insert equation (1) into equation (2) and rearrange
we have

sθ t+1 = Kt θ + ct + 

(3)

where

Kt = R(st , st+1 )A(st , at )∆t

and

ct = R(st , st+1 )(sθ t + b(st , at )∆t)
We will like to update our maximum likelihood es-
timation of θ periodically. Using all the state and
action inputs from the previous update interval T-1
to the current time T as a training set, we can make
a new estimate for θT . Before performing maximum
likelihood we would like to incorporate some prior
knowledge about the parameters. There are two mo-
tivations for doing this. First, from simulation we
can often provide a reasonable starting estimate for
the parameters θ. Second, we would like to avoid our
training set growing larger and larger as time passes
since we need to provide updates to our control strat-
egy at a consistent rate. Thus, we will assume a prior
distribution on θ of the form
θT ∼ N (θT −1 , τ 2 I )
where for T = 1, θ0 is our initial estimate provided by
the user. Thus, each update uses the previous update
of θ as its prior.
Then the maximum a posterior estimate for θ is
T(cid:89)
given by
T(cid:88)
t=T −1
T(cid:88)
t=T −1
− 1
2σ2 (Kt θ − dt )T I (Kt θ − dt ) . . .
t=T −1
− 1
2τ 2 (θ − θT −1 )T I (θ − θT −1 )

log p(sθ t+1 |st , at , θ) + log p(θ)

p(sθ t+1 |st , at , θ)p(θ)

θT = arg max
θ

= arg max
θ

= arg max
θ

Figure 1: Unscented Kalman Filter estimate of air-
craft horizontal, lateral, and vertical position.

close to its stall speed, allowing us to conﬁdently use
a linear model throughout the ﬂight regime. Thus,
learning an aerodynamic model is a more promising
approach than trying to directly learn the dynamics
of the aircraft which are inherently nonlinear.
The state vector for the aircraft is given by

s = (u, v , w, p, q , r, x, y , z , φ, θ , ψ)T

where u,v,w are the velocities in the body frame, p,q,r
are the angular velocities in the body frame, x,y,z are
the positions of the aircraft in inertial space, and φ,
θ , ψ are the Euler angles describing the orientation
of the aircraft. The action vector for the aircraft is
given by

a = (δe , δr , δa , t)T
where δe is the elevator deﬂection, δr is the rudder
deﬂection, δa is the aileron deﬂection, and t is the
throttle setting. The parameters of the aerodynamic
model contain constant terms and the so called “sta-
bility derivatives” of the aircraft (the stability deriva-
tives do not contain every possible term of a generic
linear model since it is known that many of these
terms are negligible for an aircraft). These parame-
ters are arranged in to a column vector

θ = (CL 0 . . .

dCn
dCL
dp
dα
Only six of the state derivatives depend on these pa-
rameters, these we denote as

θ ∈ R25

. . .)T ,

. . .

sθ = (u, v , w, p, q , r)T
the other six state derivatives are functions only of
the states and do not depend on the actions. We
can rearrange the equations of motion as a stochastic
linear function of the parameters θ

˙sθ = A(s, a)θ + b(s, a) + 

(1)

2

012345678910050100x (m)  012345678910−100102030y (m)012345678910−50510Time (seconds)z (m)  True StateEstimated StateGPS PositionT(cid:88)
t=T −1

= arg min
θ

||Kt θ − dt ||2 + γ ||θ − θT −1 ||2

5 Simulation and Aircraft Dy-
namics

where

and

γ =

dt = sθ t+1 − ct
(cid:17)2
(cid:16) σ
τ
The optimization problem can be rearranged to the
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)



 θ −
equivalent least squares problem
4 Control Strategy

dT −1
...
dT√
γ θT −1

KT −1
...
KT√
γ I

θT = arg min
θ

We use reinforcement learning to choose the opti-
mal control policy for piloting the aircraft. We choose
a quadratic reward function, and use a linear model
of the aircraft dynamics. The full nonlinear dynamics
are available, but using a linear model greatly simpli-
ﬁes and speeds up the solution process. The opti-
mization problem is given as:
∞(cid:88)
t=tc
st+1 = Ast + bat

(st − sd )T Q(st − sd ) + aT
t Rat

min
a

s.t.

A full six degree of freedom simulation was written
in MATLAB to predict the behavior of an aircraft
in ﬂight. The aircraft equations of motion are in-
tegrated using a fourth-order accurate Runge-Kutta
scheme. Aerodynamic forces and moments are as-
sumed to be linear functions of the aircraft stability
derivatives and aircraft state. The aircraft is assumed
to have an elevator, rudder, ailerons, and single elec-
tric motor. The aerodynamic parameters are based
on Mark Drela’s Supra F3J sailplane, seen in Figure
2.

Figure 2: Supra F3J Sailplane

where sd is the desired state, and Q and R are chosen
according to Bryson’s rule [2] as:

Some basic aircraft dimensions are listed below in
Table 1.

Qii =

1
max acceptable value of [(s − sd )2
i ]

Rii =

1
max acceptable value of [a2
i ]
This problem formulation is the inﬁnite-horizon
discrete linear-quadratic regulator (LQR) which has
the solution of

at = −K (st − sd )

with K being a matrix of optimal control gains. The
nonlinear equations are re-linearized about the cur-
rent state every two seconds, and the K matrix is
updated. This allows us to still capture some of the
nonlinear dynamical behavior of the aircraft.

Table 1: Aircraft Characteristics

Wing span
Wing area
Mass
Cruise Speed

3.4 m
0.667 m2
1.36 kg
8 m/s

We assume that the aircraft is equipped with a
GPS with a 4Hz update rate and an IMU that is
queried at 20Hz. The GPS provides positions and ve-
locities, while the IMU provides acceleration and an-
gular velocities. The sensor uncertainties are shown
in Table 2 and were based on commercially available
inertial measurement units and GPS modules appro-
priate for this size of vehicle.

3

Table 2: Sensor Uncertainties

IMU Sensor Uncertainties
0.002 g
x & y acceleration
0.0005 g
z acceleration
Heading angular rate
0.2 deg/s
Pitch & roll angular rate
0.06 deg/s
GPS Sensor Uncertainties
2.0 m
x & y position
z position
6.0 m
0.1 m/s
x & y velocity
z velocity
0.3 m/s

6 Results

To test the eﬀectiveness of the method we ran-
domly initialize the aerodynamic parameters (θ) from
a normal distribution with a mean equal to its true
value but with a standard deviation of 50% of the
parameter. This is a fairly large error; in practice we
would expect to be able to provide a better starting
point using aerodynamic analysis tools. However, we
add the large uncertainty here to show robustness.
In addition, one of the critical parameters dcl /dδa
has its sign changed. This parameter is the change
in rolling moment with change in aileron deﬂection.
Changing the sign of this parameter will cause the
airplane to want to turn the wrong way. Finally, the
following results assume a zero wind speed.
Figure 3 shows the path of the aircraft on a way-
point navigation mission. It starts at waypoint 0 and
its ob jective is to pass through the other waypoints
in order while maintaining a certain altitude and for-
ward speed. We can see that initially the aircraft
turns the wrong direction because we changed the
sign of one of the parameters. However, it quickly
learns the correct sign and is able to complete the
mission successfully.
The other ob jectives were to climb to a steady state
altitude of 5 m (relative to the starting altitude) at
a forward speed of 8 m/s. Figures 4 shows the time
history of the altitude and forward speed. At the
beginning we can see that the altitude and forward
speed are far from their desired values. The reason
for this is that because of the parameter with the
ﬂipped sign, the accumulated error in heading angle
gets larger and larger. Consequently that term in the
LQR ob jective function becomes dominant and there
is less focus on trying to minimize error in altitude
or forward speed. As a better aerodynamic model is
learned, the controller adapts and brings the aircraft
to its steady state values.

4

Figure 3: Top view of UAV path, waypoints denoted
by circles

Figure 4: Time history of the relative altitude, and
the forward speed (in body axes)

050100150−40−20020406080x (m)y (m)24310020406080−20−10010relative alt. (m)time (s)020406080051015u (m/s)time (s)α =

||Kt θ − dt ||2

We need some metric to assess how well the super-
vised learning algorithm is doing in predicting the
aerodynamic parameters. As mentioned, θ is up-
dated every 10 seconds using the estimated states
from that time interval and the prior estimate for
θ .
If θ were generating a good aerodynamic model
to predict the next state, then we would expect that
||sactual − s(θ)|| should be small for each time step
in the time interval. Using our previous notation this
is equivalent to the term ||Kt θ − dt || being small for
t = T − 1 . . . T . Or, in other words we expect that
(cid:118)(cid:117)(cid:117)(cid:116) T(cid:88)
the term
t=T −1
should get smaller as the aerodynamic model
learned.
Figure 5 shows the change in this parameter α
as a function of time. We see that in the ﬁrst up-
date, there is a large jump in performance. Most of
this gain comes from correcting the parameter that
started out with the wrong sign. In the subsequent 40
seconds the error is further diminished. For longer pe-
riods of time there is essentially no additional learn-
ing. There all several reason why the error will not
go all the way to zero even in simulation. First, we
are using estimates of the states rather than the true
states and have included both sensor noise in the esti-
mation. Second, we are using an Euler approximation
for integrating from one time step to the next as dis-
cussed previously. Thus, α is a measure of the sum of
the learning error, sensor noise, and numerical error.

is

7 Future Work

With the algorithm performing successfully in sim-
ulation, the next step will be to test its performance
in hardware. A UAV is currently being designed
for this purpose. A research autopilot [3] devel-
oped in the Aircraft Aerodynamics and Design Group
will be used for autonomous control. The autopilot
schematic can be seen in Figure 6. The sensor suite
will include GPS, a 6 axis IMU, an airspeed sensor,
and a barometric altitude sensor.

Figure 6: TERN Research Autopilot

References

[1] EA Wan and R. Van Der Merwe. The unscented
Kalman ﬁlter for nonlinear estimation.
In The
IEEE 2000 Adaptive Systems for Signal Process-
ing, Communications, and Control Symposium
2000. AS-SPCC, pages 153–158, 2000.

[2] A.E. Bryson and Y.C. Ho. Applied Optimal Con-
trol. Wiley New York, 1975.

[3] C.K. Patel and I.M. Kroo. Theoretical and Exper-
imental Investigation of Energy Extraction from
Atmospheric Turbulence.
In 26th International
Congress of the Aeronautical Sciences, 2008.

Figure 5: Convergence of the learned aerodynamic
model to the true model as a function of time

5

050100150051015time (s)α (an error metric)