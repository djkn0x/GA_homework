Non-rigid point set registration: Coherent Point Drift

Miguel ·A. Carreira-Perpi (cid:152)n ·an
Andriy Myronenko
Xubo Song
Department of Computer Science and Electrical Engineering
OGI School of Science and Engineering
Oregon Health and Science University
Beaverton, OR, USA, 97006
fmyron, xubosong, miguelg@csee.ogi.edu

Abstract

We introduce Coherent Point Drift (CPD), a novel probabilistic method for non-
rigid registration of point sets. The registration is treated as a Maximum Like-
lihood (ML) estimation problem with motion coherence constraint over the ve-
locity (cid:2)eld such that one point set moves coherently to align with the second set.
We formulate the motion coherence constraint and derive a solution of regularized
ML estimation through the variational approach, which leads to an elegant kernel
form. We also derive the EM algorithm for the penalized ML optimization with
deterministic annealing. The CPD method simultaneously (cid:2)nds both the non-rigid
transformation and the correspondence between two point sets without making
any prior assumption of the transformation model except that of motion coher-
ence. This method can estimate complex non-linear non-rigid transformations,
and is shown to be accurate on 2D and 3D examples and robust in the presence of
outliers and missing points.

1 Introduction
Registration of point sets is an important issue for many computer vision applications such as ro-
bot navigation, image guided surgery, motion tracking, and face recognition. In fact, it is the key
component in tasks such as object alignment, stereo matching, point set correspondence, image
segmentation and shape/pattern matching. The registration problem is to (cid:2)nd meaningful corre-
spondence between two point sets and to recover the underlying transformation that maps one point
set to the second. The (cid:147)points(cid:148) in the point set are features, most often the locations of interest points
extracted from an image. Other common geometrical features include line segments, implicit and
parametric curves and surfaces. Any geometrical feature can be represented as a point set; in this
sense, the point locations is the most general of all features.
Registration techniques can be rigid or non-rigid depending on the underlying transformation model.
The key characteristic of a rigid transformation is that all distances are preserved. The simplest non-
rigid transformation is af(cid:2)ne, which also allows anisotropic scaling and skews. Effective algorithms
exist for rigid and af(cid:2)ne registration. However, the need for more general non-rigid registration
occurs in many tasks, where complex non-linear transformation models are required. Non-linear
non-rigid registration remains a challenge in computer vision.
Many algorithms exist for point sets registration. A direct way of associating points of two arbitrary
patterns is proposed in [1]. The algorithm exploits properties of singular value decomposition and
works well with translation, shearing and scaling deformations. However, for a non-rigid trans-
formation, the method performs poorly. Another popular method for point sets registration is the
Iterative Closest Point (ICP) algorithm [2], which iteratively assigns correspondence and (cid:2)nds the
least squares transformation (usually rigid) relating these point sets. The algorithm then redeter-
mines the closest point set and continues until it reaches the local minimum. Many variants of ICP

have been proposed that affect all phases of the algorithm from the selection and matching of points
to the minimization strategy [3]. Nonetheless ICP requires that the initial pose of the two point sets
be adequately close, which is not always possible, especially when transformation is non-rigid [3].
Several non-rigid registration methods are introduced [4, 5]. The Robust Point Matching (RPM)
method [4] allows global to local search and soft assignment of correspondences between two point
sets.
In [5] it is further shown that the RPM algorithm is similar to Expectation Maximization
(EM) algorithms for the mixture models, where one point set represents data points and the other
represents centroids of mixture models. In both papers, the non-rigid transform is parameterized by
Thin Plate Spline (TPS) [6], leading to the TPS-RPM algorithm [4]. According to regularization
theory, the TPS parametrization is a solution of the interpolation problem in 2D that penalizes the
second order derivatives of the transformation.
In 3D the solution is not differentiable at point
locations. In four or higher dimensions the generalization collapses completely [7]. The M-step in
the EM algorithm in [5] is approximated for simpli(cid:2)cation. As a result, the approach is not truly
probabilistic and does not lead, in general, to the true Maximum Likelihood solution.
A correlation-based approach to point set registration is proposed in [8]. Two data sets are repre-
sented as probability densities, estimated using kernel density estimation. The registration is consid-
ered as the alignment between the two distributions that minimizes a similarity function de(cid:2)ned by
L2 norm. This approach is further extended in [9], where both densities are represented as Gaussian
Mixture Models (GMM). Once again thin-plate spline is used to parameterize the smooth non-linear
underlying transformation.
In this paper we introduce a probabilistic method for point set registration that we call the Coherent
Point Drift (CPD) method. Similar to [5], given two point sets, we (cid:2)t a GMM to the (cid:2)rst point set,
whose Gaussian centroids are initialized from the points in the second set. However, unlike [4, 5, 9]
which assumes a thin-plate spline transformation, we do not make any explicit assumption of the
transformation model. Instead, we consider the process of adapting the Gaussian centroids from
their initial positions to their (cid:2)nal positions as a temporal motion process, and impose a motion
coherence constraint over the velocity (cid:2)eld. Velocity coherence is a particular way of imposing
smoothness on the underlying transformation. The concept of motion coherence was proposed in
the Motion Coherence Theory [10]. The intuition is that points close to one another tend to move
coherently. This motion coherence constraint penalizes derivatives of all orders of the underlying
velocity (cid:2)eld (thin-plate spline only penalizes the second order derivative). Examples of velocity
(cid:2)elds with different levels of motion coherence for different point correspondence are illustrated in
Fig. 1.

(a)

(b)

(c)

(d)

Figure 1: (a) Two given point sets. (b) A coherent velocity (cid:2)eld. (c, d) Velocity (cid:2)elds that are less
coherent for the given correspondences.

We derive a solution for the velocity (cid:2)eld through a variational approach by maximizing the likeli-
hood of GMM penalized by motion coherence. We show that the (cid:2)nal transformation has an elegant
kernel form. We also derive an EM algorithm for the penalized ML optimization with deterministic
annealing. Once we have the (cid:2)nal positions of the GMM centroids, the correspondence between
the two point sets can be easily inferred through the posterior probability of the Gaussian mixture
components given the (cid:2)rst point set. Our method is a true probabilistic approach and is shown to
be accurate and robust in the presence of outliers and missing points, and is effective for estimation
of complex non-linear non-rigid transformations. The rest of the paper is organized as follows. In
Section 2 we formulate the problem and derive the CPD algorithm. In Section 3 we present the
results of CPD algorithm and compare its performance with that of RPM [4] and ICP [2]. In Section
4 we summarize the properties of CPD and discuss the results.

2 Method

Assume two point sets are given, where the template point set Y = (y1 ; : : : ; yM )T (expressed as a
M (cid:2) D matrix) should be aligned with the reference point set X = (x1 ; : : : ; xN )T (expressed as a
N (cid:2) D matrix) and D is the dimension of the points. We consider the points in Y as the centroids
of a Gaussian Mixture Model, and (cid:2)t it to the data points X by maximizing the likelihood function.
We denote Y0 as the initial centroid positions and de(cid:2)ne a continuous velocity function v for the
template point set such that the current position of centroids is de(cid:2)ned as Y = v(Y0 ) + Y0 .
Consider a Gaussian-mixture density p(x) = PM
M p(xjm) with xjm (cid:24) N (ym ; (cid:27)2 ID ), where
1
m=1
Y represents D-dimensional centroids of equally-weighted Gaussians with equal isotropic covari-
ance matrices, and X set represents data points. In order to enforce a smooth motion constraint, we
de(cid:2)ne the prior p(Yj(cid:21)) / exp ((cid:0) (cid:21)
2 (cid:30)(Y)), where (cid:21) is a weighting constant and (cid:30)(Y) is a function
that regularizes the motion to be smooth. Using Bayes theorem, we want to (cid:2)nd the parameters Y by
maximizing the posteriori probability, or equivalently by minimizing the following energy function:

+

k2

log

(cid:21)
2

(1)

(cid:30)(Y)

E (Y) = (cid:0)

2 k xn(cid:0)ym
e(cid:0) 1
(cid:27)

M
N
Xm=1
Xn=1
We make the i.i.d. data assumption and ignore terms independent of Y. Equation 1 has a similar
form to that of Generalized Elastic Net (GEN) [11], which has shown good performance in non-
rigid image registration [12]; note that there we directly penalized Y, while here we penalize the
transformation v . The (cid:30) function represents our prior knowledge about the motion, which should be
smooth. Speci(cid:2)cally, we want the velocity (cid:2)eld v generated by template point set displacement to
be smooth. According to [13], smoothness is a measure of the (cid:147)oscillatory(cid:148) behavior of a function.
Within the class of differentiable functions, one function is said to be smoother than another if it
oscillates less; in other words, if it has less energy at high frequency. The high frequency content of
a function can be measured by (cid:2)rst high-pass (cid:2)ltering the function, and then measuring the resulting
power. This can be represented as (cid:30)(v) = RRd j~v(s)j2 = ~G(s) ds, where ~v indicates the Fourier
transform of the velocity and ~G is some positive function that approaches zero as ksk ! 1. Here
~G represents a symmetric low-pass (cid:2)lter, so that its Fourier transform G is real and symmetric.
Following this formulation, we rewrite the energy function as:

E (~v ) = (cid:0)

M
N
(cid:21)
2 ZRd
Xm=1
Xn=1
It can be shown using a variational approach (see Appendix A for a sketch of the proof) that the
function which minimizes the energy function in Eq. 2 has the form of the radial basis function:

j~v(s)j2
~G(s)

2 k xn(cid:0)ym
e(cid:0) 1
(cid:27)

(2)

log

ds

k2

+

(3)

v(z) =

wmG(z (cid:0) y0m )

M
Xm=1
We choose a Gaussian kernel form for G (note it is not related to the Gaussian form of the distri-
bution chosen for the mixture model). There are several motivations for such a Gaussian choice:
First, it satis(cid:2)es the required properties (symmetric, positive de(cid:2)nite, and ~G approaches zero as
ksk ! 1). Second, a Gaussian low pass (cid:2)lter has the property of having the Gaussian form in
both frequency and time domain without oscillations. By choosing an appropriately sized Gauss-
ian (cid:2)lter we have the (cid:3)exibility to control the range of (cid:2)ltered frequencies and thus the amount of
spatial smoothness. Third, the choice of the Gaussian makes our regularization term equivalent to
the one in Motion Coherence Theory (MCT) [10]. The regularization term RRd j~v(s)j2 = ~G(s) ds,
with a Gaussian function for G, is equivalent to the sum of weighted squares of all order derivatives
(cid:12) 2m
m!2m (Dm v)2 [10, 13] , where D is a derivative operator so that
of the velocity (cid:2)eld RRd P1
m=1
D2m v = r2m v and D2m+1 v = r(r2m v). The equivalence of the regularization term with that
of the Motion Coherence Theory implies that we are imposing motion coherence among the points
and thus we call our method the Coherent Point Drift (CPD) method. Detailed discussion of MCT
can be found in [10]. Substituting the solution obtained in Eq. 3 back into Eq. 2, we obtain

CPD algorithm:
(cid:15) Initialize parameters (cid:21); (cid:12) ; (cid:27)
(cid:15) Construct G matrix, initialize Y = Y0
(cid:15) Deterministic annealing:
(cid:15) EM optimization, until convergence:
(cid:1) E-step: Compute P
(cid:1) M-step: Solve for W from Eq. 7
(cid:1) Update Y = Y0 + GW
(cid:15) Anneal (cid:27) = (cid:11)(cid:27)
(cid:15) Compute the velocity (cid:2)eld: v(z) = G(z; (cid:1))W

Figure 2: Pseudo-code of CPD algorithm.

log

2

(cid:13)
(cid:13)
(cid:13)
(cid:13)

+

(cid:21)
2

(cid:0) 1
2

e

(cid:13)
(cid:13)
(cid:13)
(cid:13)

(4)

E (W) = (cid:0)

xn(cid:0)y0m(cid:0)PM
k=1 wk G(y0k (cid:0)y0m )
(cid:27)

M
N
Xm=1
Xn=1
tr (cid:0)WT GW(cid:1)
(cid:13)
y0i (cid:0)y0j
where GM (cid:2)M is a square symmetric Gram matrix with elements gij = e(cid:0) 1
(cid:13)
2
(cid:12)
(cid:13)
WM (cid:2)D = (w1 ; : : : ; wM )T is a matrix of the Gaussian kernel weights in Eq. 3.
Optimization. Following the EM algorithm derivation for clustering using Gaussian Mixture Model
[14], we can (cid:2)nd the upper bound of the function in Eq. 4 as (E-step):
M
N
kxn (cid:0) y0m (cid:0) G(m; (cid:1))Wk2
Xm=1
Xn=1
tr (cid:0)WT GW(cid:1)
2(cid:27)2
where P old denotes the posterior probabilities calculated using previous parameter values, and
G(m; (cid:1)) denotes the mth row of G. Minimizing the upper bound Q will lead to a decrease in the
value of the energy function E in Eq. 4, unless it is already at local minimum. Taking the derivative
of Eq. 5 with respect to W, and rewriting the equation in matrix form, we obtain (M-step)

P old (mjxn )

Q(W) =

and

(5)

2

(cid:13)
(cid:13)
(cid:13)

+

(cid:21)
2

y

y

=

@Q
1
(6)
G(diag (P1))(Y0 + GW) (cid:0) PX) + (cid:21)GW = 0
(cid:27)2
@W
old
old
2
2
(cid:13)
(cid:13)
(cid:13)
(cid:13)
m (cid:0)xn
m (cid:0)xn
(cid:0) 1
(cid:0) 1
(cid:13)
(cid:13)
(cid:13)
(cid:13)
where P is a matrix of posterior probabilities with pmn = e
.
= PM
(cid:13)
(cid:13)
(cid:13)
(cid:13)
2
2
(cid:27)
(cid:27)
m=1 e
(cid:13)
(cid:13)
(cid:13)
(cid:13)
The diag ((cid:1)) notation indicates diagonal matrix and 1 is a column vector of all ones. Multiplying
Eq. 6 by (cid:27) 2G(cid:0)1 (which exists for a Gaussian kernel) we obtain a linear system of equations:
(7)
(diag (P1)) G + (cid:21)(cid:27) 2 I)W = PX (cid:0) diag (P1) Y0
Solving the system for W is the M-step of EM algorithm. The E step requires computation of the
posterior probability matrix P. The EM algorithm is guaranteed to converge to a local optimum
from almost any starting point. Eq. 7 can also be obtained directly by (cid:2)nding the derivative of Eq. 4
with respect to W and equating it to zero. This results in a system of nonlinear equations that can
be iteratively solved using (cid:2)xed point update, which is exactly the EM algorithm shown above. The
computational complexity of each EM iteration is dominated by the linear system of Eq. 7, which
takes O(M 3 ). If using a truncated Gaussian kernel and/or linear conjugate gradients, this can be
reduced to O(M 2 ).
Robustness to Noise. The use of a probabilistic assignment of correspondences between point sets is
innately more robust than the binary assignment used in ICP. However, the GMM requires that each
data point be explained by the model. In order to account for outliers, we add an additional uniform
pdf component to the mixture model. This new component changes posterior probability matrix P
old
old
2
2
(cid:13)
(cid:13)
(cid:13)
(cid:13)
m (cid:0)xn
m (cid:0)xn
y
y
(cid:0) 1
(cid:0) 1
(cid:13)
(cid:13)
(cid:13)
(cid:13)
D
=( (2(cid:25)(cid:27)2 )
), where
in Eq. 7, which now is de(cid:2)ned as pmn = e
+ PM
(cid:13)
(cid:13)
(cid:13)
(cid:13)
2
2
2
(cid:27)
(cid:27)
m=1 e
(cid:13)
(cid:13)
(cid:13)
(cid:13)
a
a de(cid:2)nes the support for the uniform pdf. The use of the uniform distribution greatly improves the
noise.
Free Parameters. There are three free parameters in the method: (cid:21); (cid:12) and (cid:27) . Parameter (cid:21) represents
the trade off between data (cid:2)tting and smoothness regularization. Parameter (cid:12) re(cid:3)ects the strength

of interaction between points. Small values of (cid:12) produce locally smooth transformation, while large
values of (cid:12) correspond to nearly pure translation transformation. The value of (cid:27) serves as a capture
range for each Gaussian mixture component. Smaller (cid:27) indicates smaller and more localized capture
range for each Gaussian component in the mixture model. We use deterministic annealing for (cid:27) ,
starting with a large value and gradually reducing it according to (cid:27) = (cid:11)(cid:27) , where (cid:11) is annealing rate
(normally between [0.92 0.98]), so that the annealing process is slow enough for the algorithm to be
robust. The gradual reducing of (cid:27) leads to a coarse-to-(cid:2)ne match strategy. We summarize the CPD
algorithm in Fig. 2.

3 Experimental Results

We show the performance of CPD on arti(cid:2)cial data with non-rigid deformations. The algorithm is
implemented in Matlab, and tested on a Pentium4 CPU 3GHz with 4GB RAM. The code is available
at www.csee.ogi.edu/(cid:152)myron/matlab/cpd. The initial value of (cid:21) and (cid:12) are set to 1.0 in
all experiments. The starting value of (cid:27) is 3.0 and gradually annealed with (cid:11) = 0:97. The stopping
condition for the iterative process is either when the current change in parameters drops below a
threshold of 10(cid:0)6 or the number of iterations reaches the maximum of 150.

CPD algorithm

RPM algorithm

ICP algorithm

Figure 3: Registration results for the CPD, RPM and ICP algorithms from top to bottom. The (cid:2)rst
column shows template ((cid:14)) and reference (+) point sets. The second column shows the registered
position of the template set superimposed over the reference set. The third column represents the
recovered underlying deformation . The last column shows the link between initial and (cid:2)nal template
point positions (only every second point’s displacement is shown).

On average the algorithm converges in few seconds and requires around 80 iterations. All point sets
are preprocessed to have zero mean and unit variance (which normalizes translation and scaling).
We compare our method on non-rigid point registration with RPM and ICP. The RPM and ICP
implementations and the 2D point sets used for comparison are taken from the TPS-RPM Matlab
package [4].
For the (cid:2)rst experiment (Fig. 3) we use two clean point sets. Both CPD and RPM algorithms produce
accurate results for non-rigid registration. The ICP algorithm is unable to escape a local minimum.
We show the velocity (cid:2)eld through the deformation of a regular grid. The deformation (cid:2)eld for RPM
corresponds to parameterized TPS transformation, while that for CPD represents a motion coherent
non-linear deformation. For the second experiment (Fig. 4) we make the registration problem more
challenging. The (cid:2)sh head in the reference point set is removed, and random noise is added. In
the template point set the tail is removed. The CPD algorithm shows robustness even in the area of

missing points and corrupted data. RPM incorrectly wraps points to the middle of the (cid:2)gure. We
have also tried different values of smoothness parameters for RPM without much success, and we
only show the best result. ICP also shows poor performance and is stuck in a local minimum.
For the 3D experiment (Fig. 5) we show the performance of CPD on 3D faces. The face surface is
de(cid:2)ned by the set of control points. We arti(cid:2)cially deform the control point positions non-rigidly
and use it as a template point set. The original control point positions are used as a reference point
set. CPD is effective and accurate for this 3D non-rigid registration problem.
CPD algorithm

RPM algorithm

ICP algorithm

Figure 4: The reference point set is corrupted to make the registration task more challenging. Noise
is added and the (cid:2)sh head is removed in the reference point set. The tail is also removed in the
template point set. The (cid:2)rst column shows template ((cid:14)) and reference (+) point sets. The second
column shows the registered position of the template set superimposed over the reference set. The
third column represents the recovered underlying deformation. The last column shows the link
between the initial and (cid:2)nal template point positions.

4 Discussion and Conclusion
We intoduce Coherent Point Drift, a new probabilistic method for non-rigid registration of two point
sets. The registration is considered as a Maximum Likelihood estimation problem, where one point
set represents centroids of a GMM and the other represents the data. We regularize the velocity
(cid:2)eld over the points domain to enforce coherent motion and de(cid:2)ne the mathematical formulation
of this constraint. We derive the solution for the penalized ML estimation through the variational
approach, and show that the (cid:2)nal transformation has an elegant kernel form. We also derive the
EM optimization algorithm with deterministic annealing. The estimated velocity (cid:2)eld represents the
underlying non-rigid transformation. Once we have the (cid:2)nal positions of the GMM centroids, the
correspondence between the two point sets can be easily inferred through the posterior probability of

(a)

(b)

(c)

3

2.5

2

1.5

1

0.5

0

−0.5

−1

−1.5

−2
−1.5

1

1.5

−2

2

1

0

−1

−1

−0.5

0

0.5
(d)

4

3

2

1

0

−1

−2
−1.5

1

1.5

−2

2

0

−1

−0.5

0

0.5
(e)

3

2.5

2

1.5

1

0.5

0

−0.5

−1

−1.5

−2
−1.5

1

1.5

−2

2

0

−1

−0.5

0

0.5
(f)

Figure 5: The results of CPD non-rigid registration on 3D point sets. (a, d) The reference face and
its control point set. (b, e) The template face and its control point set. (c, f) Result obtained by
registering the template point set onto the reference point set using CPD.

the GMM components given the data. The computational complexity of CPD is O(M 3 ), where M
is the number of points in template point set. It is worth mentioning that the components in the point
vector are not limited to spatial coordinates. They can also represent the geometrical characteristic
of an object (e.g., curvature, moments), or the features extracted from the intensity image (e.g.,
color, gradient). We compare the performance of the CPD algorithm on 2D and 3D data against ICP
and RPM algorithms, and show how CPD outperforms both methods in the presence of noise and
outliers. It should be noted that CPD does not work well for large in-plane rotation. Typically such
transformation can be (cid:2)rst compensated by other well known global registration techniques before
CPD algorithm is carried out. The CPD method is most effective when estimating smooth non-rigid
transformations.

Appendix A

log

E = (cid:0)

2 k xn(cid:0)ym
e(cid:0) 1
(cid:27)

N
M
Xn=1
Xm=1
Consider the function in Eq. 8, where ym = y0m + v(y0m ), and y0m is the initial position of ym
point. v is a continuous velocity function and v(y0m ) = RRd ~v(s)e2(cid:25)i<y0m ;s>ds in terms of its
Fourier transform ~v . The following derivation follows [13]. Substituting v into equation Eq. 8 we
obtain:

j~v(s)j2
~G(s)

(cid:21)
2 ZRd

(8)

ds

k2

+

E (~v ) = (cid:0)

N
M
j~v(s)j2
(cid:21)
2 ZRd
Xn=1
Xm=1
~G(s)
In order to (cid:2)nd the minimum of this functional we take its functional derivatives with respect to ~v ,
(cid:14) ~v (t) = 0, 8t 2 Rd :
so that (cid:14)E (~v)

xn(cid:0)y0m (cid:0)RRd ~v(s)e2(cid:25)i<y0m ;s> ds
(cid:27)

log

(9)

(cid:0) 1
2

ds

(cid:13)
(cid:13)
(cid:13)
(cid:13)

+

e

2

(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:14)E (~v )
(cid:14) ~v (t)

= (cid:0)

(cid:21)
2 ZRd

(cid:14)
(cid:14) ~v(t)

N
Xn=1
j~v(s)j2
~G(s)

k2
2 k xn(cid:0)ym
m=1 e(cid:0) 1
(cid:14) ~v(s)
PM
1
(cid:14) ~v(t) e2(cid:25)i<y0m ;s>ds
(cid:27)2 (xn (cid:0) ym ) RRd
(cid:27)
k2
2 k xn(cid:0)ym
m=1 e(cid:0) 1
PM
(cid:27)
2 k xn(cid:0)ym
m=1 e(cid:0) 1
PM
1
(cid:27)2 (xn (cid:0) ym )e2(cid:25)i<y0 ;t>
(cid:27)
k2
2 k xn(cid:0)ym
m=1 e(cid:0) 1
PM
(cid:27)

N
Xn=1

ds = (cid:0)

k2

+

+ (cid:21)

~v ((cid:0)t)
~G(t)

= 0

We now de(cid:2)ne the coef(cid:2)cients amn =
tive as:

e

2 k xn(cid:0)ym
(cid:0) 1
(cid:27)

k2

1
(cid:27)2 (xn(cid:0)ym )
k2
2 k xn(cid:0)ym
(cid:0) 1
(cid:27)

PM
m=1 e

, and rewrite the functional deriva-

(cid:0)

= (cid:0)

= 0

(10)

amn e2(cid:25)i<y0m ;t> + (cid:21)

amn )e2(cid:25)i<y0m ;t> + (cid:21)

N
M
M
N
~v((cid:0)t)
~v ((cid:0)t)
Xn=1
Xm=1
Xn=1
Xm=1
(
~G(t)
~G(t)
Denoting the new coef(cid:2)cients wm = 1
n=1 amn , and changing t to (cid:0)t, we multiply by ~G(t) on
(cid:21) PN
both sides of this equation, which results in:
~v(t) = ~G((cid:0)t)

M
Xm=1
Assuming that ~G is symmetric (so that its Fourier transform is real), and taking the inverse Fourier
transform of the last equation, we obtain:
M
M
Xm=1
Xm=1
Since wm depend on v through amn and ym , the wm that solve Eq. 12 must satisfy a self consistency
equation equivalent to Eq. 7. A speci(cid:2)c form of regularizer ~G results in a speci(cid:2)c basis function G.

wm e(cid:0)2(cid:25)i<y0m ;t>

v(z) = G(z) (cid:3)

wm (cid:14)(z (cid:0) y0m ) =

wmG(z (cid:0) y0m )

(11)

(12)

Acknowledgment
This work is partially supported by NIH grant NEI R01 EY013093, NSF grant IIS(cid:150)0313350
·A.
(awarded to X. Song) and NSF CAREER award IIS(cid:150)0546857 (awarded to Miguel
Carreira-Perpi (cid:152)n ·an).

References
[1] G.L. Scott and H.C. Longuet-Higgins. An algorithm for associating the features of two images. Royal
Society London Proc., B-244:21(cid:150)26, 1991.
[2] P.J. Besl and N. D. McKay. A method for registration of 3-d shapes. IEEE Trans. Pattern Anal. Mach.
Intell., 14(2):239(cid:150)256, 1992.
[3] S. Rusinkiewicz and M. Levoy. Ef(cid:2)cient variants of the ICP algorithm. Third International Conference
on 3D Digital Imaging and Modeling, page 145, 2001.
[4] H Chui and A. Rangarajan. A new algorithm for non-rigid point matching. CVPR, 2:44(cid:150)51, 2000.
[5] H. Chui and A. Rangarajan. A feature registration framework using mixture models. IEEE Workshop on
Mathematical Methods in Biomedical Image Analysis (MMBIA), pages 190(cid:150)197, 2000.
[6] F. L. Bookstein. Principal warps: Thin-plate splines and the decomposition of deformations. IEEE Trans.
Pattern Anal. Mach. Intell., 11(6):567(cid:150)585, 1989.
[7] R Sibson and G. Stone. Comp. of thin-plate splines. SIAM J. Sci. Stat. Comput., 12(6):1304(cid:150)1313, 1991.
[8] Y. Tsin and T. Kanade. A correlation-based approach to robust point set registration. ECCV, 3:558(cid:150)569,
2004.
[9] B. Jian and B.C. Vemuri. A robust algorithm for point set registration using mixture of gaussians. ICCV,
pages 1246(cid:150)1251, 2005.
[10] A.L. Yuille and N.M. Grzywacz. The motion coherence theory. Int. J. Computer Vision, 3:344(cid:150)353, 1988.
[11] M. ·A. Carreira-Perpi (cid:152)n ·an, P. Dayan, and G. J. Goodhill. Differential priors for elastic nets. In Proc. of the
6th Int. Conf. Intelligent Data Engineering and Automated Learning (IDEAL’05), pages 335(cid:150)342, 2005.
[12] A. Myronenko, X Song, and M. ·A. Carreira-Perpi (cid:152)n ·an. Non-parametric image registration using general-
ized elastic nets. Int. Workshop on Math. Foundations of Comp. Anatomy: Geom. and Stat. Methods in
Non-Linear Image Registration, MICCAI, pages 156(cid:150)163, 2006.
[13] F. Girosi, M. Jones, and T. Poggio. Regularization theory and neural networks architectures. Neural
Computation, 7(2):219(cid:150)269, 1995.
[14] C. M. Bishop. Neural Networks for Pattern Recognition. Oxford University Press, 1995.

