A Collapsed Variational Bayesian Inference
Algorithm for Latent Dirichlet Allocation

Yee Whye Teh
Gatsby Computational Neuroscience Unit
University College London
17 Queen Square, London WC1N 3AR, UK
ywteh@gatsby.ucl.ac.uk

David Newman and Max Welling
Bren School of Information and Computer Science
University of California, Irvine
CA 92697-3425 USA
{newman,welling}@ics.uci.edu

Abstract

Latent Dirichlet allocation (LDA) is a Bayesian network that has recently gained
much popularity in applications ranging from document modeling to computer
vision. Due to the large scale nature of these applications, current inference pro-
cedures like variational Bayes and Gibbs sampling have been found lacking. In
this paper we propose the collapsed variational Bayesian inference algorithm for
LDA, and show that it is computationally efﬁcient, easy to im plement and signiﬁ-
cantly more accurate than standard variational Bayesian inference for LDA.

1 Introduction

Bayesian networks with discrete random variables form a very general and useful class of proba-
bilistic models. In a Bayesian setting it is convenient to endow these models with Dirichlet priors
over the parameters as they are conjugate to the multinomial distributions over the discrete random
variables [1]. This choice has important computational advantages and allows for easy inference in
such models.

A class of Bayesian networks that has gained signiﬁcant mome ntum recently is latent Dirichlet
allocation (LDA) [2], otherwise known as multinomial PCA [3]. It has found important applications
in both text modeling [4, 5] and computer vision [6]. Training LDA on a large corpus of several
million documents can be a challenge and crucially depends on an efﬁcient and accurate inference
procedure. A host of inference algorithms have been proposed, ranging from variational Bayesian
(VB) inference [2], expectation propagation (EP) [7] to collapsed Gibbs sampling [5].

Perhaps surprisingly, the collapsed Gibbs sampler proposed in [5] seem to be the preferred choice
in many of these large scale applications. In [8] it is observed that EP is not efﬁcient enough to
be practical while VB suffers from a large bias. However, collapsed Gibbs sampling also has its
own problems: one needs to assess convergence of the Markov chain and to have some idea of
mixing times to estimate the number of samples to collect, and to identify coherent topics across
multiple samples. In practice one often ignores these issues and collects as many samples as is
computationally feasible, while the question of topic identiﬁcation is often sidestepped by using
just 1 sample. Hence there still seems to be a need for more efﬁ cient, accurate and deterministic
inference procedures.

In this paper we will leverage the important insight that a Gibbs sampler that operates in a collapsed
space —where the parameters are marginalized out—mixes muc
h better than a Gibbs sampler that
samples parameters and latent topic variables simultaneously. This suggests that the parameters
and latent variables are intimately coupled. As we shall see in the following, marginalizing out the
parameters induces new dependencies between the latent variables (which are conditionally inde-
pendent given the parameters), but these dependencies are spread out over many latent variables.
This implies that the dependency between any two latent variables is expected to be small. This is

precisely the right setting for a mean ﬁeld (i.e. fully facto rized variational) approximation: a par-
ticular variable interacts with the remaining variables only through summary statistics called the
ﬁeld, and the impact of any single variable on the ﬁeld is very
small [9]. Note that this is not true
in the joint space of parameters and latent variables because ﬂuctuations in parameters can have a
signiﬁcant impact on latent variables. We thus conjecture t hat the mean ﬁeld assumptions are much
better satisﬁed in the collapsed space of latent variables t han in the joint space of latent variables
and parameters. In this paper we leverage this insight and propose a collapsed variational Bayesian
(CVB) inference algorithm.

In theory, the CVB algorithm requires the calculation of very expensive averages. However, the
averages only depend on sums of independent Bernoulli variables, and thus are very closely approx-
imated with Gaussian distributions (even for relatively small sums). Making use of this approxi-
mation, the ﬁnal algorithm is computationally efﬁcient, ea
sy to implement and signiﬁcantly more
accurate than standard VB.

2 Approximate Inference in Latent Dirichlet Allocation

p(x, z, θ , φ|α, β ) =

LDA models each document as a mixture over topics. We assume there are K latent topics, each
being a multinomial distribution over a vocabulary of size W . For document j , we ﬁrst draw a
mixing proportion θj = {θjk } over K topics from a symmetric Dirichlet with parameter α. For
the ith word in the document, a topic zij is drawn with topic k chosen with probability θjk , then
word xij is drawn from the zij th topic, with xij taking on value w with probability φkw . Finally, a
symmetric Dirichlet prior with parameter β is placed on the topic parameters φk = {φkw }. The full
joint distribution over all parameters and variables is:
DYj=1
KYk=1
Γ(β )W QW
Γ(α)K QK
Γ(K α)
Γ(W β )
w=1 φβ−1+n·kw
k=1 θ
kw
where njkw = #{i : xij = w, zij = k}, and dot means the corresponding index is summed out:
n·kw = Pj njkw , and njk· = Pw njkw .
Given the observed words x = {xij } the task of Bayesian inference is to compute the posterior
distribution over the latent topic indices z = {zij }, the mixing proportions θ = {θj } and the topic
parameters φ = {φk }. There are three current approaches, variational Bayes (VB) [2], expectation
propagation [7] and collapsed Gibbs sampling [5]. We review the VB and collapsed Gibbs sam-
pling methods here as they are the most popular methods and to motivate our new algorithm which
combines advantages of both.

α−1+njk·
jk

(1)

2.1 Variational Bayes

Standard VB inference upper bounds the negative log marginal likelihood − log p(x|α, β ) using the
variational free energy:
− log p(x|α, β ) ≤ eF ( ˜q(z, θ , φ)) = E ˜q [− log p(x, z, φ, θ |α, β )] − H( ˜q(z, θ , φ))
(2)
with ˜q(z, θ , φ) an approximate posterior, H( ˜q(z, θ , φ)) = E ˜q [− log ˜q(z, θ , φ)] the variational en-
tropy, and ˜q(z, θ , φ) assumed to be fully factorized:
˜q(θj | ˜αj ) Yk
˜q(zij |˜γij ) Yj
˜q(z, θ , φ) = Yij
˜q(φk | ˜βk )
˜q(zij |˜γij ) is multinomial with parameters ˜γij and ˜q(θj | ˜αj ), ˜q(φk | ˜βk ) are Dirichlet with parameters
˜αj and ˜βk respectively. Optimizing eF ( ˜q) with respect to the variational parameters gives us a set of
updates guaranteed to improve eF ( ˜q) at each iteration and converges to a local minimum:
˜αjk = α + Pi ˜γijk
(4)
˜βkw = β + Pij 111(xij = w)˜γijk
(5)
˜γijk ∝ exp (cid:16)Ψ( ˜αjk ) + Ψ( ˜βkxij ) − Ψ(Pw
˜βkw )(cid:17)

(3)

(6)

is the digamma function and 111 is the indicator function.

where Ψ(y ) = ∂ log Γ(y)
∂ y
Although efﬁcient and easily implemented, VB can potential ly lead to very inaccurate results. No-
tice that the latent variables z and parameters θ , φ can be strongly dependent in the true posterior
p(z, θ , φ|x) through the cross terms in (1). This dependence is ignored in VB which assumes that
latent variables and parameters are independent instead. As a result, the VB upper bound on the
negative log marginal likelihood can be very loose, leading to inaccurate estimates of the posterior.

2.2 Collapsed Gibbs Sampling

Γ(β + n·kw )
Γ(β )

Standard Gibbs sampling, which iteratively samples latent variables z and parameters θ , φ, can
potentially have slow convergence due again to strong dependencies between the parameters and
latent variables. Collapsed Gibbs sampling improves upon Gibbs sampling by marginalizing out θ
and φ instead, therefore dealing with them exactly. The marginal distribution over x and z is
Γ(α) Yk
p(z, x|α, β ) = Yj
Γ(W β + n·k· ) Qw
Γ(K α+ nj ·· ) Qk
Γ(α+ njk· )
Γ(W β )
Γ(K α)
Given the current state of all but one variable zij , the conditional probability of zij is:
)(W β + n¬ij
jk· )(β + n¬ij
(α + n¬ij
·k· )−1
·kxij
PK
jk0 · )(β + n¬ij
k0=1 (α + n¬ij
)(W β + n¬ij
·k0 · )−1
·k0 xij
where the superscript ¬ij means the corresponding variables or counts with xij and zij excluded,
and the denominator is just a normalization. The conditional distribution of zij is multinomial with
simple to calculate probabilities, so the programming and computational overhead is minimal.
Collapsed Gibbs sampling has been observed to converge quickly [5]. Notice from (8) that zij
, n¬ij
jk· , n¬ij
depends on z¬ij only through the counts n¬ij
·k· . In particular, the dependence of zij on
·kxij
any particular other variable zi0 j 0 is very weak, especially for large datasets. As a result we expect the
convergence of collapsed Gibbs sampling to be fast [10]. However, as with other MCMC samplers,
and unlike variational inference, it is often hard to diagnose convergence, and a sufﬁciently large
number of samples may be required to reduce sampling noise.

¬ij , x, α, β ) =
p(zij = k |z

(7)

(8)

The argument of rapid convergence of collapsed Gibbs sampling is reminiscent of the argument for
, n¬ij
when mean ﬁeld algorithms can be expected to be accurate [9]. The counts n¬ij
jk· , n¬ij
·k· act as
·kxij
ﬁelds through which zij interacts with other variables. In particular, averaging both sides of (8) by
p(z¬ij |x, α, β ) gives us the Callen equations, a set of equations that the true posterior must satisfy:
·k0 · )−1 #
¬ij |x,α,β ) "
)(W β + n¬ij
jk· )(β + n¬ij
(α+ n¬ij
·k· )−1
·kxij
p(zij = k |x, α, β ) = Ep(z
PK
)(W β + n¬ij
jk0 · )(β + n¬ij
k0=1 (α+ n¬ij
·k0 xij
Since the latent variables are already weakly dependent on each other, it is possible to replace (9)
by a set of mean ﬁeld equations where latent variables are ass umed independent and still expect
these equations to be accurate. This is the idea behind the collapsed variational Bayesian inference
algorithm of the next section.

(9)

3 Collapsed Variational Bayesian Inference for LDA

We derive a new inference algorithm for LDA combining the advantages of both standard VB and
collapsed Gibbs sampling. It is a variational algorithm which, instead of assuming independence,
models the dependence of the parameters on the latent variables in an exact fashion. On the other
hand we still assume that latent variables are mutually independent. This is not an unreasonable
assumption to make since as we saw they are only weakly dependent on each other. We call this
algorithm collapsed variational Bayesian (CVB) inference.

There are two ways to deal with the parameters in an exact fashion, the ﬁrst is to marginalize them
out of the joint distribution and to start from (7), the second is to explicitly model the posterior of
θ , φ given z and x without any assumptions on its form. We will show that these two methods

(11)

(12)

(13)

(14)

(15)

(10)

ˆq (zij |ˆγij )

are equivalent. The only assumption we make in CVB is that the latent variables z are mutually
independent, thus we approximate the posterior as:
ˆq(z, θ , φ) = ˆq(θ , φ|z) Yij
where ˆq(zij |ˆγij ) is multinomial with parameters ˆγij . The variational free energy becomes:
bF ( ˆq (z) ˆq (θ , φ|z)) = E ˆq(z) ˆq(θ,φ|z) [− log p(x, z, θ , φ|α, β )] − H( ˆq(z) ˆq (θ , φ|z))
=E ˆq(z) [E ˆq(θ,φ|z) [− log p(x, z, θ , φ|α, β )] − H( ˆq(θ , φ|z))] − H( ˆq (z))
We minimize the variational free energy with respect to ˆq(θ , φ|z) ﬁrst, followed by ˆq(z). Since
we do not restrict the form of ˆq(θ , φ|z), the minimum is achieved at the true posterior ˆq(θ , φ|z) =
p(θ , φ|x, z, α, β ), and the variational free energy simpliﬁes to:
bF ( ˆq(z)) , min
ˆq(θ,φ|z) bF ( ˆq (z) ˆq (θ , φ|z)) = E ˆq(z) [− log p(x, z|α, β )] − H( ˆq (z))
We see that CVB is equivalent to marginalizing out θ , φ before approximating the posterior over z.
As CVB makes a strictly weaker assumption on the variational posterior than standard VB, we have
bF ( ˆq (z)) ≤ eF ( ˜q (z)) , min
˜q(θ) ˜q(φ) eF ( ˜q (z) ˜q (θ) ˜q (φ))
and thus CVB is a better approximation than standard VB. Finally, we derive the updates for the
variational parameters ˆγij . Minimizing (12) with respect to ˆγijk , we get
exp (cid:0)E ˆq(z
¬ij ) [p(x, z¬ij , zij = k |α, β )](cid:1)
ˆγijk = ˆq(zij = k) =
k0=1 exp (cid:0)E ˆq(z
¬ij ) [p(x, z¬ij , zij = k 0 |α, β )](cid:1)
PK
Γ(η) = Pn−1
Plugging in (7), expanding log Γ(η+n)
l=0 log(η + l) for positive reals η and positive integers
n, and cancelling terms appearing both in the numerator and denominator, we get
·k· )](cid:17)
exp (cid:16)E ˆq(z
jk· ) + log(β + n¬ij
) − log(W β + n¬ij
¬ij ) [log(α+ n¬ij
·kxij
·k0 · )](cid:17)
k0=1 exp (cid:16)E ˆq(z
PK
) − log(W β + n¬ij
jk0 · ) + log(β + n¬ij
¬ij ) [log(α+ n¬ij
·k0 xij
3.1 Gaussian approximation for CVB Inference
For completeness, we describe how to compute each expectation term in (15) exactly in the ap-
pendix. This exact implementation of CVB is computationally too expensive to be practical, and
we propose instead to use a simple Gaussian approximation which works very accurately and which
requires minimal computational costs.
In this section we describe the Gaussian approximation applied to E ˆq [log(α + n¬ij
jk· )]; the other
two expectation terms are similarly computed. Assume that nj ·· (cid:29) 0. Notice that n¬ij
jk· =
Pi0 6=i 111(zi0 j = k) is a sum of a large number independent Bernoulli variables 111(zi0 j = k) each
with mean parameter ˆγi0 jk , thus it can be accurately approximated by a Gaussian. The mean and
variance are given by the sum of the means and variances of the individual Bernoulli variables:
jk· ] = Xi0 6=i
jk· ] = Xi0 6=i
Var ˆq [n¬ij
E ˆq [n¬ij
(16)
ˆγi0 jk (1 − ˆγi0 jk )
ˆγi0 jk
We further approximate the function log(α + n¬ij
jk· ) using a second-order Taylor expansion about
E ˆq [n¬ij
jk· ], and evaluate its expectation under the Gaussian approximation:
Var ˆq (n¬ij
jk· )
2(α + E ˆq [n¬ij
jk· ])2

jk· )] ≈ log(α + E ˆq [n¬ij
E ˆq [log(α + n¬ij
jk· ]) −

ˆγijk =

(17)

Because E ˆq [n¬ij
jk· ] (cid:29) 0, the third derivative is small and the Taylor series approximation is very
accurate. In fact, we have found experimentally that the Gaussian approximation works very well

even when nj ·· is small. The reason is that we often have ˆγi0 jk being either close to 0 or 1 thus
the variance of n¬ij
jk· is small relative to its mean and the Gaussian approximation will be accurate.
Finally, plugging (17) into (15), we have our CVB updates:
·k· ](cid:17)−1
](cid:17) (cid:16)W β +E ˆq [n¬ij
jk· ](cid:17) (cid:16)β +E ˆq [n¬ij
ˆγijk ∝ (cid:16)α+E ˆq [n¬ij
·kxij
exp (cid:18)−
·k· ])2 (cid:19)
Var ˆq (n¬ij
Var ˆq (n¬ij
)
Var ˆq (n¬ij
jk· )
·k· )
·kxij
jk· ])2 −
])2 +
2(β+E ˆq [n¬ij
2(α+E ˆq [n¬ij
2(W β+E ˆq [n¬ij
·kxij
Notice the striking correspondence between (18), (8) and (9), showing that CVB is indeed the mean
ﬁeld version of collapsed Gibbs sampling. In particular, th e ﬁrst line in (18) is obtained from (8)
by replacing the ﬁelds n¬ij
and n¬ij
jk· , n¬ij
·k· by their means (thus the term mean ﬁeld) while the
·kxij
exponentiated terms are correction factors accounting for the variance in the ﬁelds.

(18)

CVB with the Gaussian approximation is easily implemented and has minimal computational costs.
By keeping track of the mean and variance of njk· , n·kw and n·k· , and subtracting the mean and
variance of the corresponding Bernoulli variables whenever we require the terms with xij , zij re-
moved, the computational cost scales only as O(K ) for each update to ˆq(zij ). Further, we only
need to maintain one copy of the variational posterior over the latent variable for each unique docu-
ment/word pair, thus the overall computational cost per iteration of CVB scales as O(M K ) where
M is the total number of unique document/word pairs, while the memory requirement is O(M K ).
This is the same as for VB. In comparison, collapsed Gibbs sampling needs to keep track of the
current sample of zij for every word in the corpus, thus the memory requirement is O(N ) while the
computational cost scales as O(N K ) where N is the total number of words in the corpus—higher
than for VB and CVB. Note however that the constant factor involved in the O(N K ) time cost of
collapsed Gibbs sampling is signiﬁcantly smaller than thos e for VB and CVB.

4 Experiments

We compared the three algorithms described in the paper: standard VB, CVB and collapsed Gibbs
sampling. We used two datasets: ﬁrst is “KOS” (www.dailykos
.com), which has J = 3430 docu-
ments, a vocabulary size of W = 6909, a total of N = 467, 714 words in all the documents and on
average 136 words per document. Second is “NIPS” (books.nips.cc) with
J = 1675 documents, a
vocabulary size of W = 12419, N = 2, 166, 029 words in the corpus and on average 1293 words per
document. In both datasets stop words and infrequent words were removed. We split both datasets
into a training set and a test set by assigning 10% of the words in each document to the test set. In
all our experiments we used α = 0.1, β = 0.1, K = 8 number of topics for KOS and K = 40 for
NIPS. We ran each algorithm on each dataset 50 times with different random initializations.

¯θjk ¯φkxtest
ij

¯θjk =

α + Eq [njk· ]
K α + Eq [nj ·· ]

Performance was measured in two ways. First using variational bounds of the log marginal proba-
bilities on the training set, and secondly using log probabilities on the test set. Expressions for the
variational bounds are given in (2) for VB and (12) for CVB. For both VB and CVB, test set log
probabilities are computed as:
test ) = Yij Xk
p(x
Note that we used estimated mean values of θjk and φkw [11]. For collapsed Gibbs sampling, given
S samples from the posterior, we used:
SXs=1
test ) = Yij Xk
p(x
Figure 1 summarizes our results. We show both quantities as functions of iterations and as his-
tograms of ﬁnal values for all algorithms and datasets. CVB c onverged faster and to signiﬁcantly
better solutions than standard VB; this con ﬁrms our intuiti on that CVB provides much better approx-
imations than VB. CVB also converged faster than collapsed Gibbs sampling, but Gibbs sampling
attains a better solution in the end; this is reasonable since Gibbs sampling should be exact with

β + Eq [n·kw ]
W β + Eq [n·k· ]

α + ns
jk·
K α + ns
j ··

φs
kw =

β + ns
·kw
W β + ns
·k·

(19)

(20)

¯φkw =

1
|S |

θs
jk φs
kxtest
ij

θs
jk =

−7.5

−8

−8.5

−9

0

20

15

10

5

0
−7.8
−7.4

−7.5

−7.6

−7.7

−7.8

−7.9

0

20

15

10

5

0
−7.7

Collapsed VB
Standard VB

20

40

60

80

100

Collapsed VB
Standard VB

−7.675

−7.55

Collapsed Gibbs
Collapsed VB
Standard VB

20

40

60

80

100

Collapsed Gibbs
Collapsed VB
Standard VB

−7.65

−7.6

−7.55

−7.5

−7.45

−7.4

−7.4

−7.6

−7.8

−8

−8.2

−8.4

−8.6

−8.8

−9

0

40

35

30

25

20

15

10

5

0
−7.65
−7.2

−7.3

−7.4

−7.5

−7.6

−7.7

−7.8

−7.9

0

30

25

20

15

10

5

0
−7.5

Collapsed VB
Standard VB

20

40

60

80

100

Collapsed VB
Standard VB

−7.6

−7.55

−7.5

−7.45

−7.4

Collapsed Gibbs
Collapsed VB
Standard VB

20

40

60

80

100

Collapsed Gibbs
Collapsed VB
Standard VB

−7.45

−7.4

−7.35

−7.3

−7.25

−7.2

Figure 1: Left: results for KOS. Right: results for NIPS. First row: per word variational bounds as functions
of numbers of iterations of VB and CVB. Second row: histograms of converged per word variational bounds
across random initializations for VB and CVB. Third row: test set per word log probabilities as functions
of numbers of iterations for VB, CVB and Gibbs. Fourth row: histograms of ﬁnal test set per word log
probabilities across 50 random initializations.

−7.4

−7.5

−7.6

−7.7

−7.8

−7.9

−8

−8.1

−8.2

Collapsed Gibbs
Collapsed VB
Standard VB

0

500

1000

1500

2000

2500

−7.5

−8

−8.5

−9

−9.5

0

Collapsed VB
Standard VB

500

1000

1500

2000

2500

Figure 2: Left: test set per word log probabilities. Right: per word variational bounds. Both as functions of
the number of documents for KOS.

enough samples. We have also applied the exact but much slower version of CVB without the Gaus-
sian approximation, and found that it gave identical results to the one proposed here (not shown).

We have also studied the dependence of approximation accuracies on the number of documents in
the corpus. To conduct this experiment we train on 90% of the words in a (growing) subset of the
corpus and test on the corresponding 10% left out words. In ﬁg ure Figure 2 we show both variational
bounds and test set log probabilities as functions of the number of documents J . We observe that as
expected the variational methods improve as J increases. However, perhaps surprisingly, CVB does
not suffer as much as VB for small values of J , even though one might expect that the Gaussian
approximation becomes dubious in that regime.

5 Discussion

We have described a collapsed variational Bayesian (CVB) inference algorithm for LDA. The al-
gorithm is easy to implement, computationally efﬁcient and more accurate than standard VB. The
central insight of CVB is that instead of assuming parameters to be independent from latent vari-
ables, we treat their dependence on the topic variables in an exact fashion. Because the factorization
assumptions made by CVB are weaker than those made by VB, the resulting approximation is more
accurate. Computational efﬁciency is achieved in CVB with a Gaussian approximation, which was
found to be so accurate that there is never a need for exact summation.

The idea of integrating out parameters before applying variational inference has been indepen-
dently proposed by [12]. Unfortunately, because they worked in the context of general conjugate-
exponential families, the approach cannot be made generally computationally useful. Nevertheless,
we believe the insights of CVB can be applied to a wider class of discrete graphical models beyond
LDA. Speciﬁc examples include various extensions of LDA [4, 13] hidden Markov models with dis-
crete outputs, and mixed-membership models with Dirichlet distributed mixture coefﬁcients [14].
These models all have the property that they consist of discrete random variables with Dirichlet
priors on the parameters, which is the property allowing us to use the Gaussian approximation. We
are also exploring CVB on an even more general class of models, including mixtures of Gaussians,
Dirichlet processes, and hierarchical Dirichlet processes.

Over the years a variety of inference algorithms have been proposed based on a combination of
{maximize, sample, assume independent, marginalize out} applied to both parameters and latent
variables. We conclude by summarizing these algorithms in Table 1, and note that CVB is located
in the marginalize out parameters and assume latent variables are independent cell.

A Exact Computation of Expectation Terms in (15)

We can compute the expectation terms in (15) exactly as follows. Consider E ˆq [log(α + n¬ij
jk· )],
which requires computing ˆq(n¬ij
jk· ) (other expectation terms are similarly computed). Note that

maximize

Parameters →
↓ Latent variables
Viterbi EM
?
maximize
stochastic EM Gibbs sampling
sample
assume independent variational EM
?
any MCMC
marginalize out
EM

sample

assume
independent
ME
?
VB
EP for LDA

marginalize
out
ME
collapsed Gibbs
CVB
intractable

Table 1: A variety of inference algorithms for graphical models. Note that not every cell is ﬁlled in (marked
by ?) while some are simply intractable.
“ME ” is the maximiza tion-expectation algorithm of [15] and “any
MCMC ” means that we can use any MCMC sampler for the parameter s once latent variables have been
marginalized out.
jk· = Pi0 6=i 111(zi0 j = k) is a sum of independent Bernoulli variables 111(zi0 j = k) each with mean
n¬ij
parameter ˆγi0 jk . De ﬁne vectors vi0 jk = [(1 − ˆγi0 jk ), ˆγi0 jk ]> , and let vjk = v1jk ⊗ · · · ⊗ vn·j· jk be
jk be vjk deconvolved by vijk . Then ˆq(n¬ij
the convolution of all vi0 jk . Finally let v¬ij
jk· = m) will
jk . The expectation E ˆq [log(α + n¬ij
be the (m+ 1)st entry in v¬ij
jk· )] can now be computed explicitly.
j ·· ) time to compute E ˆq [log(α + n¬ij
This exact implementation requires an impractical O(n2
jk· )]. At
the expense of complicating the algorithm implementation, this can be improved by sparsifying the
vectors vjk (setting small entries to zero) as well as other computational tricks. We propose instead
the Gaussian approximation of Section 3.1, which we have found to give extremely accurate results
but with minimal implementation complexity and computational cost.

Acknowledgement

YWT was previously at NUS SoC and supported by the Lee Kuan Yew Endowment Fund. MW was
supported by ONR under grant no. N00014-06-1-0734 and by NSF under grant no. 0535278.

In M. I. Jordan, editor, Learning in

References
[1] D. Heckerman. A tutorial on learning with Bayesian networks.
Graphical Models. Kluwer Academic Publishers, 1999.
[2] D. M. Blei, A. Y. Ng, and M. I. Jordan. Latent Dirichlet allocation. JMLR, 3, 2003.
[3] W. Buntine. Variational extensions to EM and multinomial PCA. In ECML, 2002.
[4] M. Rosen-Zvi, T. Grifﬁths, M. Steyvers, and P. Smyth. The author-topic model for authors and documents.
In UAI, 2004.
[5] T. L. Grifﬁths and M. Steyvers. Finding scienti ﬁc topics
. In PNAS, 2004.
[6] L. Fei-Fei and P. Perona. A Bayesian hierarchical model for learning natural scene categories. In CVPR,
2005.
[7] T. P. Minka and J. Lafferty. Expectation propagation for the generative aspect model. In UAI, 2002.
[8] W. Buntine and A. Jakulin. Applying discrete PCA in data analysis. In UAI, 2004.
[9] M. Opper and O. Winther. From naive mean ﬁeld theory to the TAP equations. In D. Saad and M. Opper,
editors, Advanced Mean Field Methods : Theory and Practice. The MIT Press, 2001.
[10] G. Casella and C. P. Robert. Rao-Blackwellisation of sampling schemes. Biometrika, 83(1):81–94, 1996.
[11] M. J. Beal. Variational Algorithms for Approximate Bayesian Inference. PhD thesis, Gatsby Computa-
tional Neuroscience Unit, University College London, 2003.
[12] J. Sung, Z. Ghahramani, and S. Choi. Variational Bayesian EM: A second-order approach. Unpublished
manuscript, 2005.
[13] W. Li and A. McCallum. Pachinko allocation: DAG-structured mixture models of topic correlations. In
ICML, 2006.
[14] E. M. Airoldi, D. M. Blei, E. P. Xing, and S. E. Fienberg. Mixed membership stochastic block models
for relational data with application to protein-protein interactions. In Proceedings of the International
Biometrics Society Annual Meeting, 2006.
[15] M. Welling and K. Kurihara. Bayesian K-means as a “maxim ization-expectation” algorithm. In SIAM
Conference on Data Mining, 2006.

