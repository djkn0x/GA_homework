Predicting connection quality in peer-to-peer real-time 
video streaming systems 

 

Alex Giladi  
Jeonghun Noh 
Information Systems  Laboratory, Department of Electr ical Engineering 
Stanford University, Stanford, CA 94305 
Email: {agilad i, jhnoh}@stanford.edu 

 
Introduction 
In  server-based  video   streaming   systems,  the content provider  transmits  a video   stream   to  each  client  (e.g. 
PC,  PDA,  set-top   box,  etc) .  However,  peer-to-peer   (P2P)  streaming   systems   provide  a  more  efficient  
alternative, u tilizing the uplink bandw idth of each participating peer. In server-based streaming systems  the 
number  of  media  servers  required  to  serve  an  audience  grows  linearly  w ith  the  number  of  viewers. 
However, the P2P approach is  self-scaling, since each peer acts  as  a media server. 
 
In  our  P2P  video  streaming  system,  multip le  multicast  trees  are  constructed  as  a  distribu tion  structure.  A  
video  source  (or  the  server)   is   the  root  of  all  trees,  wh ile  other  par ticipating  peers  at  either  intermed iate  
nodes  or  leaf   nodes.    When  a  new  peer  joins  a  video  mu lticast  group,  it  needs  to  f ind  parents ,  i.e.  nodes  
from which  it w ill be receiving  its v ideo input.  
 
The  JOIN  stage of connection  establishment protoco l, each   joining  peer  contacts  the  server  to obtain  a  list 
of  randomly   chosen   connected  peers .  The  join ing  peer   con tacts   all  the  members   of  the  list  and   waits   for 
replies.  From  the  replies,  peers which  report  to  have  enough  throughputs  to  support  an  additional  peer  are 
considered as parent  candidates.  Several  additional cr iteria  (discussed below) can  also be  considered  in  the 
process  of   selecting  a  parent.  Once  the  parents  are  chosen  for  each   tree,  the  jo ining  peer  sends   out 
connection requests to them  and waits  until it is accep ted as a ch ild . 
 
So  far,  in  many  literatures,  the  number  of  peer  nodes  separating  a  peer  from  the  video  source  has  been  
extensively  used  a  parent  selection  metr ic.  Thus  well-balanced  trees  are  constructed ,  minimizing  the 
likelihood  of  connection  d isruption   due  to  loss   of  one  of  the  intermediate  peers .  However,  congestion, 
bandwidth u tilization and connection quality can  be neglected in such tree construction scheme.  
 
To develop  a new paren t  selection algorithm, we propose a  connection prediction method based on  several 
additional  connection-related  parameters  as  a  preliminary  work.  Th is  method  will  predict  connection  
quality from  peers, and shows  the best connection that minimizes  the likelihood of v ideo  packet loss, which  
should  correspond  to  better  perceived  video  quality .  We  will  use  supervised  learning  to  dev ise  such  a  
metr ic,  wh ich  will  be  used  by  each  peer  for  selecting  its  parent.  Since  peers   run  in   real  time,  we  operate 
under complexity and memory usage constraints.  
 
System 
Simulation 
We  have  developed  our  peer-to-peer  video  streaming  system  as  an  extension  module  in  the  ns-2  network  
simu lator.  Since  simu lations   can   be  run  at  our  d isposal,  it  is  rather  easy  to  create  data  sets   from   many  
different  poin t  of   views.  In  o ther words ,  adding  or   remov ing  features   is  simple  in  the  sense  that  we  run  a  
new  simu lation   by  modifying   the  code  and   produce  or  suppress   relevant  observation  values  in  the  
simu lation ou tput. 

 

Downlink  
 
512 kb /s 
   3 Mb /s  
1.5 Mb /s  
 20 Mb /s  
 20 Mb /s  

  Up link       Percentage   

256 kb /s 
384 kb /s 
896 kb /s 
   2 Mb /s  
   5 Mb /s  

    56% 
    21% 
      9% 
      3% 
    11% 

 
Figure 1:  Topo logy used in the simulat ion                       Table 1:  Bandwidth  d istribut ion 
 
Each   simu lation   consists   of  one  v ideo   source  and  300   peers.    Peers   have  heterogeneous   bandw idth  
described in  the  table 1. Mu ltiple mu lticast trees are constructed  to distribu te v ideo packets from  the  source 
to  all  other  peers  using  our  distr ibuted  p2p  protocol.  The  network  topology  used  in  the  simu lation  is  
depicted  in the figure 1. The simulation length  is  15 minutes. We ran several simulations to obtain  raw  data.  
Then,  post-processing  is  done  to  generate  the  final  training  data  sets  by  evaluating  the  performance  
statistics  of each selected paren t. As peers  join and leave the group randomly according  to Poisson process, 
we  collect  data  from   session   lengths   larger   than   45  seconds  to   reduce  the  effect  of  different  length   of  
sessions.  A lso,  we  removed   the  sessions   from   the  in itial  period  when   peers  on ly  join   and  none  of   them  
leave.  Here,  we  define  a  session  as  a  b lock  of  time  in  which  a  child  peer  is  connected   to  a  parent  peer . 
When  disconnect  from  existing   paren t  peers   occurs ,  the  ch ild  peer   starts  a  new   session w ith  a  new  parent  
peer.  The  fo llow ing  f igure  2   shows   the  cumu lative  distribu tion   of  the  session   lengths   obtained  from   the 
simu lation results.  

  
 
 
 
 
 
 
 
 
   
 
 
 
Figure 2: D istribution o f session lengths                        F igure 3 : Distribu tion of video reception ra te of peers 

Input features 
We obtain the following  measuremen ts for data sets: 
•  Connect ion t ime: session time for wh ich  the paren t-ch ild connection is active 
•  Hop count:  number of peers  in  the log ical path from the source to the peer 
•  Number of ch ildren: to tal number of immediate children of the po tential paren t (i.e. on all trees) 
•  Bandw idth: peer’s up link bandwidth 
•  Network J itter: jitter in video packets inter-arrival times  
•  RTT: round-trip time to the paren t at the time connection  was estab lished 
• 
Input  video  stream  quality:  number  of  received  packets  d ivided  by  the  number  of  packets  sent 
out from the source over T seconds (T is set to  45 seconds) 
•  Output   video  stream  quality:  number  of   transmitted   packets   to  a  specif ic  peer   div ided   by  the 
number of packets enqueued into the output queue 

 

Output of the learning algorithm 
Evaluation of  each  peer , in o ther  words, to  predict connection quality  that w ill be given  by the peer is  based  
on  the  features  obtained  from   the  peers  as  input  and  the  label  we  put  on  such  features .  S ince  the  timely  
recep tion of v ideo packets  is  critical  for  real- time video  streaming , we define  in-time packet  reception  rate 
as the label. 
 
While  loss  probability  estimation  seems  to be a  regression p roblem, using   regression  techniques  can  result 
in  several problems .  I t has  been   shown  that  randomization o f paren t  selection   is   important  for main taining  
balanced  multicast  trees.  Moreover,  reducing  the  sub tree  size  makes  the  system  more  resilient  to  peer  
disconnections.  On  the  o ther   hand,  the  degree  of   precision  of  a  regression   technique  w ill  lead   to  a  very  
determin istic  performance,  since  all  peers   w ill  try   to   attach  to  the  same  'best'  parents .  Moreover,  the 
training data might have a cer tain  amoun t of  outliers  if  not discretized. In  order  to  avoid  this  case, we chose  
to define  the problem  as  a mu lti-class classif ication problem , where 4-8 discrete  classes of  loss probability  
might be defined. However , due to  the way the quality  values are d istr ibuted  (where more than half  of peers  
report 100%-98% quality), we reduced this further  in to a binary classif ication problem. 
 
Experiment, results and discussion 
The  P2P  system  and  the  data  loggers  were  implemented  as  plug-ins  for  the  NS-2  network  simu lator.  The 
generated  data  was  preprocessed  using  a  C++  program,  which  modeled  the  system  from  the  log  data  
generated  on  NS-2.  The  program  summar ized  the  data  (so   that  a  single  training  record  ref lects  a  sing le 
parent-ch ild  relationsh ip), rescaled it, and calculated  few  statistics. 
 

Feature selection using logistic regression 
We  used  logistic  regression  for   feature  selection.    To  see which  feature  is   the  most  important, we  f iltered  
out  the  unnecessary  features  based  on  their  correlation  with  the  ground-truth  values  and  between  
themselves . 

Figure 4: Training error with differen t feature sets 

 

 
Several  stages  of  filter ing  brought  the  number  of  features  down  to  the  following  three,  w ith  a  negligib le  
increase in  train ing error (as can be seen from  the p icture above): 
•  Mean number of immediate children 
•  Hop distance to the source 
•  Uplink bandw idth 

 
One  reasoning  behind  this  result  is  as  follows:  The  more  peers  register  as   children,  the  less  resources  will  
be  lef t  to  a  child,  which   will  cause  a  ‘fan-out  effect’,  when  all  the  peers   will  be  equally  starved.  The 
influence  of  the  logical  hops  from  the  source  can  be  easily  explained  by  the  fact  that  the  probability  of  a  

packet arrival is 

, for d istance D , where i is the link label. 

 
The  most  of   the  training   sets  we  used  showed  signif icant  correlation   between  the  number   of  children  and  
hop  distance,  however  we  are  unsure  whether  this  wou ld  also  be  the  case  in  sign ifican tly  larger  (several 
orders  of  magnitude)  data  sets  that  we  are  unab le  to   simulate.  We  tried   all  possible  subsets  of   the  three  
latter features, while in most cases the performance suffered immediately .  

Binary classification using SVM 
Using  the  features   selected  by   the  prev ious  method,  we  utilized  SVM  for  a  binary   classif ication  to  
distinguish good peers and fair peers.  
 

  BW only 

BW/nHops/nChild /last  
BW/nHops 
nHops/last nChild 
/nCh ild 
22.87% 
26.55% 
26.63% 
Train ing error 
26.42% 
28.96% 
28.99% 
Testing error 
Table 2: Bandw idth  distribution . BW stands for peer up link bandw idth, nHops for number of logical 
hops to source, nChild  for number of immediate ch ild peers , last for the last report from peers    
 
We  tried  several  differen t  combinations   of  features  and  the  results  are  shown  in  Tab le  2  above.  If  a  peer  
wants  to use on ly one metr ic  to pred ict a  connection,  the  tab le  suggests   the uplink bandw idth of  the parent 
peer can act as the most influen tial single factor.  
 
When  the  comb ination  of  the  features  suggested  by  the  log istic  regression   resu lts   is  used,  it  ach ieves  the 
lower  testing  error,  but  the  d ifference  is  negligib le.  Whereas,  when  we  try  the  last  combination,  it 
outperforms  the  other  cases ,  including  all  possib le  choices  of  the  features  not  shown  in  the  tab le.  In  fact,  
this   leads  us   to  a  fur ther   investigation   with  a  larger  feature  with   similar   characteristics   of  peers .  In  other  
words, samp ling  the same feature from  the peers  can be a good measure for  predicting connection  qualities.  
In the tab le, ‘ last’ means the last report from the parent peers . 
 

Figure 5:  Choosing  the optimal Gamma and C 

 

! (1"ploss(i))i=0i<D# 
Figure  5  shows   the  optimal  gamma  and  C  values  used  in  SVM. We  adopted  the Gaussian  kernel with  the 
L1 regularization. Using the optimal kernel parameters, abou t 2% of the error rate can be reduced. 
 
Conclusion 
We have  seen  that connection quality can be well predicted  using  the  statistics of  its potential parent peers  
at  the  time of connection  establishment. The most  important  statistics were  the peer  bandwid th, number of  
immediate  children and hop d istance  from  the  source  (i.e. depth  level). Our prediction performance  is  fair, 
but not excellen t. However, it is  good enough for  our purposes. The algorithm  provides  a child  a relatively  
large  list  of  paren ts.  Thus,  the  probability  of  selecting  a misclassified  paren t  is  still  relatively  small. A lso,  
getting  the  same  features  over   time  can   lead   to better  prediction  on connection qualities.  It  is  also  inferred  
from the fact  that the relatively h igh errors both  in the train ing and testing sets may result from high b ias  in  
the  mode  selection.  W ith  further  investigation,  this  work  may  lead  to  develop  a  new   method  of  parent  
selection algorithm  using  connection prediction supported by this learning algorithm. 
 
Reference 
E.  Setton,  J.  Noh,  and   B.  G irod,  "Rate-Distortion  Optimized  V ideo   Peer-to-Peer   Multicast  S treaming,"   
Workshop on Advances in Peer-to-Peer Mu ltimedia S treaming at ACM Mu ltimedia , pp. 39-48, Nov. 2005, 
Singapore, inv ited paper. 

