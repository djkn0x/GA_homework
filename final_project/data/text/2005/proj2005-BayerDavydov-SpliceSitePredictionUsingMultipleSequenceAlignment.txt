Splice Site Prediction using Multiple Sequence Alignment 
 
Ross Bayer and Konstantin Davydov 
Collaborators: Marina Sirota, Sam Gross, Serafim Batzoglou 

 
 

 

Introduction 

Computational  predict ion  o f  genes  is 
currently  an  area  o f  active  research.    Since 
only  2%  of  the  ent ire  human  genome  codes 
for  proteins,  ruling  out  the  98%  of  the 
genome  which  does  not  direct ly  result  in 
protein  production  would  be  o f  great  value 
to  genomic  research.   While genes  in  simple 
prokaryotic  organisms 
like  bacteria  are 
relat ively  easy  to  ident ify  (since  they  begin 
with a  start codon1
 and  terminate with a stop 
eukaryot ic 
codon), 
in 
situation 
the 
organisms,  such  as  mammals, 
is  more 
complicated.    Only  certain  parts  of  a  gene 
(known  as  “exons”)  are  actually  transcribed 
into  proteins,  while  other  subsequences 
(known as “introns”) are removed before the 
protein transcript ion process. 

Donor site

Acceptor site

GT

AG

TRANS LATED
INTO PROTEIN

NOT TRANSLATED

TRANS LATED
INTO PROTEIN

Fig 1. Splice Sites 

 
 Splicing  refers  to  the  machinery  which 
removes  these  introns  from  the  sequence,  
and  splice  sites  are  the  locat ions  in  the 
sequence  which  indicate  to  the  splicing 
machinery that splicing should occur2.  Since 
                                                 
1 A codon is a DNA triplet of three base pairs. Each 
such codon is mapped to an amino-acid when 
proteins are transcribed. 
2 A less formal definition is that splice sites mark the 
boundaries between exons and introns. 

 
 

gene  prediction  in  these  more  complex 
organisms can no  longer depend upon such a 
simple  strategy  as  looking  at  start  and  stop 
codons  (since 
introns  can  contain  stop 
codons which will not actually  terminate  the 
gene),  we  need  an  accurate  method  of 
predict ing 
splice 
sites, 
i.e.  modeling 
intron/exon  behavior,  in  order  to  accurately 
predict  the  likelihood  of  a  region  being  a 
gene. 
 

Splice Site Recognition 

 
Splice  sites  fall  into  two  categories:  donor 
sites  at  the  5’  end  of  an  intron  and  acceptor 
sites  at  the  3’  end  of  an  intron  (see  Fig.  1).  
These  sites  display  certain  characterist ic 
patterns,  e.g.  99%  of  donor  sites  begin  with 
GT  and  acceptor  sites  tend  to  end  with  AG.   
However,  not  all  locat ions  with  base  pairs 
GT or AG are necessarily splice sites.  Some 
occurrences of GT or AG occur outside o f  a 
gene  or  inside  an  exon.    These  are  typically 
called decoys, as  they do not  in  fact  indicate 
the  presence  o f  a  splice  site  (see  Fig.  2).  
Nonetheless, the clear presence o f patterning 
within  the data makes  this classification  task 
(between  genuine  splice  site  and  decoy)  
amenable to machine  learning methods.   

GT

GT

Decoys

Decoys

AG

AG

Fig 2. Decoys 

 

Tradit ional  models  have  typically  been 
based  on  Hidden  Markov  Models,  though 
the  very  strong  independence  assumptions 
leave  much  to  be  desired,  especially  for  the 
modeling  o f  long-range  interact ion  effects 
which  bio logists  generally  believe  are 
present.  Support Vector Machines have also 
been  applied  to  the  problem  with  some 
success,  however  only  using  features  from 
the  particular  sequence  o f  interest.    We 
extend  this  approach  to  also  use  features 
from  mult iple 
in 
sequences, 
aligned 
particular:  mouse,  rat,  chicken,  dog,  fugu,  
zebrafish, and chimpanzee (see Fig. 3).  
 

Human      GGCCTAGTAT
Mouse      GGCCAAGCCG
Rat        AGCCAAGCGC
Chicken    -GCCCAGG--
Dog        CGCCGAGATA
Fugu       NNCCCAGGGT
Zebrafish  .....AGGCT
Chimp      GGCCTAGTAA
Fig 3. Multiple Alignment of Species 

 

Sequence  alignment 
is  a  thoroughly 
studied  field  o f  research  which  does  a  good 
job  of  comparing  homo logous  sequences 
from  different  genomes.    We  can  use  such 
alignment  data  as  a  source  for  extracting 
addit ional  features.   This  informat ion  can  be 
quite  useful  since  funct ionally  important 
patterns  are  more  conserved  over  the  course 
of  evo lut ion.    Furthermore,  having  severa l 
sequences  with  different 
evo lut ionary 
distances  from  human  (e.g.  zebrafish  and 
chimp)  will  be  beneficial  too,  as  it  provides 
more  informat ion  about  the  evo lut ionary 
history. 
 

Machine Learning Methodology 

We  used 
John  Platt’s  Sequent ia l 
Minimal Optimizat ion algorithm for Support 

 

 

 
 

Vector  Machines,  as  implemented  by  an 
appropriate  SVM  package 
for  Mat lab 
(LIBSVM)3
.  The domain o f  the features was 
the  base  pair  (A,  T,  C,  or  G)  or  alignment 
informat ion (‘-‘  for gap, ‘N’  for no available 
informat ion,  ‘.’  for  unaligned)  which  we 
represented  with  7  values,  where  the  value 
corresponding  to  the  base  pair   is  1  and  the 
other values are 0 (i.e. A  is represented as [1 
0 0 0 0 0 0], T  is  represented  as  [0 1 0 0 0 0 
0],  C  as  [0  0  1  0  0  0  0],  etc).   We  have  one 
feature  for  each 
locat ion 
in  the  range 
spanning  3  positions  before  a  suspected 
donor  site  to  37  posit ions  after  for  each 
sequence  in  the  mult iple  alignment.  In  the 
case  o f  acceptor  sites,  the  corresponding 
range  was  from  6  posit ions  before  to  3 
posit ions  after  for  each  species.    These 
specific  ranges  were  chosen  based  on 
bio logical considerat ions. 
Separate  SVMs were  trained  for  the  two 
tasks  of  discriminat ing  between  donor  sites 
and decoy donor sites, and between acceptor 
sites  and  decoy  acceptor  sites.    A  quadrat ic 
to  model 
kernel  was  chosen 
in  order 
interact ion  effects  (possibly 
long-range)  
between  the  various  base  pairs.    In  addition,  
different  penalt ies  were  used  in  the  cases  o f 
misclassificat ion  of  posit ive  examples  and 
misclassificat ion  of  negat ive  examples,  
since  in this field o f research, false negat ives 
are  much  more  damaging 
than 
false 
posit ives.    This  rat io  was  adjusted  to  be 
1:1000  in  line  with  a  best  approximat ion  o f 
the  ratio of  true  splice  sites  to decoys within 
the actual human genome. 
 

Data 

 

In 
Serafim 
with 
co llaboration 
Batzoglou’s  computational  bio logy  research 
group, we obtained  the  full genome mult iple 
alignment  (in  FASTA  format)  of  human,  
mouse,  rat,  chicken,  dog,  fugu,  zebrafish,  
                                                 
3 See http://www.csie.ntu.edu.tw/~cjlin/libsvm/. 
 

and  chimpanzee  from  the  UCSC  browser.  
In  addit ion,  we  obtained  human  gene 
annotation  files  (in  GTF  format4)  which 
label  exons within well-studied  genes.    This 
was  used  as  the  source  for  supervised 
learning.    These  annotation  files  were  used 
to  extract  known  splice  sites  from  the  given 
alignments  using  human  as  our  reference 
species.    These  splice  site  locat ions  were 
then  used  to  generate  positive  examples  for 
our  SVM  training  by  scanning  through  the 
alignment  file  for  each of  the  chromosomes.   
Particular  attention  was  paid  to  the  case  o f 
splice  sites  on  the  negat ive  strand,  in  which 
case  the  corresponding  sequence data had  to 
be  reversed  and  complemented  for  the 
format to be comparable. 
In  order  to  generate  negat ive  examples 
(decoys), a high number of random positions 
within  the  genome were  chosen,  each  likely 
with  extremely  high  probability  to  not  be  a 
splice site (a random posit ion has probabilit y 
of  about  0.000009  of  being  a  splice  site).  
The  features  for  these  random  posit ions 
were 
then  extracted  from 
the  mult iple 
alignment, but only those which happened to 
fall  upon  an  AG  or  a GT were  kept  in  order 
to iso late decoys.   
The 
to  negat ive 
rat io  of  posit ive 
examples  was  adjusted  to  be  approximately 
1:1,  bearing  in  mind  that  a  higher  false 
negat ive  penalty  was  used.    Training  for 
each  SVM  model  was  done  on  a  randomly 
selected  subset  of  the  data  in  which  each 
example  had  70%  chance  of  being  included 
in the subset, and testing for cross-validat ion 
purposes  was  performed  on  the  remaining 
examples  excluded  from  the  training  set 
(approximately 30% of the data). 
 

SVM Input 

The result ing  input to the SVM consisted 
of  the  label  matrix  and  a  features  matrix.   
The  label  matrix  was  a  vector  of  labels,  
                                                 
4 See http://genes.cs.wustl.edu/GTF21.html. 

 

 
 

 

where  a  +1  corresponded  to  a  posit ive  labe l 
(splice  site)  and  a  –1  corresponded  to  a 
negat ive  label  (decoy).    The  features  matrix 
consisted  of  2296  features  (41  posit ions  ×  7 
letters  ×  8  species)  in  the  case  of  the  donor 
site  model,  and  560  features  in  the  case  o f 
the acceptor site model (10 posit ions  instead 
of 41).  
 

Computational Challenges 

There  were 
several 
computationa l 
challenges  invo lved  in  this  data  generat ion 
process.   Due  to the prohibit ively  large sizes 
of  the  sequence  alignment  files  invo lved 
the  24 
each  of 
(several  GB  per 
chromosomes),  extracting 
features 
from 
these  files  had  to  be  performed  in  a  very 
careful  fashion.    First ly,  inefficient  random 
access would  lead to vast slow-downs due to 
repeated  seeks.    Secondly,  reading  in  large 
portions  of  the  file  at  any  t ime  could  use 
considerable  amounts  of  memory  and  in  the 
worst-case scenario result  in thrashing. 
The  approach  taken  to  alleviate  these 
difficult ies  was  to  calculate  beforehand  all 
the  positions  within  the  chromosome  that 
would  be  analyzed  and  potentially  have 
features  extracted.    As  ment ioned,  this  was 
done  based  on  the  GTF  annotation  files,  
fo llowed  by  generation  o f  random  posit ions 
for negat ive examples.   These posit ions (and 
posit ive/negative  status)  were  all  stored 
within  a  single  vector,  which  was  then 
sorted in  increasing order. 
This  allowed  scanning  o f  the  alignment 
file to be done  in sequent ial order.  Since the 
posit ions  were  known  in  advance,  seeking 
could  be  done  to  each  correct  posit ion 
direct ly,  avo iding  the  unnecessary  overhead 
of  reading  in  large  buffers,  and  speeding  up 
file  traversal  time.    In  addit ion,  the  features 
for  each  training  example  were  built  up 
incrementally  species  by  species.    In  other 
words,  all  examples  had  their  features  for 
human  populated,  then  all  examples  had 

their  features  for  mouse  populated,  and  so 
on.    This  could  be  done  since  the  length  o f 
each  chromosome  was  known  in  advance,  
allowing  direct  calculat ion  o f  the  correct 
locat ion  within  the  file. 
  This  species 
optimizat ion  ensured  that  the  entire  file 
traversal  was  also  in  strictly  sequent ia l 
order,  reducing  the  total  seek  t ime  to  the 
minimum  possible.    This  strategy  allowed 
for  minimal  total  access  to  the  alignment 
file,   and  made  dealing  with  such  huge  files 
quite practical. 
 
 

Results 

 
We  trained  two  separate  SVMs,  one  to 
recognize  acceptor  splice  sites  and  one  to 
recognize  donor  splice  sites,  and  ran  the 
result ing SVM on  the  test data.   The number  
of  training  examples  was  varied  gradually,  
 

for  which 
the  corresponding 
test  set 
accuracy  is  plotted  below  (see  Fig.  4).    As 
expected,  as  we  increased  the  number  of 
training  examples,  the  test  set  accuracy 
rapidly  increased  and  then  leveled  o ff.    For 
the  largest  number  o f  training  examples 
experimented  on  (1,875  examples),  we 
achieved  a  test  set  accuracy  o f  about  99.9% 
for  both  the  donor  and  the  acceptor  models.  
In  general,  the  acceptor  model  performed 
better  than  the  donor  model.    One  possible 
explanat ion  for  this  is  that  since  the  donor 
SVM  used  considerably  more  features,  it 
was  more  prone  to  over-fitt ing  for  low 
training  set  sizes,  potentially  leading  to  a 
higher  generalizat ion  error. 
  Overall,  
however,  the  result s  were  very  impressive 
and  suggest  that  this  approach  to  splice-site 
recognit ion  is  an  extremely  fruit ful  avenue 
of explorat ion. 

 

Le ar n ing  Cur ve s

100

99

98

97

96

95

94

y
c
a
r
u
c
c
A
 
t
e
S
 
t
s
e
T
 
%

93

0

200

400

600

800

1000
Training Examples

1200

1400

1600

1800

2000

Donor S ites   (Multiple A lignment)

Acceptor S ites  (Mult iple A lignment )

Fig 4. Learning Curve Results 

 

 
 

