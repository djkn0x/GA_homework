Spike Feature Extraction Using Informative Samples

Zhi Yang, Qi Zhao and Wentai Liu
School of Engineering
University of California at Santa Cruz
1156 High Street, Santa Cruz, CA 95064
{yangzhi, zhaoqi, wentai}@soe.ucsc.edu

Abstract

This paper presents a spike feature extraction algorithm that targets real-time
spike sorting and facilitates miniaturized microchip implementation. The pro-
posed algorithm has been evaluated on synthesized waveforms and experimen-
tally recorded sequences. When compared with many spike sorting approaches
our algorithm demonstrates improved speed, accuracy and allows unsupervised
execution. A preliminary hardware implementation has been realized using an
integrated microchip interfaced with a personal computer.

1

Introduction

Real-time extraction of information from composite neural recordings is a signi ﬁcant challenge in
neural interfacing. Developing integrated circuit (IC) to enable portable and implantable systems
is important to allow the study of complex behavior in neuroscience experiments, closed loop deep
brain stimulation, and cortical controlled neuromuscular prostheses. In order for a spike feature
extraction algorithm to be functional as a small device with real-time low-latency processing and
low power operation it must be efﬁcient in both computation a nd IC implementation.

Implementing spike sorting before data telemetry offers many signi ﬁcant advantages. Spike feature
extraction provides the necessary information required to sort spikes from raw sampled data. With
this information each spike event can be represented by its unique features and ﬁring time, result-
ing in signi ﬁcant data compression. A data transceiver desi gned with the current semiconductor
technology can simultaneously support a large number of recording channels for a microchip im-
plementation to extract the spike feature. System integration using wireless power telemetry or a
rechargeable battery as well as wireless data telemetry removes the need for tethering wires. As a
result, a fully wireless operation would relieve the subjects overall stress factor and allow them to
move freely in their natural environment.

Frequently used spike feature extraction algorithms include principal component analysis (PCA)
[1], bayesian algorithm [2], template matching [3], wavelets [4] and independent component anal-
ysis (ICA) [5], which demand signi ﬁcant computation. Effor ts to improve the efﬁciency of these
algorithms have been reported, however, these efforts relied on either over simpli ﬁed functionality
or bulky hardware systems that consume excessive power.

In part, complex algorithm procedures are applied to mediate the effects of noise and distortion in the
recording process. The associated noise includes ion channel noise, activities from distant neurons,
ﬁeld potentials, thermal noise and circuit noise. Signi ﬁca
nt sampling distortion is also present since
it is unrealistic to synchronize the sampling clock with individual recorded spikes.

This paper reports a new spike feature extraction algorithm which is suitable for real-time spike
sorting and enables integrated microchip implementation.

2 Related Work

2.1 PCA Based Spike Feature Extraction

PCA is a feature extraction algorithm widely employed for spike sorting. It uses correlation between
samples and computes the vectors capturing the maximal variance. PCA algorithm performs well
given a strong correlation between samples by reporting relevant features. However, recorded spikes
are usually corrupted by large low frequency noise and distortion, which blur sample correlation and
compromise the quality of the estimated covariance matrix and its eigenvectors. As a result, PCA
may fail to resolve spike clusters in noisy recordings.

2.2 Variable Selection Techniques

As a complementary approach to dimensionality reduction algorithms, Jolliffe discussed a general
feature extraction algorithm based on a subset of samples in the classic work [6]. This concept
requires only a subset of samples containing the necessary information to cluster the data; as opposed
to using all of the samples. These informative samples are especially useful in the presence of single
prominent sample set.

There are two challenges facing a sample selection algorithm. The ﬁrst challenge is the computa-
tional burden to select informative samples. If the training procedure is as complicated as suggested
in [6], it would prohibit microchip implementation for implant purposes. The power and area are the
primary problems with the microchip implementation of other spike feature extraction algorithms.
The second challenge is the availability of localized features. Improved performance compared to
PCA is unlikely if localized features are not prominent.

2.3 Our Approach

We have developed a spike feature extraction algorithm based on informative samples. The the-
oretical framework includes neuronal geometry signatures, noise shaping, and informative sample
selection. By evaluating neuronal geometry signatures with the compartment model, we ﬁnd that
high frequency signal spectrum may contain useful information to differentiate neurons. Studying
the noise properties has revealed that a frequency shaping ﬁ lter can be used to boost the SNR. The
sample selection technique using estimated entropy identi ﬁes informative samples for sorting spikes.
In addition, a preliminary IC implementation of the algorithm has been reported [7, 8] and further
integrated onto a multi-channel neural recording IC with wireless telemetry [9].

3 Geometry Signatures, Noise and Sampling Distortion

3.1 Neuronal Geometry Signature

This section describes how neuronal geometry signatures contribute to the difference among similar
waveforms. Assume that both the intra- and extra- ﬂuids are n eutral, the induced voltage waveform
is
jm (−→r , t)dr
V (−→r0 ) = Z
4πσe |−→r − −→r0 |
where jm is the transmembrane current and σe is the conductivity of the tissue environment; −→r0 and
−→r represent the locations of the point electrode and the active membrane segments, respectively.
Since action potentials propagate slowly along the axonal branches of the cortex neurons (averaged
0.5m/sec − 2m/sec [10]), active membranes do not ﬁre simultaneously. As a resu lt, the detailed
geometry of the underlying neuron inﬂuences the shape of spi kes. Assuming that ionic channels
are uniformly dotted on the active membranes within the recording radius of the electrode, the
spike waveform is modeled as the convolution of the transmembrane current proﬁle and an implicit
geometry kernel function as

(1)

,

V (t) = Z jm (τ )W (t − τ )dτ ,
where W (t) is the geometry kernel function.

(2)

The recorded waveforms from neurons with similar ion channel populations can be very similar. A
general spike sorting algorithm frequently fails to resolve such ambiguity and may report a single,
large, spike cluster. The approach of differentiating associated kernel functions can be used to sort
the similar spikes. Assume W1 (t) and W2 (t) as the geometry kernel functions of two neurons with
the same ion channel population, the difference between the two spikes is
△V (t) = Z jm (τ )[W1 (t − τ ) − W2 (t − τ )]dτ ,
(3)
Small waveform differences appear if R (W1 (t) − W2 (t))dt ≈ 0. Intuitively, the condition means
the waveforms are identical, ignoring the skew of the activation of membranes.
To differentiate the waveforms, we rewrite Eq. 3 in the frequency domain as
(4)
F (△V ) = F (jm )F (W1 − W2 )
where F () denotes the fourier transform. The condition of R [W1 (t) − W2 (t)]dt ≈ 0 is equivalent to
F (W1−W2 ) ≈ 0|f =0H z , which implies that the waveform difference caused by the geometry kernel
functions has small contribution at lower frequency spectrum. A more quantitative explanation can
be given by studying the derivative of F (△V ) with respect to the frequency using Eq. 4
∂F (△V )
∂F (jm )
∂F (W1 − W2 )
∂ f
∂ f
∂ f

F (W1 − W2 ) + F (jm )

(5)

=

,

F (jm )

where f is frequency.
Note that F (jm ) is narrowly band limited signal and F (W1 − W2 ) serves as a notch frequency mask
with a relative wider spectrum. The ﬁrst term in Eq. 5 is atten uated by F (W1 − W2 ) within the
dominant spectrum of F (jm ). Otherwise, appreciable waveform difference is expected according to
Eq. 4. The second term in Eq. 5, on the other hand, exhibits a strong frequency dependency within
the dominant spectrum of F (jm ). It can be expanded as
∂F (W1 − W2 )
≈ 2πF (jm ) Z (W1 (t) − W2 (t))t sin(2πf t)dt,
∂ f
when kernel functions Wi are symmetrical.
In summary, the waveform difference between similar neurons caused by geometry functions satis-
ﬁes the following conditions
½ F (△V ) ≈ 0|f =0H z
∂F (△V )
∂ f ≈ 4π2 f F (jm ) R (W1 (t) − W2 (t))t sin(2πf t)
2πf
In Eq. 7, ∂F (△V )
is linear to frequency f at low frequency region, as sin(2πf t)
2πf t ≈ 1. The strong
∂ f
emphasis on frequency shows that F (△V ) exhibits a higher frequency spectrum. As a result, a
frequency-shaping ﬁlter that emphasizes on high-frequenc y spectrum may help to differentiates ker-
nel functions.

dt ∝ f .

(7)

(6)

3.2 Noise and Sample Distortion

)α + Ntherm ,

N (f ) = Nneu + Ne.e + N1/f + Ntherm ≈ Nfc1 (

An estimated power spectrum of noise associated with recorded neural signal, where the dominance
of low frequency noise is clear, is plotted in Figure 1. The noise proﬁle is approximately ﬁtted as
fc1
f
where Nneu is the neuronal noise, Ne.e is the electrode-electrolyte interface noise, N1/f is the ﬂicker
noise and Ntherm is the thermal noise. The low frequency noise is assumed to have proﬁle following
f −α .
Sampling distortion is unavoidable, since the neuron’s ﬁri ng is random and not synchronized with
the sampling clock of the analog-to-digital converter(ADC). It can be reduced by either increasing
the sampling frequency of the ADC or performing interpolation and alignment in the digital domain.
Both approaches require additional power, computation and storage space, which are not favorable
to microchip implementation. The sampling distortion is related to the slope of the spikes. In case
a fast transition edge is sampled 4 times, the sampling distortion can be more than 10% of the spike
peak-to-peak magnitude. Considerable distortion is expected since “neural spikes ” are, by deﬁnition,
fast changing waveforms.

(8)

m
u
r
t
c
e
p
s
 
r
e
w
o
p

103

102

101

100

10−1

Power Spectrum Of Spikes Recorded Cat Cerabral Cortex

2000

4000

6000

8000
frequency

10000

12000

14000

102

101

100

10−1

Power Spectrum Of Spikes derivative Recorded Cat Cerabral Cortex

2000

4000

6000

8000

10000

12000

14000

(a)

(b)

Figure 1: noise properties of recordings from a cat cerebral cortex (500 Hz to 15K Hz); (a) noise
power spectrum of raw data. (b) noise power spectrum of the derivative.

4 Sample Information

In order to use informative samples to sort spikes, it is necessary to quantify the information carried
by individual spike samples. Intuitively, a sample is considered to be informative if the superimposed
spikes can be classi ﬁed into multiple clusters by evaluatin g that sample alone. The method used to
quantify the sample information is outlined below.

Sample Information Estimation

Input: M peak aligned spike segments {vi , i = (1, M )} with N samples for each segment
Output: Information inf oj carried by spike samples {vi (j ), i = (1, M )}
• j = 1, construct one dimensional data set X = {vi (j ), i = (1, M )}
• Obtain a nested cluster conﬁguration based on X
• Estimate the possibility pq that a spike being partitioned into the q th cluster. Use the entropy
to estimate the information inf oj = − Ppq >p0 pq ln(pq ), where p0 is a threshold of the
cluster size.
• Repeat the procedures to a different sample, e.g. j = j + 1.

The computation required to accurately quantify the entropy of an underlying data set is typically
high. However, only a rough estimation is required to select informative samples. Therefore, the
amount of spikes to compute information can be reduced to a relatively small number, which should
allow hardware implementation in terms of storage space and computation complexity. With the
synthesized spike data we used, each sequence contains 3 neuronal sources with similar ﬁring rate.
As a result, the possible information score should be 0, 1
3 Ln(3) + 2
3 ln(1.5) or Ln(3). When we
increase the mount of training events to M = 300 the information scores approximately settle to the
expected values, as shown in Figure 2.

Quantitative comparisons to investigate the existence of informative samples in noisy spikes have
been done. Results using synthesized spikes with recordings from neocortex and basal ganglia [4]
are shown in Figure 2. There are two clear observations. First, the amount of information carried by
each sample varies, indicating a non-uniform signal-to-noise-plus-distortion-ratio. Second, it is nec-
essary to create informative samples if due to severe noise, distortion and similarity of spike clusters,
few of the samples is informative. As a constraint to create informative samples, the computation
and storage space have to be feasible for microchip implementation.

5 Create Informative Samples Using Frequency Shaping Filter

As analyzed in Section 3, a frequency shaping ﬁlter can be use d to manifest different geometry
kernel functions, reduce noise and redistribute distortion among spike samples. Such a ﬁlter is

1.2

1

0.8

0.6

0.4

0.2

0

spike derivative
spike

0.8

0.6

0.4

0.2

0

n
o
i
t
a
m
r
o
f
n
i

spike derivative
spike

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

n
o
i
t
a
m
r
o
f
n
i

spike derivative
spike

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

n
o
i
t
a
m
r
o
f
n
i

−0.2

0

5

10

15
20
sample number
(a)

25

30

35

−0.2

0

5

10

15
20
sample number
(b)

25

30

35

−0.1

0

5

10

15
20
sample number
(c)

25

30

35

−0.1

0

5

10

1.2

1

0.8

0.6

0.4

0.2

0

spike derivative
spike

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

n
o
i
t
a
m
r
o
f
n
i

spike derivative
spike

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

n
o
i
t
a
m
r
o
f
n
i

spike derivative
spike

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

n
o
i
t
a
m
r
o
f
n
i

n
o
i
t
a
m
r
o
f
n
i

n
o
i
t
a
m
r
o
f
n
i

spike derivative
spike

25

30

35

15
20
sample number
(d)

spike derivative
spike

−0.2

0

5

10

15
20
sample number
(e)

25

30

35

−0.1

0

5

10

15
20
sample number
(f)

25

30

35

−0.1

0

5

10

15
20
sample number
(g)

25

30

35

−0.1

0

5

10

25

30

35

15
20
sample number
(h)

Figure 2: (a) - (h) information carried by samples from spikes and their derivatives. Horizontal axis
is the sample number and vertical axis is the estimated entropy. The black solid line and red dotted
line represent the sample information from spikes and their derivatives, respectively.

designed to boost high frequency spike features, which should be localized and less correlated if
examined in time domain. In this section, we use derivative operation as an example to illustrate the
usefulness of the frequency shaping ﬁlter, and further demo nstrate that the ﬁlter creates additional
informative samples.

In a discrete time spike sequence, the frequency response of taking derivative is
H (f ) = 2ejπf /2 sin(πf /fs ),
where fs is the sampling frequency of the ADC.
As shown in Section 3.1, the difference between neuron geometry kernel functions W (t) of similar
spikes is contained in the higher frequency components, which should be emphasized by derivative
operation.

(9)

The noise power spectrum is modi ﬁed by taking derivative.
In tuitively, low frequency noise is
reduced and the high frequency thermal noise is ampli ﬁed, as shown in Figure 1 (b). The quantitative
impact of the frequency shaping ﬁlter on noise is affected by the recording system and biological
environment, and the typical values of α we observe vary around 2 within the signal band as shown
in Figure 1. Use α = 2 for illustration, the ﬁlter’s inﬂuence on noise could be qua
nti ﬁed by α Eq. 9
1
fc1 fc2
2f 2
2
spike
where fc1 and fc2 are the lower and higher corner frequencies of the digital ﬁl
ter, respectively. In
case λ is less than 1, SNR further increases, which favors spike sorting from the noise perspective.
The sampling distortion distribution among samples is altered after taking the derivative. In the
original waveforms, samples close to peaks suffer less distortion compared with those in transition.
After taking the derivative, samples initially suffering from large distortion become less distorted
because V ′′ (t) in Eq. 2 has at least one zero crossing point during the transition. Quantitative
experiments to demonstrate the creation of informative samples have been done.

(10)

λ ≈

≤

,

A subset of results are shown in Figure 2 (a) - (h). In these data, the black solid lines represent
information carried by the samples from spikes and the dotted red lines represent the derivatives.
The spike data are 8 challenging sequences from [4]. They are compiled from recordings in the
neocortex and basal ganglia with superimposed noise. All 8 sequences contain 3 neuronal sources.

During estimation of sample entropy, a mean shift classi ﬁer with a hierarchical merging procedure
is being used to quantify the partition. Small clusters with events less than 5% are ignored. The
corresponding feature extraction results using the most informative samples from spikes as well as
their derivatives are shown in Figure 3 (a) - (h), which clearly presents a 3 cluster conﬁguration.

0.6

0.4

0.2

0

−0.2

−0.4

−0.6

0.8

0.6

0.4

0.2

0

−0.2

−0.4

−0.6

−0.8

0.8

0.6

0.4

0.2

0

−0.2

−0.4

−0.6

−0.8

0.6

0.4

0.2

0

−0.2

−0.4

−0.6

0.8

0.6

0.4

0.2

0

−0.2

−0.4

0.4

0.6

0.8

−1
−0.8

−0.6

−0.4

−0.8
−0.8

−0.6

−0.4

−0.2
0
0.2
(a)

−0.2
0
0.2
(b)

0.4

0.6

0.8

−1
−0.8

−0.6

−0.4

−0.2
0
0.2
(c)

0.4

0.6

0.8

−0.8
−0.8

−0.6

−0.4

−0.2
0
0.2
(d)

0.4

0.6

0.8

−0.6
−0.6

−0.4

−0.2

0.6

0.8

1

0
0.2
0.4
(e)

0.6

0.4

0.2

0

−0.2

−0.4

−0.6

0.6

0.4

0.2

0

−0.2

−0.4

−0.6

0.2

0.4

0.6

0.8

−0.8
−0.6

−0.4

−0.2

−0.8

−0.6

−0.4

−0.2
0
(f)

0.6

0.4

0.2

0

−0.2

−0.4

−0.6

−0.8
−1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0
0.2
(g)

0.4
0.6
(o)

0.4

0.6

0.8

−0.8
−0.8

−0.6

−0.4

0.4

0.6

0.8

−0.2
0
0.2
(h)

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.8

1

0

0

0.2

0.8

1

0.4
0.6
(p)

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.8

1

0

0

0.2

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.8

1

0

0

0.2

0.8

1

0

0

0.2

0.4
0.6
(w)

0.8

1

0.4
0.6
(x)

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.8

1

0

0

0.2

0

0

0.2

0.4
0.6
(i)

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.8

1

0

0

0.2

0

0

0.2

0.4
0.6
(q)

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.4
0.6
(j)

0.4
0.6
(r)

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.8

1

0

0

0.2

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.8

1

0

0

0.2

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.4
0.6
(k)

0.4
0.6
(s)

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.8

1

0

0

0.2

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.8

1

0

0

0.2

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.4
0.6
(l)

0.4
0.6
(t)

0.4
0.6
(n)

0.4
0.6
(v)

0.8

1

0

0

0.2

0.8

1

0

0

0.2

0.4
0.6
(m)

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.8

1

0

0

0.2

0.8

1

0

0

0.2

0.4
0.6
(u)

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

0

0.2

0.4
0.6
(y)

0.8

1

0

0

0.2

0.4
0.6
(z)

0.8

1

0

0

0.2

0.4
0.6
(aa)

0.8

1

0

0

0.2

0.4
0.6
(ab)

0.8

1

0

0

0.2

0.4
0.6
(ac)

0.8

1

0

0

0.2

0.4
0.6
(ad)

0.8

1

0

0

0.2

0.4
0.6
(ae)

0.8

1

0

0

0.2

0.8

1

0.4
0.6
(af)

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

0

0.2

0.4
0.6
(ag)

0.8

1

0

0

0.2

0.4
0.6
(ah)

0.8

1

0

0

0.2

0.4
0.6
(ai)

0.8

1

0

0

0.2

0.4
0.6
(aj)

0.8

1

0

0

0.2

0.4
0.6
(ak)

0.8

1

0

0

0.2

0.4
0.6
(al)

0.8

1

0

0

0.2

0.4
0.6
(am)

0.8

1

0

0

0.2

0.8

1

0.4
0.6
(an)

Figure 3: feature extraction results using the proposed algorithm and competing algorithms. (a) -
(h) display the extracted features using the most informative samples of spikes and their derivatives
(proposed). (i) - (p) display the extracted features using a subset of samples includes the peaks of
the spike derivative and spike height (implemented on chip, proposed). (q) - (x) display the PCA
based feature extraction. (y) - (af) display the wavelets based feature extraction. (ag) - (an) display
spike peaks based feature extraction. (All the algorithms are tested without performing interpolation.
Nonlinear energy operator (NEO) [11] is used as the spike detection algorithm. Overlapping spikes
within 600 µS ec are ignored. Haar wavelet is used to perform wavelets based feature extraction, and
features are obtained from the variance peaks after the wavelet transform. Two dimensional features
are projected from a higher dimensional space.)

Table 1: Accuracy comparison of using different spike feature extraction algorithms
8
1
Sequence Number
7
6
5
4
3
2
92.0%
97.8% 97.8% 97.8% 97.0% 98.0% 99.2% 96.6%
Informative Samples
Hardware
97.6% 97.6% 97.4% 95.4% 98.2% 98.4% 93.2%
91.0%
68.8%
97.8% 89.0% 60.4% 55.2% 97.6% 77.8% 80.2%
PCA
49.4%
92.4% 91.0% 81.8% 57.4% 97.4% 68.2% 51.0%
Wavelets
Spike Peaks
34.2% 33.8% 35.4% 34.0% 36.2% 37.8% 35.6%
36.0%
Note: Informative samples are harvested from both spikes and their derivatives. Hardware uses peaks
of spikes and their derivatives. 3000 spikes each sequence from [4].

6 Experiments

Synthesized spike sequences used in Figure 2 are applied to compare the sorting accuracies of differ-
ent approaches. Feature extraction using the pre-speci ﬁed subset consists of the peaks of the spike
derivative as well as the height of the original spike is shown in Figure 3 (i) - (p). Comparative
feature extraction results using competing algorithms, e.g, PCA, wavelets, spike peaks and width
are also shown in Figure 3. The extracted spike features are clustered on a PC [12]. About 5%
overlapping spikes are ignored to clearly quantify the performance of different spike feature extrac-
tion algorithms. The proposed feature extraction algorithm including the most informative samples
(corresponding to Figure 3 (a) - (h)) achieves the highest accuracy (97.0%). The hardware [9, 8]

0.6

0.4

0.2

0

−0.2

−0.4

−0.6

−0.8

0

1

0.8

0.6

0.4

0.2

0
1

0.8

0.6

0.4

0.2

0

1

0

0.5

5

10

15

20

25

30

35

(a)

(b)

(c)

(d)

(e)

(f)

(g)

(h)

(i)

(j)

(k)

Figure 4: (a) recorded spikes from cat cerebral cortex are superimposed, (b) the extracted spike
features using a subset of samples are plotted and grouped with a clustering algorithm implemented
on PC. (c) the classi ﬁed spike clusters are superimposed. (d ) - (k) individual spike clusters super-
imposed in (c) are displayed. Spike clusters in (d) - (g) are plotted in a smaller vertical scale (-0.3,
0.15) compared with (h) - (j) in (-0.5, 0.3) and (k) in (-0.5, 0.5).

using the pre-speci ﬁed subset gives similar accuracy ( 96.1%). The counterpart algorithms include
PCA, wavelets and spike peaks and width give 78.4%, 73.6% and 35.4%, respectively. The sorting
accuracy comparisons are listed in Table 1.

Animal sequences are collected to test the performance of the proposed algorithm. An example
with overlapped spike clusters is selected for demonstration. The sequence is recorded from the
cat cerebral cortex. The sorting results are displayed in Figure 4.
In Figure 4 (a), the detected
1210 spikes are superimposed. Extracted spike features using the pre-speci ﬁed subset of samples
implemented on chip are shown in Figure 4 (b). The discrete points in feature space are grouped
into 8 clusters with different colors using off-line clustering. Less than 10 % of noisy spikes and
overlapping spikes are discarded, the rest are classi ﬁed an d plotted in Figure 4(c). To further quantify
the validity of the classi ﬁed spike clusters, superimposed clusters in Figure 4(c) are individually
plotted in Figure 4(d)-(k).

The second example containing more than 4000 spikes recorded from a monkey is shown in Figure 5.
In Figure 5 (a), detected spikes are superimposed. Extracted features using the pre-speci ﬁed subset
of informative samples are shown in Figure 5 (b). A zoom in of Figure 5 (b) is plotted in Figure 5 (c)
to display the isolation quality of clusters in feature space. The corresponding PCA based feature
extraction is shown in Figure 5 (d) as a comparison. The classi ﬁed spike clusters using the pre-
speci ﬁed subset of informative samples are plotted in Figur e 6 (a) - (e). Spike clusters plotted in
Figure 6 (b), (c) and (d) resemble each other in shape and magnitude. To demonstrate that the
informative samples based sorting does not over partitioning the data set, the derivatives of spike
clusters plotted in Figure 6 (a) - (e) are also plotted in Figure 6 (f)-(j) with the same color indication.
Clearly, Figure 6 (g), (h) and (i) present three well-differentiated waveform patterns in either peak-
to-peak magnitude or shape.

7 Conclusion

A sample selection based spike feature extraction algorithm is reported in this paper. The theoretical
framework includes neuronal geometry signatures, frequency shaping ﬁlter, and informative sample
selection. Unlike PCA which uses correlated features, the sample selection algorithm focuses on
localized and uncorrelated features which are strengthened by the frequency shaping ﬁlter. With
simulated spike waveforms from a public data base, the algorithm demonstrates an improved sort-
ing accuracy compared with many competing algorithms. The algorithm is designed for integrated
microchip implementation and performing real-time spike sorting. A preliminary hardware imple-
mentation has been realized using an integrated circuit chip interfaced with a personal computer.

300

200

100

0

−100

−200

−300

−400

−500

−600

−700

−800

0

0

−0.2

−0.4

5

10

15

20

25

30

35

0

0.05

0.1

0.15

0.2

0.25

0.3

0.35

0

0.4

(a)

(b)

0

−0.02

−0.04

−0.06

−0.08

−0.1

−0.12
0.14

1

0.8

0.6

0.4

0.2

0

0.1

0.2

0.3

0.12

0.1

0.08

0.06

0.04

0.02

0.4

0

(c)

1

0.8

0.6

0.4

0.2

0
1

1

0.8

0.6

0.4

0.2

0.5

0

0

(d)

Figure 5: (a) detected spikes from a monkey, (b) extracted spike features using a subset of samples,
(c) zoom in of (b) for better visualization; (d) extracted features using PCA.

(a)

(f)

(b)

(c)

(d)

(g)

(h)

(i)

(e)

(j)

Figure 6: (a) - (e) the classi ﬁed 5 clusters of the monkey sequ ence shown in Figure 5, (f)-(j) the
derivative of the classi ﬁed 5 clusters. The identity is indi cated by color.

References
[1] Zumsteg ZS, Kemere C, O’Driscoll S, Santhanam G, Ahmed RE, Shenoy KV, et al. Power feasibility of
implantable digital spike sorting circuits for neural prosthetic systems. IEEE Trans Neural Syst Rehabil
Eng. 2005 Sep;13(3):272–279.
[2] Lewicki MS. Bayesian modeling and classiﬁcation of neural signals. Advances in NIPS. 1994;p. 590–597.
[3] Vargas-Irwin C, Donoghue JP. Automated spike sorting using density grid contour clustering and sub-
tractive waveform decomposition. J Neurosci Methods. 2007;164(1).
[4] Quian Quiroga R, Nadasdy Z, Ben-Shaul Y. Unsupervised spike detection and sorting with wavelets and
superparamagnetic clustering. Neural Comput. 2004 Aug;16(8):1661 –1687.
[5] Takahashi S, Sakurai Y. Coding of spatial information by soma and dendrite of pyramidal cells in the
hippocampal CA1 of behaving rats. Eur J Neurosci Methods. 2007 Oct;26(7):2033–2045.
[6] Jolliffe IT. Principal Component Analysys. New York: Springer-Verlag. 2002;.
[7] Yang Z, Chen T, Liu W. A neuron signature based spike feature extraction algorithm for on-chip imple-
mentation. to Appear in Proc 30th Ann Int Conf IEEE EMBS. 2008 Aug;p. 4237–4240.
[8] Chen T, Yang Z, Liu W, Chen L. NEUSORT2.0: a multiple-channel neural signal processor with systolic
array buffer and channel-interleaving processing schedule. to appear Proc 30th Ann Int Conf IEEE EMBS.
2008 Aug;p. 6652–6656.
[9] Chae M, Liu W, Yang Z, Chen T, Kim J, Sivaprakasam M, et al. A 128 channel 6mW wireless neural
recording IC with on-the- ﬂy spike sorting and UWB transmitter. IEEE ISSC C 2008 Dig Tech Papers.
2008 Feb;7(6):241–261.
[10] Buzsaki G, Penttonen M, Nadasdy Z, Bragin A. Pattern and inhibition-dependent invasion of pyramidal
cell dendrites by fast spikes in the hippocampus in vivo. Proc Natl Acad Sci USA. 1996 Sep;93(18):9921–
9925.
[11] Kaiser JF. On a simple algorithm to calculate the energy of a signal. In Proc IEEE Int Conf Acoustic
Speech and Signal Processing. 1990;p. 381–384.
[12] Yang Z, Zhao Q, Liu W. Neural signal classiﬁcation using a simpliﬁed
clustering. to appear in Neurocomputing;.

feature set with nonparametric

