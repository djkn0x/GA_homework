Time Series Prediction of US Swap Rates

Roland Burton
rolandb@stanford.edu

Shandor Dektor
sgd@stanford.edu

Dawn Wheeler
dawnw@stanford.edu

Abstract

In this project machine learning techniques were used
to generate technical trading strategies in the US interest
rate swap markets. Leela, a correlation algorithm that
is closely related to autoregression, was developed to de-
tect short term repeating patterns to predict future market
moves. This algorithm exhibited a Sharpe Ratio of 1 when
applied to a single swap. When additional swaps were used
the Sharpe Ratio increased to 1.5. Finally, when PCA de-
composition was employed, the time series of residuals ex-
hibited a Sharpe Ratio in excess of 2.

Introduction
An interest rate swap is a contract between two parties,
who agree to exchange ﬁxed interest rate payments for ﬂoat-
ing rate payments1 . The ﬁxed interest rate is the quoted rate
of a swap, and this rate primarily depends upon the duration
or maturity of the contract. The ﬁxed rate is the expected
value of short term interest rates over the contract dura-
tion, and is often treated as a proxy for the borrowing costs
of large corporations. The swap rate is measured in per-
cent, and daily changes are measured in basis points, where
one basis point is equal to 0.01%. Consequently proﬁt and
loss from holding a swap is most commonly quoted in basis
points, a convention we adopt in this paper.
One of the uses of interest rate swaps is to hedge mort-
gage interest rate risk. When interest rates increase, mort-
gage servicers need to pay on a swap, further raising interest
rates. Similarly, when interest rates decrease, servicers need
to receive further decreasing rates. As the mortgage market
is so large, the activities of servicers create temporary inter-
est rate dislocations. It can take several days for the market
to redistribute the new duration risk among other partici-
pants. It is hoped that the initial change in duration risk,
followed by the subsequent redistribution of risk will create
recognizable short term patterns in the data that can form
the basis of a proﬁtable technical trading strategy.

1 Tuckman, B (2002) ”Fixed Income Securities: Tools for Today’s Mar-
kets”. 2nd Ed. Wiley Finance

The performance of technical trading strategies is most
frequently judged by looking at the Sharpe Ratio, a method
originally devised for measuring the performance of Mutual
Funds. The metric was further revised in 1994, and it is this
version that will be used to measure trade performance2
(cid:112)var[R − Rf ]
E [R − Rf ]
where R denotes the annualized return and Rt denotes the
annualized risk free rate. As swaps are derivative instru-
ments requiring no capital, they can be fully cash collater-
ized, eliminating the need to incude the Rt term. Although
quoted in annualized terms, the Sharpe Ratio is normally
calculated using daily data. There are 251 trading days in
the year, so for our purposes, the formula reduces to
E [r ](cid:112)var[r ]
√
and the daily return r is expressed in basis points. Trad-
ing strategies which achieve a Sharpe Ratio of over 1.0 are
qualiﬁed as good. A Sharpe Ratio of over 2.0 is considered
very good and Sharpe Ratios above 3.0 are outstanding3 .

251

1. Data
Barclays Capital provided daily interest rate swap quotes
for swap contracts maturing in 2, 3, 5 and 10 years. Fig-
ure ?? shows a history of swap rates over the whole period.
As can be seen interest rates have generally decreased over
this whole period. A simple buy-and-hold strategy using
ten year swaps returned a Sharpe Ratio of 0.25. However
in reality a trader scales the size of his position based upon
recently observed volatility. Such a strategy increases the
Sharpe Ratio marginally to 0.27.

2. Preliminary Analysis
Initially each swap maturity was treated individually.
The ﬁrst algorithm to be tried was Ordinary Least Squares
2 Sharpe, W. F. (1994). “The Sharpe Ratio”. Journal of Portfolio Man-
agement 21 (1): 4958
3Masteika, Simutis (2006). “Stock Trading System Based on Formal-
ized Technical Analysis and Ranking Technique”. Computational Science
ICCS 2006

Figure 1. History of US swap rates from July 1987 to the present

(OLS) linear regression: The feature vector at time t is
xt = [dt−1 dt−2 . . . dt−p ]T , and the observation at time t
is yt = dt where dt denotes the change in swap rate in basis
points on day t. p is an integer that denotes how many days
are considered for pattern matching. The coefﬁcients, θ , are
chosen such that yt ≈ θT xt for all t. The trading signal
for day t + 1 is given by sgn(θT xt+1 ) and the return on the
t + 1 day is given by rt+1 = dt+1 sgn(θT xt+1 ). The data
is heteroskedastic, and it is unreasonable to assume that θ is
the same over all history, so θ is computed over a window
of n days of recent data:

t Xt )−1X T
θt = (X T
t Yt
where X ∈ (cid:60)n×p and the ith row of X is xT
t−i+1 , and
Y = [yt yt−1 . . . yt−n+1 ]T . Reasonable values for n are
from 63 to 1500, corresponding to ninety calendar days to
six years. Recalling the motivation in the introduction, the
idea is to detect short term patterns caused by temporary
liquidity imbalances so reasonable values for p are 3, 4 or 5
(up to a full trading week).
An alternative approach to dealing with heteroskedas-
ticity is to redeﬁne the data based on local norms, so that
˜xt = xt/||xt || and ˜yt = yt/||xt ||, and then repeat the anal-
ysis as described as above. The θ used to compute rt+1 is
based only on previously observed data, so the performance
is out of sample. For the 10-year swap, after scaling the data
to attempt to combat the heteroskedasticity, a Sharpe Ratio
of 0.23 attained with p = 3 and n = 251, no better than a
buy and hold. Without scaling, the Sharpe Ratio was zero.
Autoregressive (AR) methods were brieﬂy investigated.
Computation relied upon the built-in MATLAB function
ARBURG which estimates parameters via the Burg Method.
In a similar manner to linear regression, there are two pa-
rameters that can be chosen for the model, n and p. p is
the order of the model and n is the window size used. The

Figure 2. Linear Regression and Autoregression. Autoregression
outperforms OLS both in return and in Sharpe Ratio. Visually,
Sharpe Ratio is a measure of slope vs. stability of return.

AR methods are very closely related to OLS, but they act
upon correlation coefﬁcients rather than on the data itself.
Looking at the 10-year swap rate with n = 502 and p = 4,
a Sharpe Ratio of 0.9 was attained, which is a much im-
proved performance over OLS. Figure ?? compares the per-
formance of the Burg AR algorithm and OLS regression.

3. The Leela Algorithm
Although the AR algorithm improved performance, it
was unable to break through the barrier of a Sharpe Ratio
of 1. A new correlation algorithm was proposed that is very
closely related to the AR algorithm, which the authors have
t(cid:88)
called Leela4 . The return on day t + 1 is given by:
rt+1 = dt+1 sgn(
i=t−n+1

ρi,t ˜yi )

t ˜xt−i , and ˜xt and ˜yt are as previously de-
where ρi,t = ˜xT
ﬁned. ˜xt is the feature vector, and ˜yt is trade selection. In
words, the algorithm takes the last p days moves in the in-
strument, and then correlates this vector with all the previ-
ous p day moves in the past n days, giving n correlations,
ρ. The trading signal, ∈ {−1, 1}, is the sign of the sum
of all these correlations multiplied by the following days
normalized move. The return is simply the trading signal
based on data from day t and earlier, multiplied by the ac-
tual move on day t + 1. By computing correlations (via nor-
malized vectors), problems associated with heteroskedas-
ticity are reduced. Another assumption in this algorithm is
that patterns are symmetric. With respect to liquidity, sym-
metry assumes that a large seller in the market has the same

4 The one eyed captain from Futurama

effect only reversed as a large buyer in the market. For eq-
uity markets this assumption is tenuous, but in ﬁxed income
markets sharp rallies and sell-offs are much more similar. In
the following section two methods are examined to expand
the feature vector and trade selection past a single swap.

4. Feature Vector and Trade Selection for Leela
We tested three main variants on the Leela algorithm to
determine what feature vector and trading strategy held the
most promise. Each of these algorithms inputs a different
feature vector to the algorithm. The output from Leela was
used to choose the best trade for each day.

4.1. Ten-year Feature Vector and Correlation
The 10y is the basic Leela algorithm: the feature vector
is simply dt = d(10)
. The remainder of the algorithm is
t
identical to that described in section 2.

4.2. Multi-Instrument Feature Vectors
This variant is based on correlation using the three day
performance of the overall market. This allows the algo-
rithm to assess the recent trading environment more accu-
rately. The feature vector for multi correlation consists of
the normalized three day history for each swap:

t−2 d(10)
t−1 d(10)
t−3 . . . d(10)
t−2 d(2)
t−1 d(2)
x(t) = [d(2)
t−3 ]
˜xt = xt/||xt ||
]/||xt ||
. . . d(10)
˜yt = [d(2)
t
t
This algorithm selects the swap with the largest trading sig-
(cid:33)
(cid:32) t(cid:88)
nal, as deﬁned by:
arg max
abs
s
i=t−n+1
(cid:26) x(t)T x(i)
Where ρi,t is modiﬁed with:
0

if x(t)T x(i) > 0.4
otherwise

ρi,t yi,s

ρi,t =

The algorithm considers how each swap performs given
market conditions. Choosing the largest trading signal re-
duces the risk of making a poor decision. Using a ρ cut-
off increases the similarity between current and past market
conditions, but the bound must not be so strict that it elimi-
nates relevant data.

4.3. Principal Component Decomposition
PCA was used to preﬁlter the data before passing it to
the Leela algorithm. As was shown at the beginning of
this project, the ﬁve different swap maturities appeared to

D =

show strong cross correlation. This was conﬁrmed when
the PCA decomposition was computed. Let d(k)
denote the
t
daily change (in basis points) of the k-year maturity swap


on day t. Then deﬁne
d(2)
d(10)
t−n+1
t−n+1
. . .
. . .
. . .
...
...
...
...
...
...
...
...
d(2)
d(10)
t−1
t−1
d(2)
d(3)
d(5)
d(7)
d(10)
t
t
t
t
t
To compute the PCA factors we can use SVD, so
D = U ΣV T . Market convention is to set n=63, such
that the PCA factors are computed over ninety calendar
days. The Singular Values for a recent period are σ =
[211 33.6 12.4 7.2 2.4], showing how the ﬁrst two factors
dominate the decomposition. Most market practitioners use
only the ﬁrst two components, and it is this convention that
is adopted in this project. It is also common to scale the two
(cid:21)1/2
(cid:3) (cid:20)σ1
F = (cid:2)u1 u2
component vectors by their associated volatility, so deﬁne
0
0
σ2
On the t + 1 day, the least squares solution of ˆdt+1 = F w ,
can be computed as w = (F T F )−1F T dt+1 giving the
weights of the ﬁrst two components (w ∈ (cid:60)2 ). Due to
the scaling applied to F and orthogonality of U we expect
w ∼ N (0, I ).
Having computed the weights on each day, this time se-
ries can be input to the previous Leela algorithm. The per-
formance with n = 500 and p = 3 returned Sharpe Ratios
of around 0.8, a deterioration in performance.
Rather than looking at factors, component residuals can
also be examined. The residuals are simply ˆdt+1 − dt+1 .
These residual time series, one for each swap maturity, can
then be input to the Leela algorithm. With n = 750 and
p = 4, the results are plotted in Figure ??, and summarized
in the table below:

Year
2
3
5
7
10

Sharpe Ratio
0.4
1.4
1.2
2.2
0.8

While the 7y swap shows promise, the residual itself is
not a trade-able instrument. Trading the 7y swap outright
returns a Sharpe Ratio of close to zero. The best way to
trade a residual is using a “butterﬂy” trade: If the algorithm
signals to buy the 7y swap, the trader actually buys the 7y
swap and sells the 5y and 10y swaps, with the amount of
each swap dependent on the nullspace of F, so that the ex-
posure to the ﬁrst two factors is zero.

Figure 3. Trade Performance based upon PCA residuals. Again,
the Sharpe Ratio is the most important metric rather than largest
absolute return. The sharp spikes at the end of the time series are
associated with the very recent market turbulence associated with
bank insolvencies.

The strong performance of the 7y may not be a ﬂuke
of the data. One of the motivations for this report was the
action of mortgage servicers hedging risk. The traditional
duration of US mortgages is between ﬁve and ten years and
many servicers use seven year instruments to hedge their
duration exposure. The market is not deep enough to fully
absorb the supply and demand, creating a dislocation. This
dislocation is characterized by a high residual in the 7y
point, which was shown to mean revert over a short period.

5. Results
The proposed algorithms were trained on the same mar-
ket period, from approximately 1994 to late 2007. This was
to ensure that all algorithms are exposed to the same mar-
ket conditions making the results directly comparable. The
year from late 2007 to late 2008 was used as test data to
verify algorithm performance. The algorithms were trained
for correlation window as this was the fuzziest parameter to
determine. Initial tests showed that the three-day correla-
tion window was superior for our algorithms. Varying the
correlation window produced less convex results. Testing
the data with a wide range of windows ensures we did not
optimize for a random local maximum.
The algorithms were therefore compared with two goals:
ﬁrst, to ﬁnd the correlation window with the largest Sharpe
Ratio, and second to compare the yearly variation in IR5 .

5 This project focused on empirical maximization of Sharpe Ratio. An
excellent theoretical treatment can be found in Choey, M & Weigend, A
- “Nonlinear Trading Models Through Sharpe Ratio Maximization” Inter-
national Journal of Neural Systems 8 (3) (1997) 417-431

Figure 4. Training Results for 10y Swap Trade: Return and Sharpe
Ratio vs. correlation window.

Figure 5. Best Single and Multi-Swap Trade Return and Yearly IR
(300 day correlation window)

5.1. Correlation solely with 10y Swap

For the 10y swap, Figure ?? shows that as the correla-
tion window increases the performance tends to increase,
but with a Sharpe Ratio typically below 1.2. This is a de-
cent result, and can be attributed to the character of the data.
Using solely the 10y data, noise is likely to be a greater fac-
tor. Our data can be thought of as pseudo-random vectors of
length 3; correlation between random unit vectors increases
with decreasing length. Thus a longer correlation window
allows us to ’average out’ the noise incipient to a short fea-
ture vector. This still does not provide a great Sharpe Ra-
tio, however, and Figure ?? shows that the sharp ratio is
fairly variable with time, though these sample location do
not show any losses.

Figure 6. Training results for Multi-Swap Trade: Return and
Sharpe Ratio vs. correlation window

Figure 7. Training Results for PCA Trading: Return and Sharpe
Ratio vs. correlation window

5.2. Correlation on 2y to 10y Swaps
For the multi-swap algorithm, Figure ?? shows that per-
formance peaks at a correlation window of around 500 days,
with a Sharpe Ratio of more than 1.5. This is a good and
interesting result, as it indicates that the relation between
the swaps changes with time. The algorithm weakens when
correlated for much more than one and a half years, and the
trade performs well over subperiods.

5.3. Correlation using PCA
PCA analysis has the strongest and most consistent cor-
relation between performance and correlation window, with
a peak at a Sharpe Ratio greater than 2 (Figure ??). This
is an excellent result for an automated program. This per-
formance characteristic is likely due to the change in PCA
components with time. As shown with multi swap correla-
tion, the market character changes with a characteristic time
on the order of a couple years. Therefore, PCA compo-
nents are likely to change enough that comparison of resid-
uals will no longer be ‘apples to apples’. Figure ?? shows
that the yearly Sharpe Ratio performs at a consistently high
level, with only one outlier with negative returns.

Conclusion
This project has shown that machine learning algorithms
are able to generate trading rules that exhibit high ex-post
Sharpe Ratios. While the simplest linear methods produced
poor results, a correlation algorithm closely related to au-
toregression was shown to produce very strong returns. Fur-
thermore when the data was preprocessed using Principle
Components Analysis, the performance moved into a level
warranting serious attention by technical traders.

Figure 8. Best Peforming PCA trading: Return and Yearly IR (500
day correlation window)

Future Work
The algorithms presented in this paper are not tied to in-
terest rate swaps, and are transferrable to other classes of
ﬁnancial instruments that exhibit similar properties. Specif-
ically, the collection of instruments must be highly corre-
lated but still exhibit temporary departures which create the
trading opportunities. The most obvious extension is to
similar ﬁxed income classes, such as treasury, corporate, or
mortgage debt. However in building a well balanced book,
the portfolio manager would like to be active in as many un-
correlated markets as possible. One of the most natural mar-
kets to examine would be the G10 currency markets. Like
rate swaps, currency markets offer liquidity and low margin
requirements allowing for easy trading. Other applications
would lie in a basket of energy futures or precious metals.

