Learning Networks of
Stochastic Differential Equations

Jos ´e Bento
Department of Electrical Engineering
Stanford University
Stanford, CA 94305
jbento@stanford.edu

Morteza Ibrahimi
Department of Electrical Engineering
Stanford University
Stanford, CA 94305
ibrahimi@stanford.edu

Andrea Montanari
Department of Electrical Engineering and Statistics
Stanford University
Stanford, CA 94305
montanari@stanford.edu

Abstract

We consider linear models for stochastic dynamics. To any such model can be as-
sociated a network (namely a directed graph) describing which degrees of freedom
interact under the dynamics. We tackle the problem of learning such a network
from observation of the system trajectory over a time interval T .
We analyze the ℓ1 -regularized least squares algorithm and, in the setting in which
the underlying network is sparse, we prove performance guarantees that are uni-
form in the sampling rate as long as this is sufﬁciently high. This result substan-
tiates the notion of a well deﬁned ‘time complexity’ for the n etwork inference
problem.

keywords: Gaussian processes, model selection and structure learning, graphical models, sparsity
and feature selection.

1

Introduction and main results

Let G = (V , E ) be a directed graph with weight A0
ij ∈ R associated to the directed edge (j, i) from
j ∈ V to i ∈ V . To each node i ∈ V in this network is associated an independent standard Brownian
motion bi and a variable xi taking values in R and evolving according to
dxi (t) = Xj∈∂+ i
where ∂+ i = {j ∈ V : (j, i) ∈ E } is the set of ‘parents’ of i. Without loss of generality we shall
take V = [p] ≡ {1, . . . , p}. In words, the rate of change of xi is given by a weighted sum of the
current values of its neighbors, corrupted by white noise. In matrix notation, the same system is then
represented by

A0
ij xj (t) dt + dbi (t) ,

dx(t) = A0x(t) dt + db(t) ,
(1)
with x(t) ∈ Rp , b(t) a p-dimensional standard Brownian motion and A0 ∈ Rp×p a matrix with
entries {A0
ij }i,j∈[p] whose sparsity pattern is given by the graph G. We assume that the linear system
˙x(t) = A0x(t) is stable (i.e. that the spectrum of A0 is contained in {z ∈ C : Re(z ) < 0}). Further,
we assume that x(t = 0) is in its stationary state. More precisely, x(0) is a Gaussian random variable

1

independent of b(t), distributed according to the invariant measure. Under the stability assumption,
this a mild restriction, since the system converges exponentially to stationarity.
A portion of time length T of the system trajectory {x(t)}t∈[0,T ] is observed and we ask under which
conditions these data are sufﬁcient to reconstruct the grap h G (i.e., the sparsity pattern of A0 ). We
are particularly interested in computationally efﬁcient p rocedures, and in characterizing the scaling
of the learning time for large networks. Can the network structure be learnt in a time scaling linearly
with the number of its degrees of freedom?

As an example application, chemical reactions can be conveniently modeled by systems of non-
linear stochastic differential equations, whose variables encode the densities of various chemical
species [1, 2]. Complex biological networks might involve hundreds of such species [3], and learn-
ing stochastic models from data is an important (and challenging) computational task [4]. Consider-
ing one such chemical reaction network in proximity of an equilibrium point, the model (1) can be
used to trace ﬂuctuations of the species counts with respect
to the equilibrium values. The network
G would represent in this case the interactions between different chemical factors. Work in this area
focused so-far on low-dimensional networks, i.e. on methods that are guaranteed to be correct for
ﬁxed p, as T → ∞, while we will tackle here the regime in which both p and T diverge.
Before stating our results, it is useful to stress a few important differences with respect to classical
graphical model learning problems:

(i) Samples are not independent. This can (and does) increase the sample complexity.
(ii) On the other hand, inﬁnitely many samples are given as data (i n fact a collection indexed
by the continuous parameter t ∈ [0, T ]). Of course one can select a ﬁnite subsample, for
instance at regularly spaced times {x(i η)}i=0,1,... . This raises the question as to whether
the learning performances depend on the choice of the spacing η .
(iii) In particular, one expects that choosing η sufﬁciently large as to make the conﬁgurations in
the subsample approximately independent can be harmful. Indeed, the matrix A0 contains
more information than the stationary distribution of the above process (1), and only the
latter can be learned from independent samples.
(iv) On the other hand, letting η → 0, one can produce an arbitrarily large number of distinct
samples. However, samples become more dependent, and intuitively one expects that there
is limited information to be harnessed from a given time interval T .

Our results conﬁrm in a detailed and quantitative way these i ntuitions.

1.1 Results: Regularized least squares

Regularized least squares is an efﬁcient and well-studied m ethod for support recovery. We will
discuss relations with existing literature in Section 1.3.

In the present case, the algorithm reconstructs independently each row of the matrix A0 . The rth
r , is estimated by solving the following convex optimization problem for Ar ∈ Rp
row, A0
minimize L(Ar ; {x(t)}t∈[0,T ] ) + λkAr k1 ,
where the likelihood function L is deﬁned by
T Z T
2T Z T
1
1
(A∗
(A∗
r x(t))2 dt −
L(Ar ; {x(t)}t∈[0,T ] ) =
r x(t)) dxr (t) .
0
0
(Here and below M ∗ denotes the transpose of matrix/vector M .) To see that this likelihood function
is indeed related to least squares, one can formally write ˙xr (t) = dxr (t)/dt and complete the square
for the right hand side of Eq. (3), thus getting the integral R (A∗
r x(t) − ˙xr (t))2dt − R ˙xr (t)2 dt.
The ﬁrst term is a sum of square residuals, and the second is in dependent of A. Finally the ℓ1
regularization term in Eq. (2) has the role of shrinking to 0 a subset of the entries Aij thus effectively
selecting the structure.

(3)

(2)

r ) as to
r , and assume |S 0 | ≤ k . We will refer to the vector sign(A0
Let S 0 be the support of row A0
the signed support of A0
r (where sign(0) = 0 by convention). Let λmax (M ) and λmin (M ) stand for

2

the maximum and minimum eigenvalue of a square matrix M respectively. Further, denote by Amin
the smallest absolute value among the non-zero entries of row A0
r .
When stable, the diffusion process (1) has a unique stationary measure which is Gaussian with
covariance Q0 ∈ Rp×p given by the solution of Lyapunov’s equation [5]
A0Q0 + Q0 (A0 )∗ + I = 0.
(4)
Our guarantee for regularized least squares is stated in terms of two properties of the covariance Q0
and one assumption on ρmin (A0 ) (given a matrix M , we denote by ML,R its submatrix ML,R ≡
(Mij )i∈L,j∈R ):
(a) We denote by Cmin ≡ λmin (Q0
S 0 ,S 0 ) the minimum eigenvalue of the restriction of Q0 to
the support S 0 and assume Cmin > 0.
S 0 ,S 0 (cid:1)−1
(S 0 )C ,S 0 (cid:0)Q0
|||∞ = 1 − α,
(b) We deﬁne the incoherence parameter α by letting |||Q0
and assume α > 0. (Here ||| · |||∞ is the operator sup norm.)
(c) We deﬁne ρmin (A0 ) = −λmax ((A0 + A0 ∗ )/2) and assume ρmin (A0 ) > 0. Note this is a
stronger form of stability assumption.

Our main result is to show that there exists a well deﬁned time complexity, i.e. a minimum time
interval T such that, observing the system for time T enables us to reconstruct the network with
high probability. This result is stated in the following theorem.
Theorem 1.1. Consider the problem of learning the support S 0 of row A0
r of the matrix A0 from a
sample trajectory {x(t)}t∈[0,T ] distributed according to the model (1). If
log (cid:16) 4pk
δ (cid:17) ,
104k2 (k ρmin (A0 )−2 + A−2
min )
(5)
T >
α2ρmin (A0 )C 2
min
then there exists λ such that ℓ1 -regularized least squares recovers the signed support of A0
r with
probability larger than 1 − δ . This is achieved by taking λ = p36 log(4p/δ)/(T α2ρmin (A0 )) .
The time complexity is logarithmic in the number of variables and polynomial in the support size.
Further, it is roughly inversely proportional to ρmin (A0 ), which is quite satisfying conceptually,
since ρmin (A0 )−1 controls the relaxation time of the mixes.

1.2 Overview of other results

So far we focused on continuous-time dynamics. While, this is useful in order to obtain elegant state-
ments, much of the paper is in fact devoted to the analysis of the following discrete-time dynamics,
with parameter η > 0:
x(t) = x(t − 1) + ηA0x(t − 1) + w(t),
(6)
t ∈ N0 .
Here x(t) ∈ Rp is the vector collecting the dynamical variables, A0 ∈ Rp×p speci ﬁes the dynamics
as above, and {w(t)}t≥0 is a sequence of i.i.d. normal vectors with covariance η Ip×p (i.e. with
independent components of variance η ). We assume that consecutive samples {x(t)}0≤t≤n are
given and will ask under which conditions regularized least squares reconstructs the support of A0 .
The parameter η has the meaning of a time-step size. The continuous-time model (1) is recovered,
in a sense made precise below, by letting η → 0. Indeed we will prove reconstruction guarantees
that are uniform in this limit as long as the product nη (which corresponds to the time interval T in
the previous section) is kept constant. For a formal statement we refer to Theorem 3.1. Theorem 1.1
is indeed proved by carefully controlling this limit. The mathematical challenge in this problem is
related to the fundamental fact that the samples {x(t)}0≤t≤n are dependent (and strongly dependent
as η → 0).
Discrete time models of the form (6) can arise either because the system under study evolves by
discrete steps, or because we are subsampling a continuous time system modeled as in Eq. (1).
Notice that in the latter case the matrices A0 appearing in Eq. (6) and (1) coincide only to the zeroth
order in η . Neglecting this technical complication, the uniformity of our reconstruction guarantees
as η → 0 has an appealing interpretation already mentioned above. Whenever the samples spacing
is not too large, the time complexity (i.e.
the product nη ) is roughly independent of the spacing
itself.

3

1.3 Related work

A substantial amount of work has been devoted to the analysis of ℓ1 regularized least squares, and
its variants [6, 7, 8, 9, 10]. The most closely related results are the one concerning high-dimensional
consistency for support recovery [11, 12]. Our proof follows indeed the line of work developed in
these papers, with two important challenges. First, the design matrix is in our case produced by
a stochastic diffusion, and it does not necessarily satis ﬁe s the irrepresentability conditions used by
these works. Second, the observations are not corrupted by i.i.d. noise (since successive conﬁgura-
tions are correlated) and therefore elementary concentration inequalities are not sufﬁcient.
Learning sparse graphical models via ℓ1 regularization is also a topic with signi ﬁcant literature.
In
the Gaussian case, the graphical LASSO was proposed to reconstruct the model from i.i.d. samples
[13]. In the context of binary pairwise graphical models, Ref. [11] proves high-dimensional con-
sistency of regularized logistic regression for structural learning, under a suitable irrepresentability
conditions on a modi ﬁed covariance. Also this paper focuses on i.i.d. samples.

Most of these proofs builds on the technique of [12]. A naive adaptation to the present case allows
to prove some performance guarantee for the discrete-time setting. However the resulting bounds
are not uniform as η → 0 for nη = T ﬁxed. In particular, they do not allow to prove an analogous
of our continuous time result, Theorem 1.1. A large part of our effort is devoted to producing more
accurate probability estimates that capture the correct scaling for small η .
Similar issues were explored in the study of stochastic differential equations, whereby one is often
interested in tracking some slow degrees of freedom while ‘averaging out’ the fast ones [14]. The
relevance of this time-scale separation for learning was addressed in [15]. Let us however emphasize
that these works focus once more on system with a ﬁxed (small) number of dimensions p.
Finally, the related topic of learning graphical models for autoregressive processes was studied re-
cently in [16, 17]. The convex relaxation proposed in these papers is different from the one devel-
oped here. Further, no model selection guarantee was proved in [16, 17].

2

Illustration of the main results

It might be difﬁcult to get a clear intuition of Theorem 1.1, m ainly because of conditions (a) and (b),
which introduce parameters Cmin and α. The same difﬁculty arises with analogous results on the
high-dimensional consistency of the LASSO [11, 12]. In this section we provide concrete illustration
both via numerical simulations, and by checking the condition on speci ﬁc classes of graphs.

2.1 Learning the laplacian of graphs with bounded degree

Given a simple graph G = (V , E ) on vertex set V = [p], its laplacian ∆G is the symmetric p × p
matrix which is equal to the adjacency matrix of G outside the diagonal, and with entries ∆G
ii =
−deg(i) on the diagonal [18]. (Here deg(i) denotes the degree of vertex i.)
It is well known that ∆G is negative semideﬁnite, with one eigenvalue equal to 0, whose multiplicity
is equal to the number of connected components of G . The matrix A0 = −m I + ∆G ﬁts into
the setting of Theorem 1.1 for m > 0. The corresponding model (1.1) describes the over-damped
dynamics of a network of masses connected by springs of unit strength, and connected by a spring
of strength m to the origin. We obtain the following result.
Theorem 2.1. Let G be a simple connected graph of maximum vertex degree k and consider the
model (1.1) with A0 = −m I + ∆G where ∆G is the laplacian of G and m > 0. If
T ≥ 2 · 105k2 (cid:16) k + m
m (cid:17)5
δ (cid:17) ,
(k + m2 ) log (cid:16) 4pk
then there exists λ such that ℓ1 -regularized least squares recovers the signed support of A0
r with
probability larger than 1 − δ . This is achieved by taking λ = p36(k + m)2 log(4p/δ)/(T m3 ).
In other words, for m bounded away from 0 and ∞, regularized least squares regression correctly
reconstructs the graph G from a trajectory of time length which is polynomial in the degree and
logarithmic in the system size. Notice that once the graph is known, the laplacian ∆G is uniquely
determined. Also, the proof technique used for this example is generalizable to other graphs as well.

(7)

4

 

p = 16
p = 32
p = 64
p = 128
p = 256
p = 512

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

s
s
e
c
c
u
s
 
f
o
 
y
t
i
l
i
b
a
b
o
r
P

0

 
0

50

100

150

200
250
T = n η

300

350

400

450

2800

2600

2400

2200

2000

1800

1600

1400

9
.
0
 
=
 
.
b
o
r
p
 
s
s
e
c
c
u
s
 
r
o
f
 
s
e
l
p
m
a
s
 
f
o
 
#
 
.
n
i
M

1200
101

102
p

103

Figure 1: (left) Probability of success vs.
length of the observation interval nη . (right) Sample
complexity for 90% probability of success vs. p.

2.2 Numerical illustrations

In this section we present numerical validation of the proposed method on synthetic data. The results
conﬁrm our observations in Theorems 1.1 and 3.1, below, name ly that the time complexity scales
logarithmically with the number of nodes in the network p, given a constant maximum degree.
Also, the time complexity is roughly independent of the sampling rate. In Fig. 1 and 2 we consider
the discrete-time setting, generating data as follows. We draw A0 as a random sparse matrix in
{0, 1}p×p with elements chosen independently at random with P(A0
ij = 1) = k/p, k = 5. The
0 ≡ {x(t)}0≤t≤n is then generated according to Eq. (6). We solve the regularized least
process xn
square problem (the cost function is given explicitly in Eq. (8) for the discrete-time case) for different
values of n, the number of observations, and record if the correct support is recovered for a random
row r using the optimum value of the parameter λ. An estimate of the probability of successful
recovery is obtained by repeating this experiment. Note that we are estimating here an average
probability of success over randomly generated matrices.

The left plot in Fig.1 depicts the probability of success vs. nη for η = 0.1 and different values of
p. Each curve is obtained using 211 instances, and each instance is generated using a new random
matrix A0 . The right plot in Fig.1 is the corresponding curve of the sample complexity vs. p where
sample complexity is deﬁned as the minimum value of nη with probability of success of 90%. As
predicted by Theorem 2.1 the curve shows the logarithmic scaling of the sample complexity with p.
In Fig. 2 we turn to the continuous-time model (1). Trajectories are generated by discretizing this
stochastic differential equation with step δ much smaller than the sampling rate η . We draw random
matrices A0 as above and plot the probability of success for p = 16, k = 4 and different values of η ,
as a function of T . We used 211 instances for each curve. As predicted by Theorem 1.1, for a ﬁ xed
observation interval T , the probability of success converges to some limiting value as η → 0.
3 Discrete-time model: Statement of the results

where

Consider a system evolving in discrete time according to the model (6), and let xn
0 ≡ {x(t)}0≤t≤n
be the observed portion of the trajectory. The r th row A0
r is estimated by solving the following
convex optimization problem for Ar ∈ Rp
minimize L(Ar ; xn
0 ) + λkAr k1 ,
n−1Xt=0
1
r x(t)}2 .
L(Ar ; xn
{xr (t + 1) − xr (t) − η A∗
0 ) ≡
2η2n
Apart from an additive constant, the η → 0 limit of this cost function can be shown to coincide
with the cost function in the continuous time case, cf. Eq. (3). Indeed the proof of Theorem 1.1 will
amount to a more precise version of this statement. Furthermore, L(Ar ; xn
0 ) is easily seen to be the
log-likelihood of Ar within model (6).

(8)

(9)

5

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

s
s
e
c
c
u
s
 
f
o
 
y
t
i
l
i
b
a
b
o
r
P

 

η = 0.04
η = 0.06
η = 0.08
η = 0.1
η = 0.14
η = 0.18
η = 0.22

1

0.95

0.9

0.85

0.8

0.75

0.7

0.65

0.6

s
s
e
c
c
u
s
 
f
o
 
y
t
i
l
i
b
a
b
o
r
P

 
0

50

100

150
T = n η

200

250

0.55
0.04

0.06

0.08

0.1

0.12

0.14

0.16

0.18

0.2

0.22

η

Figure 2: (right)Probability of success vs. length of the observation interval nη for different values
of η . (left) Probability of success vs. η for a ﬁxed length of the observation interval, ( nη = 150) .
The process is generated for a small value of η and sampled at different rates.

r , and assume |S 0 | ≤ k . Under the model (6) x(t) has
As before, we let S 0 be the support of row A0
a Gaussian stationary state distribution with covariance Q0 determined by the following modi ﬁed
Lyapunov equation

A0Q0 + Q0 (A0 )∗ + ηA0Q0 (A0 )∗ + I = 0 .
(10)
It will be clear from the context whether A0 /Q0 refers to the dynamics/stationary matrix from the
continuous or discrete time system. We assume conditions (a) and (b) introduced in Section 1.1, and
adopt the notations already introduced there. We use as a shorthand notation σmax ≡ σmax (I +η A0 )
where σmax (.) is the maximum singular value. Also deﬁne D ≡ (cid:0)1 − σmax (cid:1)/η . We will assume
D > 0. As in the previous section, we assume the model (6) is initiated in the stationary state.
Theorem 3.1. Consider the problem of learning the support S 0 of row A0
r from the discrete-time
trajectory {x(t)}0≤t≤n . If
log (cid:16) 4pk
δ (cid:17) ,
104k2 (kD−2 + A−2
min )
α2DC 2
min
then there exists λ such that ℓ1 -regularized least squares recovers the signed support of A0
r with
probability larger than 1 − δ . This is achieved by taking λ = p(36 log(4p/δ))/(Dα2nη).
In other words the discrete-time sample complexity, n, is logarithmic in the model dimension, poly-
nomial in the maximum network degree and inversely proportional to the time spacing between
samples. The last point is particularly important. It enables us to derive the bound on the continuous-
time sample complexity as the limit η → 0 of the discrete-time sample complexity. It also conﬁrms
our intuition mentioned in the Introduction: although one can produce an arbitrary large number
of samples by sampling the continuous process with ﬁner reso lutions, there is limited amount of
information that can be harnessed from a given time interval [0, T ].

nη >

(11)

4 Proofs

In the following we denote by X ∈ Rn×p the matrix whose (t + 1)th column corresponds to the
conﬁguration x(t), i.e. X = [x(0), x(1), . . . , x(n − 1)]. Further ∆X ∈ Rn×p is the matrix contain-
ing conﬁguration changes, namely ∆X = [x(1) − x(0), . . . , x(n) − x(n − 1)]. Finally we write
W = [w(1), . . . , w(n − 1)] for the matrix containing the Gaussian noise realization. Equivalently,
W = ∆X − ηA X .

The rth row of W is denoted by Wr .
0 in the likelihood function (9) and
In order to lighten the notation, we will omit the reference to xn
simply write L(Ar ). We deﬁne its normalized gradient and Hessian by
1
bG = −∇L(A0
bQ = ∇2L(A0
r ) =
r ) =
nη

XW ∗
r ,

XX ∗ .

1
n

(12)

6

4.1 Discrete time

In this Section we outline our prove for our main result for discrete-time dynamics, i.e., Theorem
3.1. We start by stating a set of sufﬁcient conditions for reg ularized least squares to work. Then we
present a series of concentration lemmas to be used to prove the validity of these conditions, and
ﬁnally we sketch the outline of the proof.

(14)

As mentioned, the proof strategy, and in particular the following proposition which provides a com-
pact set of sufﬁcient conditions for the support to be recove red correctly is analogous to the one in
[12]. A proof of this proposition can be found in the supplementary material.
Proposition 4.1. Let α, Cmin > 0 be be deﬁned by
(S 0 )C ,S 0 (cid:0)Q0
S 0 ,S 0 (cid:1)−1
λmin (Q0
|||Q0
(13)
S 0 ,S 0 ) ≡ Cmin ,
|||∞ ≡ 1 − α .
If the following conditions hold then the regularized least square solution (8) correctly recover the
signed support sign(A0
r ):
λα
AminCmin
k bGk∞ ≤
k bGS 0 k∞ ≤
− λ,
,
3
4k
Cmin√k
Cmin√k
α
α
||| bQS 0 ,S 0 − Q0
||| bQ(S 0 )C ,S 0 − Q0
(15)
,
.
S 0 ,S 0 |||∞ ≤
(S 0 )C ,S 0 |||∞ ≤
12
12
Further the same statement holds for the continuous model 3, provided bG and bQ are the gradient
and the hessian of the likelihood (3).
The proof of Theorem 3.1 consists in checking that, under the hypothesis (11) on the number of
consecutive conﬁgurations, conditions (14) to (15) will ho ld with high probability. Checking these
conditions can be regarded in turn as concentration-of-measure statements. Indeed, if expectation is
taken with respect to a stationary trajectory, we have E{ bG} = 0, E{ bQ} = Q0 .
4.1.1 Technical lemmas
In this section we will state the necessary concentration lemmas for proving Theorem 3.1. These
are non-trivial because bG, bQ are quadratic functions of dependent random variables (cid:0)the samples
{x(t)}0≤t≤n (cid:1). The proofs of Proposition 4.2, of Proposition 4.3, and Corollary 4.4 can be found in
the supplementary material provided.
Our ﬁrst Proposition implies concentration of bG around 0.
Proposition 4.2. Let S ⊆ [p] be any set of vertices and ǫ < 1/2. If σmax ≡ σmax (I + η A0 ) < 1,
then
P(cid:8)k bGS k∞ > ǫ(cid:9) ≤ 2|S | e−n(1−σmax ) ǫ2 /4 .
(16)
We furthermore need to bound the matrix norms as per (15) in proposition 4.1. First we relate
J S |||∞ with bounds on | bQij − Q0
bounds on ||| bQJ S − Q0
ij |, (i ∈ J, i ∈ S ) where J and S are any
subsets of {1, ..., p}. We have,
P(||| bQJ S − Q0
P(| bQij − Q0
J S )|||∞ > ǫ) ≤ |J ||S | max
ij | > ǫ/|S |).
i,j∈J
Then, we bound | bQij − Q0
ij | using the following proposition
Proposition 4.3. Let i, j ∈ {1, ..., p}, σmax ≡ σmax (I + ηA0 ) < 1, T = ηn > 3/D and 0 < ǫ <
2/D where D = (1 − σmax )/η then,
32η2 (1−σmax )3 ǫ2
ij )| > ǫ) ≤ 2e− n
P(| bQij − Q0
Finally, the next corollary follows from Proposition 4.3 and Eq. (17).
Corollary 4.4. Let J, S (|S | ≤ k) be any two subsets of {1, ..., p} and σmax ≡ σmax (I + ηA0 ) < 1,
ǫ < 2k/D and nη > 3/D (where D = (1 − σmax )/η) then,
32k2 η2 (1−σmax )3 ǫ2
J S |||∞ > ǫ) ≤ 2|J |ke− n
P(||| bQJ S − Q0

(19)

(17)

(18)

.

.

7

4.1.2 Outline of the proof of Theorem 3.1

With these concentration bounds we can now easily prove Theorem 3.1. All we need to do is
to compute the probability that the conditions given by Proposition 4.1 hold. From the statement
of the theorem we have that the ﬁrst two conditions ( α, Cmin > 0) of Proposition 4.1 hold. In
order to make the ﬁrst condition on bG imply the second condition on bG we assume that λα/3 ≤
(AminCmin )/(4k) − λ which is guaranteed to hold if
(20)
λ ≤ AminCmin /8k .
We also combine the two last conditions on bQ, thus obtaining the following
Cmin√k
α
||| bQ[p],S 0 − Q0
(21)
,
[p],S 0 |||∞ ≤
12
since [p] = S 0 ∪ (S 0 )C . We then impose that both the probability of the condition on bQ failing and
the probability of the condition on bG failing are upper bounded by δ/2 using Proposition 4.2 and
Corollary 4.4. It is shown in the supplementary material that this is satis ﬁed if condition (11) holds.
4.2 Outline of the proof of Theorem 1.1

(22)

x(t)x(t)∗ dt .

To prove Theorem 1.1 we recall that Proposition 4.1 holds provided the appropriate continuous time
expressions are used for bG and bQ, namely
T Z T
T Z T
1
1
bG = −∇L(A0
bQ = ∇2L(A0
r ) =
x(t) dbr (t) ,
r ) =
0
0
These are of course random variables. In order to distinguish these from the discrete time version,
we will adopt the notation bGn , bQn for the latter. We claim that these random variables can be
coupled (i.e. deﬁned on the same probability space) in such a way that bGn → bG and bQn → bQ
almost surely as n → ∞ for ﬁxed T . Under assumption (5), it is easy to show that (11) holds for all
n > n0 with n0 a sufﬁciently large constant (for a proof see the provided su pplementary material).
Therefore, by the proof of Theorem 3.1, the conditions in Proposition 4.1 hold for gradient bGn and
hessian bQn for any n ≥ n0 , with probability larger than 1 − δ . But by the claimed convergence
bGn → bG and bQn → bQ, they hold also for bG and bQ with probability at least 1 − δ which proves the
theorem.
We are left with the task of showing that the discrete and continuous time processes can be coupled
in such a way that bGn → bG and bQn → bQ. With slight abuse of notation, the state of the discrete
time system (6) will be denoted by x(i) where i ∈ N and the state of continuous time system (1) by
x(t) where t ∈ R. We denote by Q0 the solution of (4) and by Q0 (η) the solution of (10). It is easy
to check that Q0 (η) → Q0 as η → 0 by the uniqueness of stationary state distribution.
The initial state of the continuous time system x(t = 0) is a N(0, Q0 ) random variable inde-
pendent of b(t) and the initial state of the discrete time system is deﬁned to be x(i = 0) =
(Q0 (η))1/2 (Q0 )−1/2x(t = 0). At subsequent times, x(i) and x(t) are assumed are generated by the
respective dynamical systems using the same matrix A0 using common randomness provided by the
standard Brownian motion {b(t)}0≤t≤T in Rp . In order to couple x(t) and x(i), we construct w(i),
the noise driving the discrete time system, by letting w(i) ≡ (b(T i/n) − b(T (i − 1)/n)).
The almost sure convergence bGn → bG and bQn → bQ follows then from standard convergence of
random walk to Brownian motion.
Acknowledgments

This work was partially supported by a Terman fellowship, the NSF CAREER award CCF-0743978
and the NSF grant DMS-0806211 and by a Portuguese Doctoral FCT fellowship.

8

References

[1] D.T. Gillespie. Stochastic simulation of chemical kinetics. Annual Review of Physical Chem-
istry, 58:35–55, 2007.
[2] D. Higham. Modeling and Simulating Chemical Reactions. SIAM Review, 50:347–368, 2008.
[3] N.D.Lawrence et al., editor. Learning and Inference in Computational Systems Biology. MIT
Press, 2010.
[4] T. Toni, D. Welch, N. Strelkova, A. Ipsen, and M.P.H. Stumpf. Modeling and Simulating
Chemical Reactions. J. R. Soc. Interface, 6:187–202, 2009.
[5] K. Zhou, J.C. Doyle, and K. Glover. Robust and optimal control. Prentice Hall, 1996.
[6] R. Tibshirani. Regression shrinkage and selection via the lasso. Journal of the Royal Statistical
Society. Series B (Methodological), 58(1):267–288, 1996.
[7] D.L. Donoho. For most large underdetermined systems of equations, the minimal l1-norm
near-solution approximates the sparsest near-solution. Communications on Pure and Applied
Mathematics, 59(7):907–934, 2006.
[8] D.L. Donoho. For most large underdetermined systems of linear equations the minimal l1-
norm solution is also the sparsest solution. Communications on Pure and Applied Mathematics,
59(6):797–829, 2006.
[9] T. Zhang. Some sharp performance bounds for least squares regression with L1 regularization.
Annals of Statistics, 37:2109–2144, 2009.
[10] M.J. Wainwright. Sharp thresholds for high-dimensional and noisy sparsity recovery using l1-
constrained quadratic programming (Lasso). IEEE Trans. Information Theory, 55:2183–2202,
2009.
[11] M.J. Wainwright, P. Ravikumar, and J.D. Lafferty. High-Dimensional Graphical Model Selec-
tion Using l-1-Regularized Logistic Regression. Advances in Neural Information Processing
Systems, 19:1465, 2007.
[12] P. Zhao and B. Yu. On model selection consistency of Lasso. The Journal of Machine Learning
Research, 7:2541–2563, 2006.
[13] J. Friedman, T. Hastie, and R. Tibshirani. Sparse inverse covariance estimation with the graph-
ical lasso. Biostatistics, 9(3):432, 2008.
[14] K. Ball, T.G. Kurtz, L. Popovic, and G. Rempala. Modeling and Simulating Chemical Reac-
tions. Ann. Appl. Prob., 16:1925–1961, 2006.
[15] G.A. Pavliotis and A.M. Stuart. Parameter estimation for multiscale diffusions. J. Stat. Phys.,
127:741–781, 2007.
[16] J. Songsiri, J. Dahl, and L. Vandenberghe. Graphical models of autoregressive processes. pages
89–116, 2010.
[17] J. Songsiri and L. Vandenberghe. Topology selection in graphical models of autoregressive
processes. Journal of Machine Learning Research, 2010. submitted.
[18] F.R.K. Chung. Spectral Graph Theory. CBMS Regional Conference Series in Mathematics,
1997.
[19] P. Ravikumar, M.J. Wainwright, and J. Lafferty. High-dimensional Ising model selection using
l1-regularized logistic regression. Annals of Statistics, 2008.

9

