An Inverse Power Method for Nonlinear
Eigenproblems with Applications in
1-Spectral Clustering and Sparse PCA

Thomas B ¨uhler
Matthias Hein
Saarland University, Saarbr ¨ucken, Germany
{hein,tb}@cs.uni-saarland.de

Abstract

Many problems in machine learning and statistics can be formulated as (general-
ized) eigenproblems. In terms of the associated optimization problem, comput-
ing linear eigenvectors amounts to ﬁnding critical points of a quadratic function
subject to quadratic constraints. In this paper we show that a certain class of con-
strained optimization problems with nonquadratic objective and constraints can be
understood as nonlinear eigenproblems. We derive a generalization of the inverse
power method which is guaranteed to converge to a nonlinear eigenvector. We
apply the inverse power method to 1-spectral clustering and sparse PCA which
can naturally be formulated as nonlinear eigenproblems. In both applications we
achieve state-of-the-art results in terms of solution quality and runtime. Moving
beyond the standard eigenproblem should be useful also in many other applica-
tions and our inverse power method can be easily adapted to new problems.

1

Introduction

Eigenvalue problems associated to a symmetric and positive semi-deﬁnite matrix are quite abundant
in machine learning and statistics. However, considering the eigenproblem from a variational point
of view using Courant-Fischer-theory, the objective is a ratio of quadratic functions, which is quite
restrictive from a modeling perspective. We show in this paper that using a ratio of p-homogeneous
functions leads quite naturally to a nonlinear eigenvalue problem, associated to a certain nonlin-
ear operator. Clearly, such a generalization is only interesting if certain properties of the standard
problem are preserved and efﬁcient algorithms for the computation of nonlinear eigenvectors are
available. In this paper we present an efﬁcient generalization of the inverse power method (IPM)
to nonlinear eigenvalue problems and study the relation to the standard problem. While our IPM
is a general purpose method, we show for two unsupervised learning problems that it can be easily
adapted to a particular application.
The ﬁrst application is spectral clustering [20]. In prior work [5] we proposed p-spectral clustering
based on the graph p-Laplacian, a nonlinear operator on graphs which reduces to the standard graph
Laplacian for p = 2. For p close to one, we obtained much better cuts than standard spectral clus-
tering, at the cost of higher runtime. Using the new IPM, we efﬁciently compute eigenvectors of the
1-Laplacian for 1-spectral clustering. Similar to the recent work of [19], we improve considerably
compared to [5] both in terms of runtime and the achieved Cheeger cuts. However, opposed to the
suggested method in [19] our IPM is guaranteed to converge to an eigenvector of the 1-Laplacian.
The second application is sparse Principal Component Analysis (PCA). The motivation for sparse
PCA is that the largest PCA component is difﬁcult to interpret as usually all components are nonzero.
In order to allow a direct interpretation it is therefore desirable to have only a few features with
nonzero components but which still explain most of the variance. This kind of trade-off has been

1

widely studied in recent years, see [15] and references therein. We show that also sparse PCA has a
natural formulation as a nonlinear eigenvalue problem and can be efﬁciently solved with the IPM.
All proofs had to be omitted due to space restrictions and can be found in the supplementary material.

FStandard (f ) =

.

(2)

2 Nonlinear Eigenproblems
The standard eigenproblem for a symmetric matric A ∈ Rn×n is of the form
Af − λf = 0,
(1)
where f ∈ Rn and λ ∈ R. It is a well-known result from linear algebra that for symmetric matrices
A, the eigenvectors of A can be characterized as critical points of the functional
(cid:104)f , Af (cid:105)
(cid:107)f (cid:107)2
2
The eigenvectors of A can be computed using the Courant-Fischer Min-Max principle. While the
ratio of quadratic functions is useful in several applications, it is a severe modeling restriction. This
restriction however can be overcome using nonlinear eigenproblems.
In this paper we consider
functionals F of the form
F (f ) = R(f )
(3)
S (f ) ,
where with R+ = {x ∈ R | x ≥ 0} we assume R : Rn → R+ , S : Rn → R+ to be convex,
Lipschitz continuous, even and positively p-homogeneous1 with p ≥ 1. Moreover, we assume that
S (f ) = 0 if and only if f = 0. The condition that R and S are p-homogeneous and even will imply
for any eigenvector v that also αv for α ∈ R is an eigenvector. It is easy to see that the functional of
the standard eigenvalue problem in Equation (2) is a special case of the general functional in (3).
To gain some intuition, let us ﬁrst consider the case where R and S are differentiable. Then it holds
for every critical point f ∗ of F ,
∇R(f ∗ ) − R(f ∗ )
∇F (f ∗ ) = 0
S (f ∗ )
Let r, s : Rn → Rn be the operators deﬁned as r(f ) = ∇R(f ), s(f ) = ∇S (f ) and λ∗ = R(f ∗ )
S (f ∗ ) ,
we see that every critical point f ∗ of F satisﬁes the nonlinear eigenproblem
r(f ∗ ) − λ∗ s(f ∗ ) = 0,
(4)
which is in general a system of nonlinear equations, as r and s are nonlinear operators. If R and S
are both quadratic, r and s are linear operators and one gets back the standard eigenproblem (1).
Before we proceed to the general nondifferentiable case, we have to introduce some important con-
∂F (f ) = {ξ ∈ Rn (cid:12)(cid:12) F 0 (f , v) ≥ (cid:104)ξ , v(cid:105) ,
cepts from nonsmooth analysis. Note that F is in general nonconvex and nondifferentiable. In the
following we denote by ∂F (f ) the generalized gradient of F at f according to Clarke [9],
for all v ∈ Rn},
where F 0 (f , v) = limg→f , t→0 sup F (g+tv)−F (g)
. In the case where F is convex, ∂F is the subdif-
ferential of F and F 0 (f , v) the directional derivative for each v ∈ Rn . A characterization of critical
t
points of nonsmooth functionals is as follows.
Deﬁnition 2.1 ([7]) A point f ∈ Rn is a critical point of F , if 0 ∈ ∂F .
This generalizes the well-known fact that the gradient of a differentiable function vanishes at a
critical point. We now show that the nonlinear eigenproblem (4) is a necessary condition for a
critical point and in some cases even sufﬁcient. A useful tool is the generalized Euler identity.
Theorem 2.1 ([21]) Let R : Rn → R be a positively p-homogeneous and convex continuous func-
tion. Then, for each x ∈ Rn and r∗ ∈ ∂R(x) it holds that (cid:104)x, r∗ (cid:105) = p R(x).
1A function G : Rn → R is positively homogeneous of degree p if G(γx) = γ pG(x) for all γ ≥ 0.

· ∇S (f ∗ ) = 0 .

⇐⇒

2

The next theorem characterizes the relation between nonlinear eigenvectors and critical points of F .
Theorem 2.2 Suppose that R, S fulﬁll the stated conditions. Then a necessary condition for f ∗
being a critical point of F is
λ∗ = R(f ∗ )
0 ∈ ∂R(f ∗ ) − λ∗ ∂S (f ∗ ),
S (f ∗ ) .
If S is continuously differentiable at f ∗ , then this is also sufﬁcient.

where

(5)

Finally, the deﬁnition of the associated nonlinear operators in the nonsmooth case is a bit tricky as
r and s can be set-valued. However, as we assume R and S to be Lipschitz, the set where R and S
are nondifferentiable has measure zero and thus r and s are single-valued almost everywhere.

3 The inverse power method for nonlinear Eigenproblems

(7)

(6)

A standard technique to obtain the smallest eigenvalue of a positive semi-deﬁnite symmetric matrix
A is the inverse power method [12]. Its main building block is the fact that the iterative scheme
Af k+1 = f k
(cid:104)u, A u(cid:105) − (cid:10)u, f k (cid:11)
converges to the smallest eigenvector of A. Transforming (6) into the optimization problem
1
f k+1 = arg min
2
u
R(u) − (cid:10)u, s(f k )(cid:11) ,
is the motivation for the general IPM. The direct generalization tries to solve
0 ∈ r(f k+1 ) − s(f k )
f k+1 = arg min
or equivalently
(8)
u
where r(f ) ∈ ∂R(f ) and s(f ) ∈ ∂S (f ). For p > 1 this leads directly to Algorithm 2, however
for p = 1 the direct generalization fails. In particular, the ball constraint has to be introduced in
Algorithm 1 as the objective in the optimization problem (8) is otherwise unbounded from below.
(Note that the 2-norm is only chosen for algorithmic convenience). Moreover, the introduction of
λk in Algorithm 1 is necessary to guarantee descent whereas in Algorithm 2 it would just yield a
rescaled solution of the problem in the inner loop (called inner problem in the following).
For both methods we show convergence to a solution of (4), which by Theorem 2.2 is a neces-
sary condition for a critical point of F and often also sufﬁcient. Interestingly, both applications are
naturally formulated as 1-homogeneous problems so that we use in both cases Algorithm 1. Never-
theless, we state the second algorithm for completeness. Note that we cannot guarantee convergence
to the smallest eigenvector even though our experiments suggest that we often do so. However, as
the method is fast one can afford to run it multiple times with different initializations and use the
eigenvector with smallest eigenvalue.
1: Initialization: f 0 = random with (cid:13)(cid:13)f 0(cid:13)(cid:13) = 1, λ0 = F (f 0 )
Algorithm 1 Computing a nonlinear eigenvector for convex positively p-homogeneous functions R
and S with p = 1
(cid:8)R(u) − λk (cid:10)u, s(f k )(cid:11)(cid:9)
2: repeat
where s(f k ) ∈ ∂S (f k )
f k+1 = arg min
3:
(cid:107)u(cid:107)2≤1
λk+1 = R(f k+1 )/S (f k+1 )
4:
5: until |λk+1−λk |
< 
λk
6: Output: eigenvalue λk+1 and eigenvector f k+1 .

The inner optimization problem is convex for both algorithms. In turns out that both for 1-spectral
clustering and sparse PCA the inner problem can be solved very efﬁciently, for sparse PCA it has
even a closed form solution. While we do not yet have results about convergence speed, empirical
observation shows that one usually converges quite quickly to an eigenvector.

3

Algorithm 2 Computing a nonlinear eigenvector for convex positively p-homogeneous functions R
and S with p > 1
(cid:8)R(u) − (cid:10)u, s(f k )(cid:11)(cid:9)
1: Initialization: f 0 = random, λ0 = F (f 0 )
2: repeat
gk+1 = arg min
3:
u
f k+1 = gk+1 /S (gk+1 )1/p
4:
λk+1 = R(f k+1 )/S (f k+1 )
5:
6: until |λk+1−λk |
< 
λk
7: Output: eigenvalue λk+1 and eigenvector f k+1 .

where s(f k ) ∈ ∂S (f k )

To our best knowledge both suggested methods have not been considered before. In [4] they propose
an inverse power method specially tailored towards the continuous p-Laplacian for p > 1, which
can be seen as a special case of Algorithm 2. In [15] a generalized power method has been proposed
which will be discussed in Section 5. Finally, both methods can be easily adapted to compute the
largest nonlinear eigenvalue, which however we have to omit due to space constraints.
Lemma 3.1 The sequences f k produced by Alg. 1 and 2 satisfy F (f k ) > F (f k+1 ) for all k ≥ 0 or
the sequences terminate.
with eigenvalue λ∗ ∈ (cid:2)0, F (f 0 )(cid:3) in the sense that it solves the nonlinear eigenproblem (5). If S is
Theorem 3.1 The sequences f k produced by Algorithms 1 and 2 converge to an eigenvector f ∗
continuously differentiable at f ∗ , then F has a critical point at f ∗ .

Practical implementation: By the proof of Lemma 3.1, descent in F is not only guaranteed for
the optimal solution of the inner problem, but for any vector u which has inner objective value
Φf k (u) < 0 = Φf k (f k ) for Alg. 1 and Ψf k (u) < Ψf k (F (f k ) 1
1−p f k ) in the case of Alg. 2. This
has two important practical implications. First, for the convergence of the IPM, it is sufﬁcient to use
a vector u satisfying the above conditions instead of the optimal solution of the inner problem. In
particular, in an early stage where one is far away from the limit, it makes no sense to invest much
effort to solve the inner problem accurately. Second, if the inner problem is solved by a descent
method, a good initialization for the inner problem at step k + 1 is given by f k in the case of Alg. 1
and F (f k ) 1
1−p f k in the case of Alg. 2 as descent in F is guaranteed after one step.

4 Application 1: 1-spectral clustering and Cheeger cuts

RCC(C, C ) :=

Spectral clustering is a graph-based clustering method (see [20] for an overview) based on a re-
laxation of the NP-hard problem of ﬁnding the optimal balanced cut of an undirected graph. The
spectral relaxation has as its solution the second eigenvector of the graph Laplacian and the ﬁnal par-
tition is found by optimal thresholding. While usually spectral clustering is understood as relaxation
of the so called ratio/normalized cut, it can be equally seen as relaxation of the ratio/normalized
Cheeger cut, see [5]. Given a weighted undirected graph with vertex set V and weight matrix W ,
cut(A, B ) = (cid:88)
the ratio Cheeger cut (RCC) of a partition (C, C ), where C ⊂ V and C = V \C , is deﬁned as
min{|C | , (cid:12)(cid:12)C (cid:12)(cid:12)} ,
cut(C, C )
i∈A,j∈B
where we assume in the following that the graph is connected. Due to limited space the normalized
version is omitted, but the proposed IPM can be adapted to this case. In [5] we proposed p-spectral
clustering, a generalization of spectral clustering based on the second eigenvector of the nonlinear
graph p-Laplacian (the graph Laplacian is recovered for p = 2). The main motivation was the
relation between the optimal Cheeger cut hRCC = minC⊂V RCC(C, C ) and the Cheeger cut h∗
(cid:19) 1
(cid:18) hRCC
RCC
obtained by optimal thresholding the second eigenvector of the p-Laplacian, see [5, 8],
h∗
p
RCC
maxi∈V di
maxi∈V di

hRCC
maxi∈V di

∀ p > 1,

≤

≤ p

,

where

wij ,

4

hRCC = minf nonconstant

where di = (cid:80)
i∈V wij denotes the degree of vertex i. While the inequality is quite loose for spectral
clustering (p = 2), it becomes tight for p → 1. Indeed in [5] much better cuts than standard spectral
(cid:80)n
(cid:80)n
clustering were obtained, at the expense of higher runtime. In [19] the idea was taken up and they
considered directly the variational characterization of the ratio Cheeger cut, see also [8],
i,j=1 wij |fi − fj |
i,j=1 wij |fi − fj |
1
1
2
2
= min f nonconstant
(cid:107)f − median(f )1(cid:107)1
(cid:107)f (cid:107)1
median(f )=0
In [19] they proposed a minimization scheme based on the Split Bregman method [11]. Their method
produces comparable cuts to the ones in [5], while being computationally much more efﬁcient.
However, they could not provide any convergence guarantee about their method.
(cid:80)n
In this paper we consider the functional associated to the 1-Laplacian ∆1 ,
i,j=1 wij |fi − fj |
(cid:104)f , ∆1 f (cid:105)
1
2
=
(cid:107)f (cid:107)1
(cid:107)f (cid:107)1
(cid:110) n(cid:88)
(cid:111)
wij uij | uij = −uj i , uij ∈ sign(fi − fj )
j=1
and study its associated nonlinear eigenproblem 0 ∈ ∆1 f − λ sign(f ).
Proposition 4.1 Any non-constant eigenvector f ∗ of the 1-Laplacian has median zero. Moreover,
let λ2 be the second eigenvalue of the 1-Laplacian, then if G is connected it holds λ2 = hRCC .

(cid:40) −1,
[−1, 1],
1,

x < 0,
x = 0,
x > 0.

where

(∆1 f )i =

and sign(x) =

.

(9)

F1 (f ) =

,

(10)

For the computation of the second eigenvector we have to modify the IPM which is discussed in the
next section.

4.1 Modiﬁcation of the IPM for computing the second eigenvector of the 1-Laplacian

The direct minimization of (10) would be compatible with the IPM, but the global minimizer is the
ﬁrst eigenvector which is constant. For computing the second eigenvector note that, unlike in the
case p = 2, we cannot simply project on the space orthogonal to the constant eigenvector, since
mutual orthogonality of the eigenvectors does not hold in the nonlinear case.
Algorithm 3 is a modiﬁcation of Algorithm 1 which computes a nonconstant eigenvector of the 1-
subgradient s(f k ) ∈ ∂S (f k ), whereas in Algorithm 3 the subgradient vk has to satisfy (cid:10)vk , 1(cid:11) = 0.
+ |, |f k+1− | and |f k+1
Laplacian. The notation |f k+1
| refers to the cardinality of positive, negative and
0
zero elements, respectively. Note that Algorithm 1 requires in each step the computation of some
This condition ensures that the inner objective is invariant under addition of a constant and thus
not affected by the subtraction of the median. Opposite to [19] we can prove convergence to a
nonconstant eigenvector of the 1-Laplacian. However, we cannot guarantee convergence to the
second eigenvector. Thus we recommend to use multiple random initializations and use the result
which achieves the best ratio Cheeger cut.
Laplacian with eigenvalue λ∗ ∈ (cid:2)hRCC , F1 (f 0 )(cid:3). Furthermore, F1 (f k ) > F1 (f k+1 ) for all k ≥ 0
Theorem 4.1 The sequence f k produced by Algorithm 3 converges to an eigenvector f ∗ of the 1-
or the sequence terminates.

4.2 Quality guarantee for 1-spectral clustering

Even though we cannot guarantee that we obtain the optimal ratio Cheeger cut, we can guarantee
that 1-spectral clustering always leads to a ratio Cheeger cut at least as good as the one found by
standard spectral clustering. Let (C ∗
f , C ∗
f ) be the partition of V obtained by optimal thresholding of
f ), and for t ∈ R, C t
f = {i ∈ V | fi > t}. Furthermore, 1C
f , where C ∗
f = arg mint RCC(C t
f , C t
Lemma 4.1 Let C, C be a partitioning of the vertex set V , and assume that |C | ≤ (cid:12)(cid:12)C (cid:12)(cid:12). Then for
denotes the vector which is 1 on C and 0 else.
any vector f ∈ Rn of the form f = α1C , where α ∈ R, it holds that F1 (f ) = RCC(C, C ).

5

2: Initialization: nonconstant f 0 with median(f 0 ) = 0 and (cid:13)(cid:13)f 0(cid:13)(cid:13)1 = 1, accuracy 
Algorithm 3 Computing a nonconstant 1-eigenvector of the graph 1-Laplacian
1: Input: weight matrix W
i,j=1 wij |fi − fj | − λk (cid:10)f , vk (cid:11)(cid:111)
(cid:110) 1
(cid:80)n
3: repeat
f k+1 = gk+1 − median (cid:0)gk+1 (cid:1)
gk+1 = arg min
4:
(cid:40) sign(f k+1
2
(cid:107)f (cid:107)2
2≤1
(cid:54)= 0,
),
if f k+1
i
i
− |f k+1
+ |−|f k+1− |
i =
vk+1
= 0.
if f k+1
,
|
|f k+1
i
0
λk+1 = F1 (f k+1 )
7:
8: until |λk+1−λk |
< 
λk

5:

6:

,

Lemma 4.2 Let f ∈ Rn with median(f ) = 0, and C = arg min{|C ∗
f |, |C ∗
f |}. Then the vector
f ∗ = 1C satisﬁes F1 (f ) ≥ F1 (f ∗ ).
Theorem 4.2 Let u denote the second eigenvector of the standard graph Laplacian, and f denote
u |, |C ∗
the result of Algorithm 3 after initializing with the vector 1|C | 1C , where C = arg min{|C ∗
u |}.
u ) ≥ RCC(C ∗
Then RCC(C ∗
f , C ∗
u , C ∗
f ).

4.3 Solution of the inner problem

The inner problem is convex, thus a solution can be computed by any standard method for solving
convex nonsmooth programs, e.g. subgradient methods [3]. However, in this particular case we can
exploit the structure of the problem and use the equivalent dual formulation of the inner problem.
(cid:80)
Lemma 4.3 Let E ⊂ V × V denote the set of edges and A : RE → RV be deﬁned as (Aα)i =
min{α∈RE | (cid:107)α(cid:107)∞≤1, αij =−αj i } Ψ(α) := (cid:13)(cid:13)Aα − F (f k )vk (cid:13)(cid:13)2
j | (i,j )∈E wij αij . The inner problem is equivalent to
(cid:80)n
2 .
The Lipschitz constant of the gradient of Ψ is upper bounded by 2 maxr
rs .
s=1 w2
Compared to the primal problem, the objective of the dual problem is smooth. Moreover, it can be
efﬁciently solved using FISTA ([2]), a two-step subgradient method with guaranteed convergence
rate O( 1
k2 ) where k is the number of steps. The only input of FISTA is an upper bound on the Lips-
chitz constant of the gradient of the objective. FISTA provides a good solution in a few steps which
guarantees descent in functional (9) and thus makes the modiﬁed IPM very fast. The implementation
can be found in the supplementary material.

5 Application 2: Sparse PCA

Principal Component Analysis (PCA) is a standard technique for dimensionality reduction and data
analysis [13]. PCA ﬁnds the k-dimensional subspace of maximal variance in the data. For k = 1,
(cid:10)f , X T X f (cid:11)
given a data matrix X ∈ Rn×p where each column has mean 0, in PCA one computes
f ∗ = arg max
(cid:107)f (cid:107)2
f ∈Rp
2
where the maximizer f ∗ is the largest eigenvector of the covariance matrix Σ = X T X ∈ Rp×p .
The interpretation of the PCA component f ∗ is difﬁcult as usually all components are nonzero. In
sparse PCA one wants to get a small number of features which still capture most of the variance.
For instance, in the case of gene expression data one would like the principal components to consist
only of a few signiﬁcant genes, making it easy to interpret by a human. Thus one needs to enforce
sparsity of the PCA component, which yields a trade-off between explained variance and sparsity.

(11)

,

6

.

While standard PCA leads to an eigenproblem, adding a constraint on the cardinality, i.e. the num-
ber of nonzero coefﬁcients, makes the problem NP-hard. The ﬁrst approaches performed simple
thresholding of the principal components which was shown to be misleading [6]. Since then several
methods have been proposed, mainly based on penalizing the L1 norm of the principal components,
including SCoTLASS [14] and SPCA [22]. D’Aspremont et al.[10] focused on the L0 -constrained
formulation and proposed a greedy algorithm to compute a full set of good candidate solutions up
to a speciﬁed target sparsity, and derived sufﬁcient conditions for a vector to be globally optimal.
Moghaddam et al. [16] used branch and bound to compute optimal solutions for small problem
instances. Other approaches include D.C. [18] and EM-based methods [17]. Recently, Journee et al.
[15] proposed two single unit (computation of one component only) and two block (simultaneous
computation of multiple components) methods based on L0 -penalization and L1 -penalization.
Problem (11) is equivalent to
(cid:107)f (cid:107)2
(cid:107)f (cid:107)2
f ∗ = arg min
(cid:104)f , Σf (cid:105) = arg min
2
(cid:107)X f (cid:107)2
f ∈Rp
f ∈Rp
In order to enforce sparsity we use instead of the L2 -norm a convex combination of an L1 norm and
L2 norm in the enumerator, which yields the functional
(1 − α) (cid:107)f (cid:107)2 + α (cid:107)f (cid:107)1
F (f ) =
(12)
(cid:107)X f (cid:107)2
,
with sparsity controlling parameter α ∈ [0, 1]. Standard PCA is recovered for α = 0, whereas α = 1
yields the sparsest non-trivial solution: the component with the maximal variance. One easily sees
that the formulation (12) ﬁts in our general framework, as both enumerator and denominator are
(1 − α) (cid:107)f (cid:107)2 + α (cid:107)f (cid:107)1 − λk (cid:10)f , µk (cid:11) , where
1-homogeneous functions. The inner problem of the IPM becomes
Σf k(cid:112)(cid:104)f k , Σf k (cid:105) .
gk+1 = arg min
µk =
(13)
(cid:107)f (cid:107)2≤1
This problem has a closed form solution. In the following we use the notation x+ = max{0, x}.
(cid:114)(cid:88)n
i )(cid:0)λk (cid:12)(cid:12)µk
(cid:12)(cid:12) − α(cid:1)
Lemma 5.1 The convex optimization problem (13) has the analytical solution
1
(λk |µk
i | − α)2
sign(µk
+ .
i
s
i=1
As s is just a scaling factor, we can omit it and obtain the simple and efﬁcient scheme to compute
sparse principal components shown in Algorithm 4. While the derivation is quite different from
[15], the resulting algorithms are very similar. The subtle difference is that in our formulation the
thresholding parameter of the inner problem depends on the current eigenvalue estimate whereas it
is ﬁxed in [15]. Empirically, this leads to the fact that we need slightly less iterations to converge.

+ , where

i =
gk+1

s =

Algorithm 4 Sparse PCA
1: Input: data matrix X , sparsity controlling parameter α, accuracy 
i )(cid:0)λk (cid:12)(cid:12)µk
(cid:12)(cid:12) − α(cid:1)
2: Initialization: f 0 = random with S (f k ) = 1, λ0 = F (f k )
3: repeat
i = sign(µk
gk+1
+ ,
4:
λk+1 = (1 − α) (cid:13)(cid:13)f k+1(cid:13)(cid:13)2 + α (cid:13)(cid:13)f k+1(cid:13)(cid:13)1
i
f k+1 = gk+1
5:
(cid:107)X gk+1 (cid:107)2
6:
µk+1 = Σf k+1
7:
(cid:107)X f k+1 (cid:107)2
8: until |λk+1−λk |
< 
λk

6 Experiments

1-Spectral Clustering: We compare our IPM with the total variation (TV) based algorithm by
[19], p-spectral clustering with p = 1.1 [5] as well as standard spectral clustering with optimal

7

thresholding the second eigenvector of the graph Laplacian (p = 2). The graph and the two-moons
dataset is constructed as in [5]. The following table shows the average ratio Cheeger cut (RCC) and
error (classiﬁcation as in [5]) for 100 draws of a two-moons dataset with 2000 points. In the case of
the IPM, we use the best result of 10 runs with random initializations and one run initialized with
the second eigenvector of the unnormalized graph Laplacian. For [19] we initialize once with the
second eigenvector of the normalized graph Laplacian as proposed in [19] and 10 times randomly.
IPM and the TV-based method yield similar results, slightly better than 1.1-spectral and clearly
outperforming standard spectral clustering. In terms of runtime, IPM and [19] are on the same level.

Avg. RCC
Avg. error

Inverse Power Method
0.0195 (± 0.0015)
0.0462 (± 0.0161)

Szlam & Bresson [19]
0.0195 (± 0.0015)
0.0491 (± 0.0181)

1.1-spectral [5]
0.0196 (± 0.0016)
0.0578 (± 0.0285)

Standard spectral
0.0247 (± 0.0016)
0.1685 (± 0.0200)

RCut(C1 , . . . , CK ) =

.

Figure 1: Left and middle: Second eigenvector of the 1-Laplacian and 2-Laplacian, respectively.
Right: Relative Variance (relative to maximal possible variance) versus number of non-zero compo-
nents for the three datasets Lung2, GCM and Prostate1.
Next we perform unnormalized 1-spectral clustering on the full USPS and MNIST-datasets (9298
K(cid:88)
resp. 70000 points). As clustering criterion we use the multicut version of RCut, given as
cut(Ci , Ci )
|Ci |
i=1
We successively subdivide clusters until the desired number of clusters (K = 10) is reached. In each
substep the eigenvector obtained on the subgraph is thresholded such that the multi-cut criterion is
minimized. This recursive partitioning scheme is used for all methods. As in the previous experi-
ment, we perform one run initialized with the thresholded second eigenvector of the unnormalized
graph Laplacian in the case of the IPM and with the second eigenvector of the normalized graph
Laplacian in the case of [19]. In both cases we add 100 runs with random initializations. The next
table shows the obtained RCut and errors.
Inverse Power Method
0.1507
0.1244
0.6661
0.1349

Standard spectral
0.2252
0.1883
0.8180
0.1686

1.1-spectral [5]
0.1529
0.1293
0.6676
0.1308

S.&B. [19]
0.1545
0.1318
0.6663
0.1309

MNIST

USPS

Rcut
Error
Rcut
Error

Again the three nonlinear eigenvector methods clearly outperform standard spectral clustering. Note
that our method requires additional effort (100 runs) but we get better results. For both datasets our
method achieves the best RCut. However, if one wants to do only a single run, by Theorem 4.2
for bi-partitions one achieves a cut at least as good as the one of standard spectral clustering if one
initializes with the thresholded 2nd eigenvector of the 2-Laplacian.

Sparse PCA: We evaluate our IPM for sparse PCA on gene expression datasets obtained from
[1]. We compare with two recent algorithms: the L1 based single-unit power algorithm of [15]
as well as the EM-based algorithm in [17]. For all considered datasets, the three methods achieve
very similar performance in terms of the tradeoff between explained variance and sparsity of the
solution, see Fig.1 (Right). In fact the results are so similar that for each dataset, the plots of all
three methods coincide in one line. In [15] it also has been observed that the best state-of-the-art
algorithms produce the same trade-off curve if one uses the same initialization strategy.

Acknowledgments: This work has been supported by the Excellence Cluster on Multimodal Com-
puting and Interaction at Saarland University.

8

References
[1] http://www.stat.ucla.edu/˜wxl/research/microarray/DBC/index.htm.
[2] A. Beck and M. Teboulle. Fast gradient-based algorithms for constrained total variation image denoising
and deblurring problems. IEEE Transactions on Image Processing, 18(11):2419–2434, 2009.
[3] D.P. Bertsekas. Nonlinear Programming. Athena Scientiﬁc, 1999.
[4] R.J. Biezuner, G. Ercole, and E.M. Martins. Computing the ﬁrst eigenvalue of the p-Laplacian via the
inverse power method. Journal of Functional Analysis, 257:243–270, 2009.
[5] T. B ¨uhler and M. Hein. Spectral Clustering based on the graph p-Laplacian. In Proceedings of the 26th
International Conference on Machine Learning, pages 81–88. Omnipress, 2009.
[6] J. Cadima and I.T. Jolliffe. Loading and correlations in the interpretation of principal components. Journal
of Applied Statistics, 22:203–214, 1995.
[7] K.-C. Chang. Variational methods for non-differentiable functionals and their applications to partial
differential equations. Journal of Mathematical Analysis and Applications, 80:102–129, 1981.
[8] F.R.K. Chung. Spectral Graph Theory. AMS, 1997.
[9] F.H. Clarke. Optimization and Nonsmooth Analysis. Wiley New York, 1983.
[10] A. d’Aspremont, F. Bach, and L. El Ghaoui. Optimal solutions for sparse principal component analysis.
Journal of Machine Learning Research, 9:1269–1294, 2008.
[11] T. Goldstein and S. Osher. The Split Bregman method for L1-Regularized Problems. SIAM Journal on
Imaging Sciences, 2(2):323–343, 2009.
[12] G.H. Golub and C.F. Van Loan. Matrix Computations. Johns Hopkins University Press, 3rd edition, 1996.
[13] I.T. Jolliffe. Principal Component Analysis. Springer, 2nd edition, 2002.
[14] I.T. Jolliffe, N. Trendaﬁlov, and M. Uddin. A modiﬁed principal component technique based on the
LASSO. Journal of Computational and Graphical Statistics, 12:531–547, 2003.
[15] M. Journ ´ee, Y. Nesterov, P. Richt ´arik, and R. Sepulchre. Generalized Power Method for Sparse Principal
Component Analysis. Journal of Machine Learning Research, 11:517–553, 2010.
[16] B. Moghaddam, Y. Weiss, and S. Avidan. Spectral bounds for sparse PCA: Exact and greedy algorithms.
In Advances in Neural Information Processing Systems, pages 915–922. MIT Press, 2006.
[17] C.D. Sigg and J.M. Buhmann. Expectation-maximization for sparse and non-negative PCA. In Proceed-
ings of the 25th International Conference on Machine Learning, pages 960–967. ACM, 2008.
[18] B.K. Sriperumbudur, D.A. Torres, and G.R.G. Lanckriet. Sparse eigen methods by D.C. programming.
In Proceedings of the 24th International Conference on Machine Learning, pages 831–838. ACM, 2007.
[19] A. Szlam and X. Bresson. Total variation and Cheeger cuts. In Proceedings of the 27th International
Conference on Machine Learning, pages 1039–1046. Omnipress, 2010.
[20] U. von Luxburg. A tutorial on spectral clustering. Statistics and Computing, 17:395–416, 2007.
[21] F. Yang and Z. Wei. Generalized Euler identity for subdifferentials of homogeneous functions and appli-
cations. Mathematical Analysis and Applications, 337:516–523, 2008.
[22] H. Zou, T. Hastie, and R. Tibshirani. Sparse principal component analysis. Journal of Computational and
Graphical Statistics, 15:265–286, 2006.

9

