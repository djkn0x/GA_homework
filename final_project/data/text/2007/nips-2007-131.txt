An Analysis of Convex Relaxations for MAP Estimation

M. Pawan Kumar
V. Kolmogorov
P.H.S. Torr
Dept. of Computing
Computer Science
Dept. of Computing
Oxford Brookes University University College London Oxford Brookes University
vnk@adastral.ucl.ac.uk
pkmudigonda@brookes.ac.uk
philiptorr@brookes.ac.uk
Abstract
The problem of obtaining the maximum a posteriori estimate of a general dis-
crete random ﬁeld (i.e. a random ﬁeld de ﬁned using a ﬁnite and
discrete set of
labels) is known to be N P-hard. However, due to its central importance in many
applications, several approximate algorithms have been proposed in the litera-
ture.
In this paper, we present an analysis of three such algorithms based on
convex relaxations: (i) L P - S: the linear programming (L P) relaxation proposed by
Schlesinger [20] for a special case and independently in [4, 12, 23] for the general
case; (ii) Q P -RL : the quadratic programming (Q P) relaxation by Ravikumar and
Lafferty [18]; and (iii) SOC P -M S: the second order cone programming (SOC P) re-
laxation ﬁrst proposed by Muramatsu and Suzuki [16] for two l abel problems and
later extended in [14] for a general label set.
We show that the SOC P -M S and the Q P -RL relaxations are equivalent. Further-
more, we prove that despite the ﬂexibility in the form of the c onstraints/objective
function offered by Q P and SOC P, the L P - S relaxation strictly dominates (i.e. pro-
vides a better approximation than) Q P -RL and SOC P -M S. We generalize these
results by de ﬁning a large class of SOC P (and equivalent Q P) relaxations which is
dominated by the L P - S relaxation. Based on these results we propose some novel
SOC P relaxations which strictly dominate the previous approaches.

1 Introduction
Discrete random ﬁelds are a powerful tool to obtain a probabi listic formulation for various applica-
tions in Computer Vision and related areas [3]. Hence, developing accurate and efﬁcient algorithms
for performing inference on a given discrete random ﬁeld is o f fundamental importance. In this
work, we will focus on the problem of maximum a posteriori (MA P) estimation. MA P estimation
is a key step in obtaining the solutions to many applications such as stereo, image stitching and
segmentation [21]. Furthermore, it is closely related to many important Combinatorial Optimization
problems such as MAXCUT [6], multi-way cut [5], metric labelling [3, 11] and 0-extension [3, 9].
Given data D, a discrete random ﬁeld models the distribution (i.e. eithe r the joint or the con-
ditional probability) of a labelling for a set of random variables. Each of these variables v =
{v0 , v1 , · · · , vn−1} can take a label from a discrete set l = {l0 , l1 , · · · , lh−1}. A particular labelling
of variables v is speciﬁed by a function f whose domain corresponds to the indices of the random
variables and whose range is the index of the label set, i.e. f : {0, 1, · · · , n − 1} → {0, 1, · · · , h − 1}.
In other words, random variable va takes label lf (a) . For convenience, we assume the model to be
a conditional random ﬁeld ( CR F) while noting that all the results of this paper also apply to Markov
random ﬁelds ( MR F).

A CR F speciﬁes a neighbourhood relationship E between the random variables, i.e. (a, b) ∈ E if,
and only if, va and vb are neighbouring random variables. Within this framework, the conditional
probability of a labelling f given data D is speciﬁed as Pr(f |D, θ) = 1
exp(−Q(f ; D, θ). Here
Z (θ)
θ represents the parameters of the CR F and Z (θ) is a normalization constant which ensures that the
probability sums to one (also known as the partition function). The energy Q(f ; D, θ) is given by
ab;f (a)f (b) . The term θ1
a;f (a) is called a unary potential
a;f (a) + P(a,b)∈E θ2
Q(f ; D, θ) = Pva ∈v θ1
since its value depends on the labelling of one random variable at a time. Similarly, θ2
ab;f (a)f (b) is
called a pairwise potential as it depends on a pair of random variables. For simplicity, we assume

1

that θ2
ab;f (a)f (b) = w(a, b)d(f (a), f (b)) where w(a, b) is the weight that indicates the strength of
the pairwise relationship between variables va and vb , with w(a, b) = 0 if (a, b) /∈ E , and d(·, ·) is
a distance function on the labels. As will be seen later, this formulation of the pairwise potentials
would allow us to concisely describe our results.

I P :

s.t.

θ1
a;i

θ2
ab;ij

(1)
(2)
(3)

(1+xa;i+xb;j +Xab;ij )
4

The problem of MA P estimation is well known to be N P-hard in general. Since it plays a central
role in several applications, many approximate algorithms have been proposed in the literature. In
this work, we analyze three such algorithms which are based on convex relaxations. Speciﬁcally,
we consider: (i) L P - S, the linear programming (L P) relaxation of [4, 12, 20, 23]; (ii) Q P -RL , the
quadratic programming (Q P) relaxation of [18]; and (iii) SOC P -M S, the second order cone program-
ming (SOC P) relaxation of [14, 16]. In order to provide an outline of these relaxations, we formulate
the problem of MA P estimation as an Integer Program ( I P).
1.1 Integer Programming Formulation
We de ﬁne a binary variable vector x of length nh. We denote the element of x at index a · h + i
as xa;i where va ∈ v and li ∈ l. These elements xa;i specify a labelling f such that xa;i = 1 if
f (a) = i and xa;i = −1 otherwise. We say that the variable xa;i belongs to variable va since it
de ﬁnes which label va does (or does not) take. Let X = xx⊤ . We refer to the (a · h + i, b · h + j )th
element of the matrix X as Xab;ij where va , vb ∈ v and li , lj ∈ l. Clearly, the following I P ﬁnds the
labelling with the minimum energy, i.e. it is equivalent to the MA P estimation problem:
(1+xa;i )
x∗ = arg minx Pva ,li
+ P(a,b)∈E ,li ,lj
2
x ∈ {−1, 1}nh,
Pli ∈l xa;i = 2 − h,
X = xx⊤ .
Constraints (1) and (3) specify that the variables x and X are binary such that Xab;ij = xa;ixb;j .
We will refer to them as the integer constraints. Constraint (2), which speciﬁes that each variable
should be assigned only one label, is known as the uniqueness constraint. Note that one uniqueness
constraint is speciﬁed for each variable va . Solving the above I P is in general N P-hard. It is therefore
common practice to obtain an approximate solution using convex relaxations. We describe four such
convex relaxations below.
1.2 Linear Programming Relaxation
The L P relaxation (proposed by Schlesinger [20] for a special case and independently in [4, 12, 23]
for the general case), which we call L P - S, is given as follows:
(1+xa;i )
θ1
θ2
x∗ = arg minx Pva ,li
+ P(a,b)∈E ,li ,lj
a;i
ab;ij
2
x ∈ [−1, 1]nh , X ∈ [−1, 1]nh×nh,
Pli∈l xa;i = 2 − h,
Plj ∈l Xab;ij = (2 − h)xa;i ,
Xab;ij = Xba;j i ,
1 + xa;i + xb;j + Xab;ij ≥ 0.
In the L P - S relaxation only those elements Xab;ij of X are used for which (a, b) ∈ E and li , lj ∈ l.
Unlike the I P, the feasibility region of the above problem is relaxed such that the variables xa;i
and Xab;ij lie in the interval [−1, 1]. Further, the constraint (3) is replaced by equation (6) which
is called the marginalization constraint [23]. One marginalization constraint is speciﬁed for each
(a, b) ∈ E and li ∈ l. Constraint (7) speciﬁes that X is symmetric. Constraint (8) ensures that θ2
ab;ij
is multiplied by a number between 0 and 1 in the objective function. These constraints (7) and (8)
are de ﬁned for all
(a, b) ∈ E and li , lj ∈ l. Note that the above constraints are not exhaustive, i.e.
it is possible to specify other constraints for the problem of MA P estimation (as will be seen in the
different relaxations described in the subsequent sections).
1.3 Quadratic Programming Relaxation
We now describe the Q P relaxation for the MA P estimation I P which was proposed by Ravikumar
and Lafferty [18]. To this end, it would be convenient to reformulate the objective function of the I P
using a vector of unary potentials of length nh (denoted by ˆθ 1 ) and a matrix of pairwise potentials

(1+xa;i+xb;j +Xab;ij )
4

(4)
(5)
(6)
(7)
(8)

L P - S :

s.t.

2

a = b, i = j,

(9)

, it can be shown that

(cid:0) 1+x
2 (cid:1) ,

of size nh × nh (denoted by ˆθ 2 ). The element of the unary potential vector at index (a · h + i) is
de ﬁned as ˆθ1
ac;ik |, where va ∈ v and li ∈ l. The (a · h + i, b · h + j )th
a;i − Pvc∈v Plk ∈l |θ2
a;i = θ1
element of the pairwise potential matrix ˆθ2 is de ﬁned such that
if
ab;ij = (cid:26) Pvc∈v Plk ∈l |θ2
ac;ik |,
ˆθ2
otherwise,
θ2
ab;ij
where va , vb ∈ v and li , lj ∈ l. In other words, the potentials are modiﬁed by de ﬁning a pair wise
potential ˆθ2
aa;ii and subtracting the value of that potential from the corresponding unary potential
2 is guaranteed to be positive semide ﬁ-
a;i . The advantage of this reformulation is that the matrix ˆθ
θ1
2 (cid:17)2
2
(cid:23) 0. Using the fact that for xa;i ∈ {−1, 1}, (cid:16) 1+xa;i
= 1+xa;i
nite, i.e. ˆθ
2
the following is equivalent to the MA P estimation problem [18]:
1
2 (cid:1)⊤ ˆθ
2 (cid:1)⊤ ˆθ
x∗ = arg minx (cid:0) 1+x
+ (cid:0) 1+x
Q P -RL :
(10)
(11)
s.t.
Pli∈l xa;i = 2 − h, ∀va ∈ v,
(12)
x ∈ {−1, 1}nh,
where 1 is a vector of appropriate dimensions whose elements are all equal to 1. By relaxing
the feasibility region of the above problem to x ∈ [−1, 1]nh , the resulting Q P can be solved in
2
polynomial time since ˆθ
(cid:23) 0 (i.e. the relaxation of the Q P (10)-(12) is convex). We call the above
relaxation Q P -RL . Note that in [18], the Q P -RL relaxation was described using the variable y = 1+x
2 .
However, the above formulation can easily be shown to be equivalent to the one presented in [18].
1.4 Semide ﬁnite Programming Relaxation
The SD P relaxation of the MA P estimation problem replaces the non-convex constraint X = xx⊤ by
the convex semide ﬁnite constraint X − xx⊤ (cid:23) 0 [6, 15] which can be expressed as
x X (cid:19) (cid:23) 0,
(cid:18) 1 x⊤
using Schur’s complement [2]. Further, like L P - S, it relaxes the integer constraints by allowing the
variables xa;i and Xab;ij to lie in the interval [−1, 1] with Xaa;ii = 1 for all va ∈ v, li ∈ l. The
SD P relaxation is a well-studied approach which provides accurate solutions for the MA P estimation
problem (e.g. see [25]). However, due to its computational inefﬁciency, it is not practically useful
for large scale problems with nh > 1000. See however [17, 19, 22].
1.5 Second Order Cone Programming Relaxation
We now describe the SOC P relaxation that was proposed by Muramatsu and Suzuki [16] for the
MAXCUT problem (i.e. MA P estimation with h = 2) and later extended for a general label set [14].
This relaxation, which we call SOC P -M S, is based on the technique of Kim and Kojima [10] who
observed that the SD P constraint can be further relaxed to second order cone (SOC) constraints. For
this purpose, it employs a set of matrices S = {Ck |Ck = Uk (Uk )⊤ (cid:23) 0, k = 1, 2, . . . , nC }.
Using the fact that the Frobenius dot product of two semide ﬁn ite matrices is non-negative, we get
⇒ k(Uk )⊤xk2 ≤ Ck • X, k = 1, · · · , nC .
(14)
Each of the above SOC constraints may involve some or all variables xa;i and Xab;ij . For example,
ab;ij = 0, then the k th SOC constraint will not involve Xab;ij (since its coefﬁcient will be 0).
if C k
In order to describe the SOC P -M S relaxation, we consider a pair of neighbouring variables va and
vb , i.e. (a, b) ∈ E , and a pair of labels li and lj . These two pairs de ﬁne the following variables:
xa;i , xb;j , Xaa;ii = Xbb;jj = 1 and Xab;ij = Xba;j i (since X is symmetric). For each such pair of
variables and labels, the SOC P -M S relaxation speciﬁes two SOC constraints which involve only the
above variables [14, 16]. In order to specify the exact form of these SOC constraints, we need the
following de ﬁnitions.
Using the variables va and vb (where (a, b) ∈ E ) and labels li and lj , we de ﬁne the submatrices
x(a,b,i,j) and X(a,b,i,j) of x and X respectively as:
x(a,b,i,j) = (cid:18) xa;i
xb;j (cid:19) , X(a,b,i,j) = (cid:18) Xaa;ii Xab;ij
Xba;j i Xbb;jj (cid:19) .
3

2

(13)

(15)

The SOC P -M S relaxation speciﬁes
SOC constraints of the form (14) for all pairs of neighbouring
variables (a, b) ∈ E and labels li , lj ∈ l. To this end, it uses the following two matrices: C1
M S =
1 (cid:19). Hence, in the SOC P -M S formulation, the MA P estimation I P is
M S = (cid:18) 1 −1
1 1 (cid:19) , C2
(cid:18) 1 1
−1
relaxed to
(1+xa;i+xb;j +Xab;ij )
(1+xa;i )
SOC P -M S :
θ1
θ2
x∗ = arg minx Pva ,li
+ P(a,b)∈E ,li ,lj
a;i
ab;ij
2
4
x ∈ [−1, 1]nh , X ∈ [−1, 1]nh×nh,
Pli∈l xa;i = 2 − h,
(xa;i − xb;j )2 ≤ 2 − 2Xab;ij ,
(xa;i + xb;j )2 ≤ 2 + 2Xab;ij ,
Xab;ij = Xba;j i .

(16)
(17)
(18)
(19)
(20)

s.t.

We refer the reader to [14, 16] for details.
2 Comparing Relaxations
In order to compare the relaxations described above, we require the following de ﬁnitions. We say
that a relaxation A dominates the relaxation B (alternatively, B is dominated by A) if and only if

min
(x,X)∈F (A)

e(x, X; θ ) ≥ min
(x,X)∈F (B)

e(x, X; θ ), ∀θ ,

(21)

where F (A) and F (B) are the feasibility regions of the relaxations A and B respectively. The term
e(x, X; θ ) denotes the value of the objective function at (x, X) (i.e. the energy of the possibly
fractional labelling (x, X)) for the MA P estimation problem de ﬁned over the CR F with parameter θ .
Thus the optimal value of the dominating relaxation A is always greater than or equal to the optimal
value of relaxation B. We note here that the concept of domination has been used previously in [4]
(to compare L P - S with the linear programming relaxation in [11]).

Relaxations A and B are said to be equivalent if A dominates B and B dominates A, i.e. their optimal
values are equal to each other for all CR Fs. A relaxation A is said to strictly dominate relaxation
B if A dominates B but B does not dominate A. In other words there exists at least one CR F with
parameter θ such that

min
(x,X)∈F (A)

e(x, X; θ ) > min
(x,X)∈F (B)

e(x, X; θ ).

(22)

Note that, by de ﬁnition, the optimal value of any relaxation would always be less than or equal to
the energy of the optimal (i.e. the MA P) labelling. Hence, the optimal value of a strictly dominating
relaxation A is closer to the optimal value of the MA P estimation I P compared to that of relaxation
B. In other words, A provides a tighter lower bound for MA P estimation than B.
Our Results: We prove that L P - S strictly dominates SOC P -M S (see section 3). Further, in sec-
tion 4, we show that Q P -RL is equivalent to SOC P -M S. This implies that L P - S strictly dominates the
Q P -RL relaxation. In section 5 we generalize the above results by proving that a large class of SOC P
(and equivalent Q P) relaxations is dominated by L P - S. Based on these results, we propose a novel
set of constraints which result in SOC P relaxations that dominate L P - S, Q P -RL and SOC P -M S. These
relaxations introduce SOC constraints on cycles and cliques formed by the neighbourhood relation-
ship of the CR F. Note that we will only provide the statement of the results here due to page limit.
All the proofs are described in [13].
3 LP-S vs. SOCP-MS
We now show that for the MA P estimation problem the linear constraints of L P - S are stronger than
the SOC P -M S constraints.
In other words the feasibility region of L P - S is a strict subset of the
feasibility region of SOC P -M S (i.e. F (L P - S) ⊂ F (SOC P -M S)). This in turn would allow us to prove
the following theorem.
Theorem 1: The L P - S relaxation strictly dominates the SOC P -M S relaxation.
4 QP-RL vs. SOCP-MS
We now prove that Q P -RL and SOC P -M S are equivalent (i.e. their optimal values are equal for MA P
estimation problems de ﬁned over all CR Fs). Speciﬁcally, we consider a vector x which lies in the

4

feasibility regions of the Q P -RL and SOC P -M S relaxations, i.e. x ∈ [−1, 1]nh . For this vector, we
show that the values of the objective functions of the Q P -RL and SOC P -M S relaxations are equal.
This would imply that if x∗ is an optimal solution of Q P -RL for some CR F with parameter θ then
there exists an optimal solution (x∗ , X∗ ) of the SOC P -M S relaxation. Further, if eQ and eS are the
optimal values of the objective functions obtained using the Q P -RL and SOC P -M S relaxation, then
eQ = eS .
Theorem 2: The Q P -RL relaxation and the SOC P -M S relaxation are equivalent.

Theorems 1 and 2 prove that the L P - S relaxation strictly dominates the Q P -RL and SOC P -M S relax-
ations. A natural question that now arises is whether the additive bound of Q P -RL (proved in [18])
is applicable to the L P - S and SOC P -M S relaxations. Our next theorem answers this question in an
afﬁrmative.
Theorem 3: Using the rounding scheme of [18], L P - S and SOC P -M S provide the same additive
bound as the Q P -RL relaxation, i.e. S
ab;ij | (i.e. the sum of the
4 where S = P(a,b)∈E Pli ,lj ∈l |θ2
absolute values of all pairwise potentials). Furthermore, this bound is tight.
The above bound was proved for the case of binary variables (i.e. h = 2) in [8] using a slightly
different rounding scheme.
5 QP and SOCP Relaxations over Trees and Cycles
We now generalize the results of Theorem 1 by de ﬁning a large c lass of SOC P relaxations which
is dominated by L P - S. Speciﬁcally, we consider the SOC P relaxations which relax the non-convex
constraint X = xx⊤ using a set of second order cone (SOC) constraints of the form
||(Uk )⊤x|| ≤ Ck • X, k = 1, · · · , nC
where Ck = Uk (Uk )⊤ (cid:23) 0, for all k = 1, · · · , nC .
Note that each SOC P relaxation belonging to this class would de ﬁne an equivalen t Q P relaxation
(similar to the equivalent Q P -RL relaxation de ﬁned by the SOC P -M S relaxation). Hence, all these Q P
relaxations will also be dominated by the L P - S relaxation. Before we begin to describe our results
in detail, we need to set up some notation as follows.

(23)

(a)

(b)

(c)

Figure 1: (a) An example CR F de ﬁned over four variables which form a cycle. Note that the o bserved
nodes are not shown for the sake of clarity of the image. (b) The set E k speciﬁed by the matrix Ck
shown in equation (25), i.e. E k = {(a, b), (b, c), (c, d)}. (c) The set V k = {a, b, c, d}. See text for
de ﬁnitions of these sets.
Notation: We consider an SOC constraint which is of the form described in equation (23), i.e.
||(Uk )⊤x|| ≤ Ck • X,
(24)
where k ∈ {1, · · · , nC }.
In order to help the reader understand the notation better, we use an
example CR F shown in Fig. 1(a). This CR F is de ﬁned over four variables v = {va , vb , vc , vd}
(connected to form a cycle of length 4), each of which take a label from the set l = {l0 , l1}. For this
CR F we specify a constraint using a matrix Ck (cid:23) 0 which is 0 everywhere, except for the following
4 × 4 submatrix:

ab;00 C k
aa;00 C k
C k
ac;00 C k
ad;00
bb;00 C k
ba;00 C k
C k
bc;00 C k
bd;00
cb;00 C k
ca;00 C k
C k
cc;00 C k
cd;00
dc;00 C k
da;00 C k
db;00 C k
C k
dd;00




= 




Using the SOC constraint shown in equation (24) we de ﬁne the following two sets: (i) The set E k is
(a, b) ∈ E k if, and only if, it satisﬁes the following conditions:
de ﬁned such that
(a, b) ∈ E ,

2
1
1
0

1 1
2 1
1 2
1 1

0
1
1
2

(25)

(26)

5

∃li , lj ∈ l such that C k
ab;ij 6= 0.

(27)

Recall that E speciﬁes the neighbourhood relationship for the given CR F. In other words E k is the
subset of the edges in the graphical model of the CR F such that Ck speciﬁes constraints for the
random variables corresponding to those edges. For the example CR F (shown in Fig. 1(a)) and Ck
matrix (in equation (25)), the set E k obtained is shown in Fig. 1(b). (ii) The set V k is de ﬁned as
a ∈ V k if, and only if, there exists a vb ∈ v such that (a, b) ∈ E k . In other words V k is the subset
of hidden nodes in the graphical model of the CR F such that Ck speciﬁes constraints for the random
variables corresponding to those hidden nodes. Fig. 1(c) shows the set V k for our example SOC
constraint.

We also de ﬁne a weighted graph Gk = (V k , E k ) whose vertices are speciﬁed by the set V k and
whose edges are speciﬁed by the set E k . The weight of an edge (a, b) ∈ E k is given by w(a, b).
Recall that w(a, b) speciﬁes the strength of the pairwise relationship between two neighbouring
variables va and vb . Thus, for our example SOC constraint, the vertices of this graph are given in
Fig. 1(c) while the edges are shown in Fig. 1(b). This graph can be viewed as a subgraph of the
graphical model representation for the given CR F.
Theorem 4: SOC P relaxations (and the equivalent Q P relaxations) which de ﬁne constraints only
using graphs Gk = (V k , E k ) which form (arbitrarily large) trees are dominated by the L P - S relax-
ation.

We note that the above theorem can be proved using the results of [24] on moment constraints (which
imply that L P - S provides the exact solution for the MA P estimation problems de ﬁned over tree-
structured random ﬁelds). However, our alternative proof p resented in [13] allows us to generalize
the results of Theorem 4 for certain cycles as follows.
Theorem 5: When d(i, j ) ≥ 0 for all li , lj ∈ l, the SOC P relaxations which de ﬁne constraints only
using non-overlapping graphs Gk which form (arbitrarily large) even cycles with all positive or all
negative weights are dominated by the L P - S relaxation.

The above theorem can be proved for cycles of any length whose weights are all negative by a similar
construction. Further, it also holds true for odd cycles (i.e. cycles of odd number of variables) which
have only one positive or only one negative weight. However, as will be seen in the next section,
unlike trees it is not possible to extend these results for any general cycle.
6 Some Useful SOC Constraints
We now describe two SOC P relaxations which include all the marginalization constraints speciﬁed
in L P - S. Note that the marginalization constraints can be incorporated within the SOC P framework
but not in the Q P framework.
6.1 The SOCP-C Relaxation
The SOC P -C relaxation (where C denotes cycles) de ﬁnes second order cone ( SOC) constraints using
positive semide ﬁnite matrices C such that the graph G (de ﬁned in section 5) form cycles. Let the
variables corresponding to vertices of one such cycle G of length c be denoted as vC = {vb |b ∈
{a1 , a2 , · · · , ac }}. Further, let lC = {lj |j ∈ {i1 , i2 , · · · , ic}} ∈ lc be a set of labels for the variables
vC . In addition to the marginalization constraints, the SOC P -C relaxation speciﬁes the following
SOC constraint:

||U⊤ x|| ≤ C • X,
(28)
such that the graph G de ﬁned by the above constraint forms a cycle. The matrix C is 0 everywhere
except the following elements:
Cak ,al ,ik ,il = (cid:26)
Here Dc is a c × c matrix which is de ﬁned as follows:
Dc (k , l) = 

and λc is the absolute value of the smallest eigenvalue of Dc . In other words the submatrix of C
de ﬁned by vC and lC has diagonal elements equal to λc and off-diagonal elements equal to the

if
λc
Dc (k , l) otherwise.

|k − l| = 1
|k − l| = c − 1

1
(−1)c−1
0

if
if
otherwise,

(29)

(30)

k = l,

6

elements of Dc . Clearly, C = U⊤U (cid:23) 0 since its only non-zero submatrix λc I + Dc (where I is
a c × c identity matrix) is positive semide ﬁnite. This allows us to de ﬁne a valid SOC constraint as
shown in inequality (28). We choose to de ﬁne the SOC constraint (28) for only those set of labels lC
which satisfy the following:
ak al ;ik il ≥ X(ak ,al )∈E
X(ak ,al )∈E
Dc (k , l)θ2
Note that this choice is motivated by the fact that the variables Xak al ;ik il corresponding to these
sets vC and lC are assigned trivial values by the L P - S relaxation in the presence of non-submodular
terms.

Dc (k , l)θ2
ak al ;jk jl , ∀{j1 , j2 , · · · , jc }.

(31)

Since marginalization constraints are included in the SOC P -C relaxation, the value of the objective
function obtained by solving this relaxation would at least be equal to the value obtained by the L P - S
relaxation (i.e. SOC P -C dominates L P - S, see Case II in section 2). We can further show that in the
case where |l| = 2 and the constraint (28) is de ﬁned over a frustrated cycle (i. e. a cycle with an
odd number of non-submodular terms) SOC P -C strictly dominates L P - S. One such example is given
in [13]. Note that if the given CR F contains no frustrated cycle, then it can be solved exactly using
the method described in [7].

Dc (k , l)Xak al ;ik il ≥ 2 − c.

The constraint de ﬁned in equation (28) is similar to the (lin ear) cycle inequality constraints [1] which
are given by
Xk,l
We believe that the feasibility region de ﬁned by cycle inequ alities is a strict subset of the feasibility
region de ﬁned by equation (28). In other words a relaxation d e ﬁned by adding cycle inequalities to
L P - S would strictly dominate SOC P -C. We are not aware of a formal proof for this. We now describe
the SOC P -Q relaxation.
6.2 The SOCP-Q Relaxation
In this previous section we saw that L P - S dominates SOC P relaxations whose constraints are de ﬁned
on trees. However, the SOC P -C relaxation, which de ﬁnes its constraints using cycles, str ictly dom-
inates L P - S. This raises the question whether matrices C, which result in more complicated graphs
G, would provide an even better relaxation for the MA P estimation problem. In this section, we
answer this question in an afﬁrmative. To this end, we de ﬁne a
n SOC P relaxation which speciﬁes
constraints such that the resulting graph G from a clique. We denote this relaxation by SOC P -Q
(where Q indicates cliques).

(32)

The SOC P -Q relaxation contains the marginalization constraint and the cycle inequalities (de ﬁned
above). In addition, it also de ﬁnes SOC constraints on graphs G which form a clique. We denote
the variables corresponding to the vertices of clique G as vQ = {vb |b ∈ {a1 , a2 , · · · , aq }}. Let
lQ = {lj |j ∈ {i1 , i2 , · · · , iq }} be a set of labels for these variables vQ . Given this set of variables
vQ and labels lQ , we de ﬁne an SOC constraint using a matrix C of size nh × nh which is zero
everywhere except for the elements Cak al ;ik il = 1. Clearly, C is a rank 1 matrix with eigenvalue 1
and eigenvector u which is zero everywhere except uak ;ik = 1 where vak ∈ vQ and lik ∈ lQ . This
implies that C (cid:23) 0, which enables us to obtain the following SOC constraint:
xak ;ik !2
 Xk
≤ q + Xk,l
We choose to specify the above constraint only for the set of labels lQ which satisfy the following
condition:
ak al ;ik il ≥ X(ak ,al )∈E
X(ak ,al )∈E
θ2
Again, this choice is motivated by the fact that the variables Xak al ;ik il corresponding to these sets
vQ and lQ are assigned trivial values by the L P - S relaxation in the presence of non-submodular
pairwise potentials.

θ2
ak al ;jk jl , ∀{j1 , j2 , · · · , jq }.

Xak al ;ik il .

(33)

(34)

When the clique contains a frustrated cycle, it can be shown that SOC P -Q dominates the L P - S relax-
ation (similar to SOC P -C). Further, using a counter-example, it can proved that the feasibility region
given by cycle inequalities is not a subset of the feasibility region de ﬁned by constraint (33). One
such example is given in [13].

7

7 Discussion
We presented an analysis of approximate algorithms for MA P estimation which are based on convex
relaxations. The surprising result of our work is that despite the ﬂexibility in the form of the objective
function/constraints offered by Q P and SOC P, the L P - S relaxation dominates a large class of Q P
and SOC P relaxations. It appears that the authors who have previously used SOC P relaxations in
the Combinatorial Optimization literature [16] and those who have reported Q P relaxation in the
Machine Learning literature [18] were unaware of this result. We also proposed two new SOC P
relaxations (SOC P -C and SOC P -Q) and presented some examples to prove that they provide a better
approximation than L P - S. An interesting direction for future research would be to determine the best
SOC constraints for a given MA P estimation problem (e.g. with truncated linear pairwise potentials).
Acknowledgments: We thank Pradeep Ravikumar and John Lafferty for careful reading of the manuscript and
for pointing out an error in our description of the SOC P -M S relaxation.
References
[1] F. Barahona and A. Mahjoub. On the cut polytope. Mathematical Programming, 36:157–173, 1986.
[2] S. Boyd and L. Vandenberghe. Convex Optimization. Cambridge University Press, 2004.
[3] Y. Boykov, O. Veksler, and R. Zabih. Fast approximate energy minimization via graph cuts. PAMI,
23(11):1222–1239, 2001.
[4] C. Chekuri, S. Khanna, J. Naor, and L. Zosin. Approximation algorithms for the metric labelling problem
via a new linear programming formulation. In SODA, 2001.
[5] E. Dalhaus, D. Johnson, C. Papadimitriou, P. Seymour, and M. Yannakakis. The complexity of multi-
terminal cuts. SICOMP, 23(4):864–894, 1994.
[6] M. Goemans and D. Williamson. Improved approximation algorithms for maximum cut and satisﬁability
problems using semideﬁnite programming.
Journal of ACM, 42:1115–1145, 1995.
[7] P. Hammer, P. Hansen, and B. Simeone. Roof duality, complementation and persistency in quadratic 0-1
optimization. Mathematical Programming, 28:121–155, 1984.
[8] P. Hammer and B. Kalantari. A bound on the roof duality gap. Technical Report RRR 46, Rutgers Center
for Operations Research, Rutgers University, 1987.
[9] A. Karzanov. Minimum 0-extension of graph metrics. Euro. J. of Combinatorics, 19:71–101, 1998.
[10] S. Kim and M. Kojima. Second-order cone programming relaxation of nonconvex quadratic optimization
problems. Technical report, Tokyo Institute of Technology, 2000.
[11] J. Kleinberg and E. Tardos. Approximation algorithms for classi ﬁcation problems with pairwise relation-
ships: Metric labeling and Markov random ﬁelds. In STOC, pages 14–23, 1999.
[12] A. Koster, C. van Hoesel, and A. Kolen. The partial constraint satisfaction problem: Facets and lifting
theorems. Operations Research Letters, 23(3-5):89–97, 1998.
An analysis of convex relaxations
and P. H. S. Torr.
[13] M. P. Kumar, V. Kolmogorov,
for MAP estimation.
report, Oxford Brookes University, 2007.
Technical
Available at
http://cms.brookes.ac.uk/staff/PawanMudigonda/.
[14] M. P. Kumar, P. H. S. Torr, and A. Zisserman. Solving Markov random ﬁelds using second order cone
programming relaxations. In CVPR, volume I, pages 1045–1052, 2006.
[15] J. Lasserre. Global optimization with polynomials and the problem of moments. SIAM Journal of Opti-
mization, 11:796–817, 2001.
[16] M. Muramatsu and T. Suzuki. A new second-order cone programming relaxation for max-cut problems.
Journal of Operations Research of Japan, 43:164–177, 2003.
[17] C. Olsson, A. Eriksson, and F. Kahl. Solving large scale binary quadratic problems: Spectral methods vs.
semideﬁnite programming. In CVPR, pages 1–8, 2007.
[18] P. Ravikumar and J. Lafferty. Quadratic programming relaxations for metric labelling and Markov random
ﬁeld MAP estimation. In ICML, 2006.
[19] C. Schellewald and C. Schnorr. Subgraph matching with semideﬁnite programming. In IWCIA, 2003.
[20] M. Schlesinger. Sintaksicheskiy analiz dvumernykh zritelnikh singnalov v usloviyakh pomekh (syntactic
analysis of two-dimensional visual signals in noisy conditions). Kibernetika, 4:113–130, 1976.
[21] R. Szeliski, R. Zabih, D. Scharstein, O. Veksler, V. Kolmogorov, A. Agarwala, M. Tappen, and C. Rother.
A comparative study of energy minimization methods for markov random ﬁelds.
In ECCV, pages II:
16–29, 2006.
[22] P. H. S. Torr. Solving Markov random ﬁelds using semideﬁ
nite programming. In AISTATS, 2003.
[23] M. Wainwright, T. Jaakola, and A. Willsky. MAP estimation via agreement on trees: Message passing
and linear programming. IEEE Trans. on Information Theory, 51(11):3697–3717, 2005.
[24] M. Wainwright and M. Jordan. Graphical models, exponential families, and variational inference. Tech-
nical Report 649, University of California, Berkeley, 2003.
[25] M. Wainwright and M. Jordan. Treewidth-based conditions for exactness of the Sherali-Adams and
Lasserre relaxations. Technical Report 671, University of California, Berkeley, 2004.

8

