A neural network implementing optimal state
estimation based on dynamic spike train decoding

Omer Bobrowski1 , Ron Meir1 , Shy Shoham2 and Yonina C. Eldar1
Department of Electrical Engineering1 and Biomedical Engineering2
Technion, Haifa 32000, Israel
{bober@tx},{rmeir@ee},{sshoham@bm},{yonina@ee}.technion.ac.il

Abstract

It is becoming increasingly evident that organisms acting in uncertain dynamical
environments often employ exact or approximate Bayesian statistical calculations
in order to continuously estimate the environmental state, integrate information
from multiple sensory modalities, form predictions and choose actions. What is
less clear is how these putative computations are implemented by cortical neural
networks. An additional level of complexity is introduced because these networks
observe the world through spike trains received from primary sensory afferents,
rather than directly. A recent line of research has described mechanisms by which
such computations can be implemented using a network of neurons whose activ-
ity directly represents a probability distribution across the possible “world states ”.
Much of this work, however, uses various approximations, which severely re-
strict the domain of applicability of these implementations. Here we make use of
rigorous mathematical results from the theory of continuous time point process
ﬁltering, and show how optimal real-time state estimation a nd prediction may be
implemented in a general setting using linear neural networks. We demonstrate
the applicability of the approach with several examples, and relate the required
network properties to the statistical nature of the environment, thereby quantify-
ing the compatibility of a given network with its environment.

1

Introduction

A key requirement of biological or arti ﬁcial agents acting i n a random dynamical environment is
estimating the state of the environment based on noisy observations. While it is becoming clear that
organisms employ some form of Bayesian inference, it is not yet clear how the required computa-
tions may be implemented in networks of biological neurons. We consider the problem of a system,
receiving multiple state-dependent observations (possibly arising from different sensory modalities)
in the form of spike trains, and construct a neural network which, based on these noisy observations,
is able to optimally estimate the probability distribution of the hidden world state.

The present work continues a line of research attempting to provide a probabilistic Bayesian frame-
work for optimal dynamical state estimation by biological neural networks. In this framework, ﬁrst
formulated by Rao (e.g., [8, 9]), the time-varying probability distributions are represented in the
neurons’ activity patterns, while the network’s connectivity structure and intrinsic dynamics are
responsible for performing the required computation. Rao’s networks use linear dynamics and dis-
crete time to approximately compute the log-posterior distributions from noisy continuous inputs
(rather than actual spike trains). More recently, Beck and Pouget [1] introduced networks in which
the neurons directly represent and compute the posterior probabilities (rather than their logarithms)
from discrete-time approximate ﬁring rate inputs, using no n-linear mechanisms such as multiplica-
tive interactions and divisive normalization. Another relevant line of work, is that of Brown and
colleagues as well as others (e.g., [4, 11, 13]) where approximations of optimal dynamical estima-

1

tors from spike-train based inputs are calculated, however, without addressing the question of neural
implementation.

Our approach is formulated within a continuous time point process framework, circumventing many
of the difﬁculties encountered in previous work based on dis crete time approximations and input
smoothing. Moreover, using tools from the theory of continuous time point process ﬁltering (e.g.,
[3]), we are able to show that a linear system sufﬁces to yield the exact posterior distribution for
the state. The key element in the approach is switching from posterior distributions to a new set
of functions which are simply non-normalized forms of the posterior distribution. While posterior
distributions generally obey non-linear differential equations, these non-normalized functions obey
a linear set of equations, known as the Zakai equations [15]. Intriguingly, these linear equations
contain the full information required to reconstruct the optimal posterior distribution! The linearity
of the exact solution provides many advantages of interpretation and analysis, not least of which is
an exact solution, which illustrates the clear distinction between observation-dependent and inde-
pendent contributions. Such a separation leads to a characterization of the system performance in
terms of prior knowledge and real-time observations. Since the input observations appear directly
as spike trains, no temporal information is lost. The present formulation allows us to consider in-
puts arising from several sensory modalities, and to determine the contribution of each modality to
the posterior estimate, thereby extending to the temporal domain previous work on optimal multi-
modal integration, which was mostly restricted to the static case. Inherent differences between the
modalities, related to temporal delays and different shapes of tuning curves can be incorporated and
quanti ﬁed within the formalism.

In a historical context we note that a mathematically rigorous approach to point process based ﬁl-
tering was developed during the early 1970s following the seminal work of Wonham [14] for ﬁnite
state Markov processes observed in Gaussian noise, and of Kushner [7] and Zakai [15] for diffusion
processes. One of the ﬁrst papers presenting a mathematical
ly rigorous approach to nonlinear ﬁl-
tering in continuous time based on point process observations was [12], where the exact nonlinear
differential equations for the posterior distributions are derived. The presentation in Section 4 sum-
marizes the main mathematical results initiated by the latter line of research, adapted mainly from
[3], and serves as a convenient starting point for many possible extensions.

2 A neural network as an optimal ﬁlter

Consider a dynamic environment characterized at time t by a state Xt , belonging to a set of N
states, namely Xt ∈ {s1 , s2 , . . . , sN }. We assume the state dynamics is Markovian with genera-
tor matrix Q. The matrix Q, [Q]ij = qij , is deﬁned [5] by requiring that for small values of h,
Pr[Xt+h = si |Xt = si ] = 1 + qiih + o(h) and Pr[Xt+h = sj |Xt = si ] = qij h + o(h) for j 6= i.
The normalization requirement is that Pj qij = 0. This matrix controls the process’ inﬁnitesimal
progress according to ˙π(t) = π(t)Q, where πi (t) = Pr[Xt = si ].
The state Xt is not directly observable, but is only sensed through a set of M random state-dependent
k=1 . We take each point process N (k)
observation point processes {N (k)
to represent the spiking
t }M
t
activity of the k-th sensory cell, and assume these processes to be doubly stochastic Poisson counting
processes1 with state-dependent rates λk (Xt ). These processes are assumed to be independent,
given the current state Xt . The objective of state estimation (a.k.a. nonlinear ﬁlter ing) is to obtain a
differential equation for the posterior probabilities
= Pr hXt = si (cid:12)(cid:12)(cid:12)
[0,t] i ,
4
[0,t] , . . . , N (M )
N (1)
(1)
[0,t] o, and refer the
= nN (1)
4
[0,t] , . . . , N (M )
where N (k)
[0,t] = {N (k)
s }0≤s≤t . In the sequel we denote Y t
0
reader to Section 4 for precise mathematical deﬁnitions.
We interpret the rate λk as providing the tuning curve for the k-th sensory input. In other words,
the k-th sensory cell responds with strength λk (si ) when the input state is Xt = si . The required
differential equations for pi (t) are considerably simpli ﬁed, with no loss of information [3] , by con-
sidering a set of non-normalized ‘probability functions’ ρi (t), such that pi (t) = ρi (t)/ PN
j=1 ρj (t).
1 Implying that the rate function itself is a random process.

pi (t)

2

Based on the theory presented in Section 4 we obtain
(λk (si ) − 1) "Xn
n ) − 1# ρi (t),
M
N
Xk=1
Xj=1
δ(t − tk
n } denote the spiking times of the k-th sensory cell. This equation can be written in vector
where {tk
form by deﬁning

Qj iρj (t) +

˙ρi (t) =

(2)

Λk = diag(λk (s1 ) − 1, λk (s2 ) − 1, . . . λk (sN ) − 1)

;

Λ =

and ρ = (ρ1 , . . . , ρN ), leading to

Λk ,

(3)

M
Xk=1

ρ(t) +

δ(t − tk
n )ρ(t).

˙ρ(t) = (Q − Λ)>

M
Xk=1
Λk Xn
Equations (2) and (4) can be interpreted as the activity of a linear neural network, where ρi (t)
represents the ﬁring rate of neuron i at time t, and the matrix (Q − Λ)> represents the synaptic
weights (including self-weights); see Figure 1 for a graphical display of the network. Assuming
that the tuning functions λk are unimodal, decreasing in all directions from some maximal value
(e.g., Gaussian or truncated cosine functions), we observe from (2) that the impact of an input spike
at time t is strongest on cell i for which λk (si ) is maximal, and decreases signi ﬁcantly for cells
j for which sj is ‘far’ from si . This effect can be modelled using excitatory/inhibitory connec-
tions, where neurons representing similar states excite each other, while neurons corresponding to
very different states inhibit each other (e.g., [2]). This issue will be elaborated on in future work.

(4)

Several observations are in place regarding (4).
(i) The so-
lution of (4) provides the optimal posterior state estimator
given the spike train observations, i.e., no approximation is in-
volved. (ii) The equations are linear even though the equations
obeyed by the posterior probabilities pi (t) are nonlinear. (iii)
The temporal evolution breaks up neatly into an observation-
independent term, which can be conceived of as implementing
a Bayesian dynamic prior, and an observation-dependent term,
which contributes each time a spike occurs. Note that a simi-
lar structure was observed recently in [1]. (iv) The observation
process affects the posterior estimate through two terms. First,
input processes with strong spiking activity, affect the activity
more strongly. Second, the k-th input affects most strongly the
components of ρ(t) corresponding to states with large values
of the tuning curve λk (si ). (v) At this point we assume that the
matrix Q is known. In a more general setting, one can expect
Q to be learned on a slower time scale, through interaction
with the environment. We leave this as a topic for future work.
Multi-modal inputs A multi-modal scenario may be envisaged as one in which a subset of the sen-
sory inputs arises from one modality (e.g., visual) while the remaining inputs arise from a different
sensory modality (e.g., auditory). These modalities may differ in the shapes of their receptive ﬁelds,
their response latencies, etc. The framework developed above is sufﬁciently general to deal with
any number of modalities, but consider for simplicity just two modalities, denoted by V and A. It is
straightforward to extend the derivation of (4), leading to
ρ(t) + ( Mv
Ma
n )) ρ(t).
Xk=1
Xk=1
k Xn
k Xn
Λv
Λa
δ(t − ta,k
Prediction The framework can easily be extended to prediction, deﬁned a s the problem of calcu-
lating the future posterior distribution ph
0 ].
It is easy to show that the
i (t) = Pr[Xt+h = si |Y t

Figure 1: A graphical depiction of
the network implementing optimal
ﬁltering of M spike train inputs.

˙ρ(t) = (Q − Λv − Λa )>

δ(t − tv ,k
n ) +

(5)

3

h (t) +
ρ

δ(t − tk
h (t),
n )ρ

h (t) = (Q − ˜Λ)>
˙ρ

non-normalized probabilities ρ

h (t) can be calculated using the vector differential equation
M
˜Λk Xn
Xk=1
Λk e−hQ> . Interestingly, the
ρ(0), and where ˜Λk = ehQ>
h (0) = ehQ>
with the initial condition ρ
equations obtained are identical to (4), except that the system parameters are modi ﬁed.
Simpli ﬁed equation When the tuning curves of the sensory cells are uniformly distributed Gaus-
sians (e.g., spatial receptive ﬁelds), namely λk (x) = λmax exp(−(x− k∆x)2 /2σ2 ), it can be shown
[13] that for small enough ∆x, and a large number of sensory cells, PM
k=1 λk (x) ≈ β for all x, im-
plying that Λ = Pk Λk ≈ (β − M )I. Therefore the matrix Λ has no effect on the solution of (4),
except for an exponential attenuation that is applied to all the cells simultaneously. Therefore, in
cases where the number of sensory cells is large, Λ can be omitted from (4). This means that be-
tween spike arrivals, the system behaves solely according to the a-priori knowledge about the world,
and when a spike arrives, this information is reshaped according to the ﬁring cell’s tuning curve.

(6)

3 Theoretical Implications and Applications

Viewing (4) we note that between spike arrivals, the input has no effect on the system. Therefore,
the inter-arrival dynamics is simply ˙ρ(t) = (Q − Λ)>
ρ(t). Deﬁning tn as the n-th arrival time of a
spike from any one of the sensors, the solution in the interval (tn , tn+1 ) is
ρ(t) = e(t−tn )(Q−Λ)>
ρ(tn ).
When a new spike arrives from the k-th sensory neuron at time tn the system is modi ﬁed within an
inﬁnitesimal window of time as
ρi (t+
n )(λk (si ) − 1) = ρi (t−
n ) + ρi (t−
n ) = ρi (t−
n )λk (si ).

(7)

Thus, at the exact time of a spike arrival from the k-th sensory cell, the vector ρ is reshaped according
to the tuning curve of the input cell that ﬁred this spike. Ass uming n spikes occurred before time t,
we can derive an explicit solution to (4), given by
n
Yi=1
where k(ti ) is the index of the cell that ﬁred at
conditions ρ(0) at t0 = 0.

ti , I is the identity matrix, and we assumed initial

(I + Λk(ti ) )e(ti−ti−1 )(Q−Λ)>

ρ(t) = e(t−tn )(Q−Λ)>

ρ(0),

(8)

3.1 Demonstrations

We demonstrate the operation of the system on several synthetic examples. First consider a small
object moving back and forth on a line, jumping between a set of discrete states, and being ob-
served by a retina with M sensory cells. Each world state si describes the particle’s position,
and each sensory cell k generates a Poisson spike train with rate λk (Xt ), taken to be a Gaussian
λmax exp (−(x − xk )2 /2σ2 ). Figure 2(a) displays the motion of the particle for a speci ﬁ c choice of
matrix Q, and 2(b) presents the spiking activity of 10 position sensitive sensory cells. Finally, Figure
2(c) demonstrates the tracking ability of the system, where the width of the gray trace corresponds
to the prediction conﬁdence. Note that the system is able to d istinguish between 25 different states
rather well with only 10 sensory cells.
In order to enrich the systems’s estimation capabilities, we can include additional parameters within
the state of the world. Considering the previous example, we create a larger set of states: ˜sij =
(si , dj ), where dj denotes the current movement direction (in this case d1=up, d2=down). We add
a population of sensory cells that respond differently to different movement directions. This lends
further robustness to the state estimation. As can be seen in Figure 2(d)-(f), when for some reason the
input of the sensory cells is blocked (and the sensory cells ﬁ re spontaneously) the system estimates
a movement that continues in the same direction. When the blockade is removed, the system is re-
synchronized with the input. It can be seen that even during periods where sensory input is absent,
the general trend is well predicted, even though the estimated uncertainty is increased.

4

By expanding the state space it is also possible for the system to track multiple objects simultane-
ously. In ﬁgure 2(g)-(i) we present tracking of two simultan eously moving objects. This is done
i denotes the state (location) of the
j ), where sk
simply by creating a new state space, sij = (s1
i , s2
k-th object.

]
m
c
[
x

#
 
l
l
e
c

10

5

0
 
0

10

5

0
0

(g) Object trajectory

 

Object #1
Object #2
9

7

8

1

2

3

6

4

5
t[sec]
(h) Input activity

1

2

3

4

5
t[sec]

6

7

8

9

]
m
c
[
x

10
8
6
4
2
0    

2

4

t[sec]

6

8

10

1

2

3

4

5
t[sec]

6

7

8

9

(f) Posterior probability evolution

(i) Posterior probability evolution

(a) Object trajectory

(d) Object trajectory

20

10

]
m
c
[
x

7

8

9

0
0

1

2

3

1

2

3

6

4

5
t[sec]
(b) Input activity

6

4

5
t[sec]
(e) Input activity

7

8

9

20

10

]
m
c
[
x

0
0

10

5

0
0

#
 
l
l
e
c

25
20
15
10
5

]
m
c
[
x

1

2

3

4

5
t[sec]

6

7

8

9

(c) Posterior probability evolution

#
 
l
l
e
c

10

5

0
0

25
20
15
10
5

]
m
c
[
x

0    

2

4

t[sec]

6

8

10

0    

2

4

t[sec]

6

8

10

Figure 2: Tracking the motion of an object in 1D. (a) The object’s trajectory. (b) Spiking activity
of 10 sensory cells.
(c) Decoded position estimation with conﬁde nce interval. Each of the 10
sensory cells has a Gaussian tuning curve of width σ = 2 and maximal ﬁring rate λmax = 25.(d)-(f)
Tracking based on position and direction information. The red bar marks the time when the input
was blocked, and the green bar marks the time when the blockade was removed. Here we used 10
place-cells and 4 direction-cells (marked in red). (g)-(i) Tracking of two objets simultaneously. The
0 (cid:3).
network activity in (i) represents Pr (cid:2)X 1
t = si ∨ X 2
t = si |Y t
3.2 Behavior Characterization

The solution of the ﬁltering equations (4) depends on two pro cesses, namely the recurrent dynamics
due to the ﬁrst term, and the sensory input arising from the se cond term. Recall that the connectivity
matrix Q is essentially the generator matrix of the state transition process, and as such, incorporates
prior knowledge about the world dynamics. The second term, consisting of the sensory input, con-
tributes to the state estimator update every time a spike occurs. Thus, a major question relates to
the interplay between the a-priori knowledge embedded in the network through Q and the incom-
ing sensory input. In particular, an important question relates to tailoring the system parameters
(e.g., the tuning curves λk ), to the properties of the external world. As a simple characterization
of the generator matrix Q, we consider the diagonal and non-diagonal terms. The diagonal term
qii is related to the average time spent in state i through E[Ti ] = −1/qii [5], and thus we deﬁne
11 + · · · + q−1
τ (Q) = − (cid:0)q−1
N N (cid:1) /N , as a measure of the transition frequency of the process, where
small values of τ correspond to a rapidly changing process. A second relevant measure relates to
the regularity in the transition between the states. To quantify this consider a state i, and deﬁne a
probability vector qi consisting of the N − 1 elements {Qij }, j 6= i, normalized so that the sum
of the elements is 1. The entropy of qi is a measure for the state transition irregularity from state i,
and we deﬁne H (Q) as the average of this entropy over all states. In summary, we lump the main
properties of Q into τ (Q), related to the rapidity of the process, and H (Q), measuring the transition
regularity. Clearly, these variables are but one heuristic choice for characterizing the Markov pro-
cess dynamics, but they will enable us to relate the ‘world dynamics’ to the system behavior. The
sensory input inﬂuence on the system is controlled by the tun ing curves. To simplify the analysis we
assume uniformly placed Gaussian tuning curves, λk (x) = λmax exp (−(x − k∆x)2 /2σ2 ), which
can be characterized by two parameters - the maximum value λmax and the width σ . Note, however
that our model does not require any special constraints on the tuning curves.

Figure 3 examines the system performance under different world setups. We measure the perfor-
mance using the L1 error of the maximum aposteriori (MAP) estimator built from the posterior
distribution generated by the system. The MAP estimator is obtained by selecting the cell with the
highest ﬁring activity ρi (t), is optimal under the present setting (leading to the minimal probability
of error), and can be easily implemented in a neural network by a Winner-Take-All circuit. The
choice of the L1 error is justi ﬁed in this case since the states {si } represent locations on a line,

5

thereby endowing the state space with a distance measure. In ﬁgure 3(a) we can see that as τ (Q)
increases, the error diminishes, an expected result, since slower world dynamics are easier to ana-
lyze. The effect of H (Q) is opposite - lower entropy implies higher conﬁdence in the n ext state.
Therefore we can see that the error increases with H (Q) ( ﬁg. 3(b)). The last issue we examine
relates to the behavior of the system when an incorrect Q matrix is used (i.e., the world model is
incorrect). It is clear from ﬁgure 3(c) that for low values of M (the number of sensory cells), using
the wrong Q matrix increases the error level signi ﬁcantly. However as t he value of M increases, the
differences are reduced. This phenomenon is expected, since the more observations are available
about the world, the less weight need be assigned to the a-priori knowledge.

1

0.8

0.6

0.4

0.2

r
o
r
r
E
 
1
L

1.6

1.4

1.2

1

0.8

r
o
r
r
E
 
1
L

Correct model
Wrong Q−matrix, same  t(Q)
Wrong Q−matrix, different  t(Q)

 

10

8

6

4

2

r
o
r
r
E
 
1
L

2

4

6

8

10

0
0

t(Q)
(a) Effect of state rapidity

2

1

1.5

2.5
H(Q)
(b) Effect of transition entropy

3

3.5

4

0
 
0

100

200

300

400

500

M
(c) Effect of misspeciﬁcation

Figure 3: State estimation error for different world dynamics and model misspeci ﬁcation. For (a)
and (b) M = 17, N = 17, σ = 3, λmax = 50, and for (c) N = 25, σ = 3, λmax = 50.

In ﬁgure 4 we examine the effect of the tuning curve parameter s on the system’s performance. Given
a ﬁxed number of input cells, if the tuning curves are too narr ow ( ﬁg. 4(a) top), they will not cover
the entire state space. On the other hand, if the tuning curves are too wide ( ﬁg. 4(a) bottom) the cell’s
response is very similar for all states. Therefore we get an error function that has a local minimum
( ﬁg. 4(b)). It remains for future work to determine what is th e optimal value of σ for a given model.
The effect of different values of λmax is obvious - higher values of λmax lead to more spikes per
sensory cell which increases the system’s accuracy. Clearly, under physiological conditions, where
high ﬁring rates are energetically costly, we would expect a tradeoff between accuracy and energy
expenditure.

low s

)
x
(
k
l

40

20

0
0

)
x
(
k
l

40

20

0
0

)
x
(
k
l

40

20

0
0

10

20

30

40

50
x[cm]
medium s

60

70

80

90

100

10

20

30

40

50
x[cm]
high  s

60

70

80

90

100

10

20

30

40

50
x[cm]

60

70

80

90

100

(a)

r
o
r
r
E
 
1
L

14

12

10

8

6

4

2

0
 
−2

 

l
 = 50
max
l
 = 25
max
l
 = 10
max

1

2

3

−1

0

log(s)
(b)

Figure 4: The effect of the tuning curves parameters on performance.

4 Mathematical Framework and Derivations

We summarize the main mathematical results related to point process ﬁltering, adapted mainly from
[3]. Consider a ﬁnite-state continuous-time Markov proces s Xt ∈ {s1 , s2 , . . . , sN } with a gener-
ator matrix Q that is being observed via a set of (doubly stochastic) Poisson processes with state-
dependent rate functions λk (Xt ), k = 1, . . . , M .
Consider ﬁrst a single point process observation N t
0 = {Ns }0≤s≤t . We denote the joint probability
law for the state and observation process by P1 . The objective is to derive a differential equation for
the posterior probabilities (1). This is the classic nonlinear ﬁltering problem from systems theory

6

L(ω)dP0 (ω),

0 ], where, in the
(e.g. [6]). More generally, the problem can be phrased as computing E1 [f (Xt )|N t
case of (1), f is a vector function, with components fi (x) = [x = si ].
We outline the derivation required to obtain such an equation, using a method referred to as
change of measure (e.g., [3]). The basic idea is to replace the computationally hard evaluation
0 ], by a tractable computation based on a simple probability law. Consider two
of E1 [f (Xt )|N t
probability spaces (Ω, F , P0 ) and (Ω, F , P∞ ) that differ only in their probability measures. P1
is said to be absolutely continuous with respect to P0 (denoted by P1 (cid:28) P0 ), if for all A ∈ F ,
P0 (A) = 0 ⇒ P1 (A) = 0. Assuming P1 (cid:28) P0 , it can be proved that there exists a random variable
L(ω), ω ∈ Ω, such that for all A ∈ F ,
P1 (A) = E0 [1AL] = ZA
where E0 denotes the expectation with regard to P0 . The random variable L is called the Radon-
Nykodim derivative of P1 with respect to P0 , and is denoted by L(ω) = dP1 (ω)/dP0 (ω).
Consider two continuous-time random processes - Xt ,Nt , that have different interpretation under
the different probability measures - P0 , P1 :
P0 : (cid:26) Xt is a ﬁnite-state Markov process , Xt ∈ {s1 , s2 , . . . , sN }.
Nt is a Poisson process with a constant rate of 1, independent of Xt
P1 : (cid:26) Xt is a ﬁnite-state Markov process , Xt ∈ {s1 , s2 , . . . , sN }.
Nt is a doubly-stochastic Poisson process with rate function: λ(Xt )
The following avatar of Bayes’ formula (eq. 3.5 in chap. 6 of [3]), supplies a way to calculate the
0 ] based on P1 in terms of an expectation w.r.t. P0 ,
conditional expectation E1 [f (Xt )|N t
E0 [Lt f (Xt )|N t
0 ]
E0 [Lt |N t
0 ]
where Lt = dP1,t /dP0,t , and P0,t and P1,t are the restrictions of P0 and P1 , respectively, to the
sigma-algebra generated by {N t
0 }. We refer the reader to [3] for precise deﬁnitions.
0 , X∞
Using (1) and (12) we have

E1 [f (Xt )|N t
0 ] =

(10)

(11)

(12)

,

(9)

,

.

pi (t) = E1 [fi (Xt )|N t
0 ] =

E0 [Lt fi (Xt )|N t
0 ]
E0 [Lt |N t
0 ]
Since the denominator is independent of i, it can be regarded as a normalization factor. Thus,
4
0 ], it follows that pi (t) = ρi (t)/ PN
j=1 ρj (t).
deﬁning ρi (t)
= E0 [Lt fi (Xt )|N t
Based on the above derivation, one can show ([3], chap. 6.4) that {ρi (t)} obey the stochastic differ-
ential equation (SDE)

(13)

.

(14)

dρi (t) =

Qj iρj (t)dt + (λ(si ) − 1)ρi (t)(dNt − dt).

N
Xj=1
A SDE of the form dρ(t) = a(t)dt + b(t)dNt should be interpreted as follows. If at time t, no
jump occurred in the counting process Nt , then ρ(t + dt) − ρ(t) ≈ a(t)dt, where dt denotes an
inﬁnitesimal time interval. If a jump occurred at time t then ρ(t + dt) − ρ(t) ≈ a(t)dt + b(t). Since
the jump locations are random, ρ(t) is a stochastic process, hence the term SDE.
Now, this derivation can be generalized to the case where there are M observation processes
, . . . , N (M )
, N (2)
N (1)
with different rate functions λ1 (Xt ), λ2 (Xt ), . . . , λM (Xt ). In this case the
t
t
t
differential equations for the non-normalized posterior probabilities is
M
N
Xk=1
Xj=1
Recalling that N (k)
is a counting process, namely dN (k)
n ), we obtain (2), where
t /dt = Pn δ(t − tk
t
n is the arrival time of the n-th event in the k-th observation process.
tk

(λk (si ) − 1)ρi (t)(dN (k)
t − dt)

Qj iρj (t)dt +

dρi (t) =

(15)

7

5 Discussion

In this work we have introduced a linear recurrent neural network model capable of exactly imple-
menting Bayesian state estimation and prediction from input spike trains in real time. The framework
is mathematically rigorous and requires few assumptions, is naturally formulated in continuous time,
and is based directly on spike train inputs, thereby sacri ﬁc ing no temporal resolution. The setup is
ideally suited to the integration of several sensory modalities, and retains its optimality in this setting
as well. The linearity of the system renders an analytic solution possible, and a full characterization
in terms of a-priori knowledge and online sensory input. This framework sets the stage for many
possible extensions and applications, of which we mention several examples. (i) It is important
to ﬁnd a natural mapping between the current abstract neural model and more standard biologi-
cal neural network models. One possible approach was mentioned in Section 2, but other options
are possible and should be pursued. Additionally, the implementation of the estimation network
(namely, the variables ρi (t)) using realistic spiking neurons is still open. (ii) At this point the matrix
Q in (4) is assumed to be known. Combining approaches to learning Q and adapting the tuning
curves λk in real time will lend further plausibility and robustness to the system. (iii) The present
framework, based on doubly stochastic Poisson processes, can be extended to more general point
processes, using the ﬁltering framework described in [10].
(iv) Currently, each world state is repre-
sented by a single neuron (a grandmother cell). This is clearly a non-robust representation, and it
would be worthwhile to develop more distributed and robust representations. Finally, the problem
of experimental veri ﬁcation of the framework is a crucial st ep in future work.
Acknowledgments The authors are grateful to Rami Atar his helpful advice on nonlinear ﬁltering.

References
[1] J.M. Beck and A. Pouget. Exact inferences in a neural implementation of a hidden markov
model. Neural Comput, 19(5):1344–1361, 2007.
[2] R. Ben-Yishai, R.L. Bar-Or, and H. Sompolinsky. Theory of orientation tuning in visual cortex.
Proc Natl Acad Sci U S A, 92(9):3844–8, Apr 1995. 542.
[3] P. Br ´emaud. Point Processes and Queues: Martingale Dynamics. Springer, New York, 1981.
[4] U.T. Eden, L.M. Frank, V. Solo, and E.N. Brown. Dynamic analysis of neural encoding by
point process adaptive ﬁltering. Neural Computation, 16:971–998, 2004.
[5] G.R. Grimmett and D.R. Stirzaker. Probability and Random Processes. Oxford University
Press, third edition, 2001.
[6] A.H. Jazwinsky. Stochastic Processes and Filtering Theory. Academic Press, 1970.
[7] H.J. Kushner. Dynamical equations for optimal nonlinear ﬁltering.
J. Differential Equations,
3:179–190, 1967.
[8] R.P.N. Rao. Bayesian computation in recurrent neural circuits. Neural Comput, 16(1):1–38,
2004. 825.
[9] R.P.N. Rao. Neural models of Bayesain belief propagation. In K. Doya, S. Ishii, A. Pouget,
and R. P. N. Rao, editors, Bayesian Brain, chapter 11. MIT Press, 2006.
[10] A. Segall, M. Davis, and T. Kailath. Nonlinear ﬁltering with counting observations.
Tran. Information Theory,, 21(2):143–149, 1975.
[11] S. Shoham, L.M. Paninski, M.R. Fellows, N.G. Hatsopoulos, J.P. Donoghue, and R.A. Nor-
man. Statistical encoding model for a primary motor cortical brain-machine interface. IEEE
Trans Biomed Eng., 52(7):1312–22, 2005.
[12] D. L. Snyder. Filtering and detection for doubly stochastic Poisson processes. IEEE Transac-
tions on Information Theory, IT-18:91–102, 1972.
[13] N. Twum-Danso and R. Brockett. Trajectory estimation from place cell data. Neural Netw,
14(6-7):835–844, 2001.
[14] W.M. Wonham. Some applications of stochastic differential equations to optimal nonlinear
ﬁltering.
J. SIAM Control, 2(3):347–369, 1965.
[15] M. Zakai. On the optimal ﬁltering of diffusion processe s. Z. Wahrscheinlichkeitheorie verw
Gebiete, 11:230–243, 1969.

IEEE

8

