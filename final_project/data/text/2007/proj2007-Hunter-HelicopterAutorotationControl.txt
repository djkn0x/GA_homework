CS229 Final pro ject
Control of an autonomous helicopter in autorotation

Timothy Hunter

Autonomous helicopters have been studied for years because they represent an interesting class of
unmanned aerial vehicles (UAVs). Recent works (abb [1]) have successfully shown that unmanned
helicopters can accomplish the most dicult acrobatic gures and can be controlled in dicult
In the wake of these studies, the present work is
attitudes by learning from a human model.
interested in handling an unusual conguration such as landing with the engine disabled (i.e.
in
autorotation). The ultimate goal that we xed to ourselves is to build a controller that would handle
the approach and the landing at a given point without the engine at any time. In the course of
this class pro ject, we built upon the previous works made by the Stanford AI/Robotics Lab. By
customizing the remote-controlled helicopter used for #Pieter, we were able to perform successfull
autorotations without the nal landing, and we laid out the ground for future works on the landing
itself.

A.

Introduction

Even if modern UAVs have become very reliable over
the time, their inherent mecanical complexity make them
prone to failures while in ight. The engine failure is the
most common mecanical failure for helicopters (see for
example Padeld [3]) and pilots are trained to deal with
this situation. In this case, the blades, instead of pulling
the helicopter up in the air, are used as a break to slow
down the fall of the machine. This steady state is called
autorotation. A helicopter UAV is usually considered as
expandable and its irremediable loss is the usual out-
come in case of such a failure. However, now that UAVs
are loaded with expensive sensors and y over densely
populated areas, it seems worth trying to recover from
such delicate congurations. Since a human pilot can
safely land a remote-controlled helicopter without its en-
gine and since to our knowledge this had never been at-
tempted before for small-scale helicopters, it seemed in-
teresting to try to give this task to the computer as well.
The helicopter dynamics in normal conditions is now
well-understood and well-simulated in nearly all the
range of maneuvers. However, the understanding of the
dynamics during autorotation requires a ne model of the
air circulation around the blades and is much more com-
plicated.
Instead of attempting to build such a model
from theoretical consideration, we built a simple model
from ight data. This model is a linear model of non-
linear features, and thus can be used through standard
techniques to derive a controller from it.
A crucial factor is the speed of the blades, counted in
number of rounds per minutes (rpm). Due to the air drag,
the rpm number tends to go down. If the blades turn too
slowly, the helicopter cannot sustain itself and follows a
free fall path. Thus the capture and the identication of
an optimal autorotation blade speed was an important
part of our work.
We followed the following pattern in our work: we rst
recorded a number of autorotations made by our pilot.
Using this data, we built a model for the steady-state
part of the ight in autorotation and identied what we

considered as critical parameters for the controller. Us-
ing the model and the parameters, a controller was auto-
matically derived, tested in simulation and then in a full
experiment.

B. Modelization

We use the usual representation of a helicopter as a 6
degrees of freedom solid ob ject controlled by 4 inputs (
Padeld [2] is a reference text on the helicopter dynam-
ics) We also add as a state the rpm of the blades. The
inuence of the wind is neglected. Thus our model has
13 states and 4 inputs.
A helicopter usually a non-linear behaviour due to the
relations between the angles and the velocities. Following
the approach seen in abb [1], we build a model that pre-
dicts the physical acceleration in the body coordinates,
and which is usually a simple function of the other pa-
rameters in the body frame. According to physics, if we
know the acceleration, we can then predict the state us-
ï£¶ï£·ï£¸âˆ—
ï£«ï£¬ï£­
ï£«ï£¬ï£­
ï£¶ï£¸(b)
ï£¶ï£¸(b)
ï£¶ï£¸(b)
ï£«ï£­ Ë™Ï†
ï£«ï£­ Ë™x
ï£«ï£­ Â¨x
ï£«ï£­ Ë™x
ï£¶ï£¸(b)
ing the equation
Ë™Ï‘
Ë™y
Â¨y
Ë™y
Â¨z
Ë™z
Ë™z
Ë™Ï‰
tâˆ’1
tâˆ’1
tâˆ’1
t
where R is the rotation matrix that maps the body coor-
dinate frame at time t to the body coordinate frame at
time t + 1 (and depends only on the angular velocity at
time t). We have a similar equation for the angular ve-
locities. Thus we have a non-linear model (even though
the accelerations are predicted using linear equations),
which means we cannot use standard frequency analysis
methods and instead rely on quadratic optimization.
We performed the following data tting:
Ë™ut âˆ’ (gu )t = Cu Â· (ut 1)T
Ë™vt âˆ’ (gv )t = Cv Â· (vt 1)T
Ë™wt âˆ’ (gw )t = Cw Â· (wt icol 1)T

+ âˆ†t

= R

ï£¶ï£·ï£¸

and

D. Controller

2

Ë™pt = Cp Â· (pt ilat 1)T
Ë™qt = Cq Â· (qt ilon 1)T
Ë™rt = Cr Â· (rt icyc 1)T

We express the acceleration in the body coordinates
at time t, from which it is easy to nd the acceleration
( Â¨x Â¨y Â¨z )T in the reference earth frame by a rotation and
compute the velocity at time t + 1. Note that we sub-
stract the eect of the gravitation in our model. Indeed,
gravitation has such a strong (and known) inuence that
it can be left out in the model tting and integrated back
in the simulation.
Our simulation showed us that the blade speed had
only a small inuence on the other parameters. The blade
(cid:18)
(cid:19)T
(cid:113)
(cid:112)
speed (expressed in rpm) follows the following model:
vb

u2 + v2 w icol

Ë™vb = Cb Â·

lat + i2
i2
lon

C. Data collection

The helicopter used in this experiment is equipped
with a MaxStream IMU (instrumentation measurement
unit) that gives the angular accelerations and the atti-
tude of the helicopter in the body frame at a rate of
15Hz. The position was measured either with a GPS or
with a setup of 2 cameras on the ground that tracked the
helicopter. The GPS was eventually disabled because its
weight would penalize the performance of the helicopter
and furthermore the signal would be unreliable close to
the ground (due to obstructions by ground ob jects).
The blade speed is captured by a magnetic sensor po-
sitioned on the main gear of the helicopter. In order to
relay this data to the ground, we programmed a micro-
processor that digitizes the information on-board. This
processor transmits the rpms at a rate of about 25Hz
though a radio serial link. The blade speed we get from
this setup is accurate up the millisecond (for a practical
working limit of 20 milliseconds) and does not need to be
ltered.
The camera setup used for estimating the position is
unfortunately not robut enough close to the ground. The
helicopter is identied by centroid separation from the
background. However, because of the way the cameras
adapt to the luminosity, this setup works well when point-
ing either on the sky or on the ground, but not when
both backgrounds are present. As a rst workaround, we
mounted an ultrasound sonar that was shown to provide
accurate measurements of the distance to the ground for
distances of up to 5 meters (at a sampling rate of 10Hz).
This sonar shares the microprocessor unit used for the
blade counter to digitize and relay the information pack-
ets.

The controller was automatically generated using Lin-
ear Quadratic Regulatic, thanks to the fact that our es-
timates of the accelerations are expressed as linear com-
binations (of non-linear features). Note that were are
evaluating a steady-state model in which we do not care
about the position (we only want to regulate the blade
speed, the velocity and the attitude in a rst time). By
looking at the ight records, we identied an constant
value for the collective pitch:

ilon = 0
ilat = 0
icyc = 0
icol = 0.11

(We maintain a positive collective pitch throughout the
descent) The target model was the following
Ë™ztarget = âˆ’5 m/s
Ë™xtarget = 10 m/s
vblade = 1200 rpm
(Ï†, Î¸, Ïˆ) = (0, 0, 0)

i.e., we want to have a constant velocity, blade speed and
a level angle during descent. The blade speed and the
velocities were identied by by looking at the data of
previous ights.
Note that we are building a model for the steady state.
Since of course the helicopter is not at the beginning in
this steady state, the penalities introduced in the LQR
model had to be adjusted with respect to this fact. In
particular, the blade speed target had to be severely pe-
nalized.
Indeed, this parameter is already an order of
magnitude above the other parameters and the helicopter
would try to gain some forward speed at all cost in order
to build a good blade speed. This induced in the rst sec-
ond of autorotation a dangerous free fall-like behaviour.
Note also we are not specifying a position target right
now. This is a point to consider in further research.

E. Results

The following parameters were used to modelize our
UAV helicopter:
Cp = (âˆ’0.4904 âˆ’ 6.1590 25.2748)
Cq = (âˆ’0.2463 âˆ’ 2.0976 âˆ’ 16.5976)
Cr = (0.5215 âˆ’ 5.4296 âˆ’ 16.5976)
Cu = (âˆ’0.0378)
Cv = (âˆ’0.6127 âˆ’ 0.1643)
Cw = (3.4978 âˆ’ 0.7368 âˆ’ 31.3544)
Cb = (106.85 âˆ’ 0.22 âˆ’ 68.53 22.79 2.11 âˆ’ 6.09)

This model yielded good results both in simulation and
in practice. The rpm model was very accurate as shows
graph (1) wich represents the simulated value of the rpms
(single value simulation) against the actual one during
one ight. As one can see, the values match closely:

The dotted plot is the actual ight data whereas the
plain plot is the simulated (open-loop) altitude. Also
shown is the mean-square error usually obtained for this
simulation:

3

The rst thing to notice is the range covered by the rpm
throughout the ight, wich further justies our choice to
model this feature. However, it was not found to inu-
ence our model for the accelerations in a signicant way.
It may be interesting to further rene the analysis of data
to nd a direct inuence of the rpms on the acceleration
(as it exists in theory).
We validated our model with a full open-loop simulator
that uses the physical model described by equation (1).
The simulator yielded good results in the steady part of
the autorotation, especially for the critical parameters
such as the altitude:

Note how the the two curves drift apart at the end of
the ight. Not only does the pilot add some power and
reengage the engine, but also the ground eect becomes
increasingly important. At low altitudes, the air ow is
blocked by the ground, and this eect becomes a ma jor
contribution to the sustentation of the aircraft. Indeed,
our pilot could sustain the helicopter in hovering ight
for a few seconds and with the engine cut o by using
the ground eect.
The best test we can submit our controller to is the
control of the real helicopter. The UAV was programmed
to begin in stationary ight at altitudes ranging from 20
meters to 40 meters (in order to stay inside the vision
system). Then the autopilot would disengage the en-
gine from the blade gears and reach a new steady state
in autorotation. When the helicopter would go out of
the vision system, the pilot would take back the com-
mands and reengage the engine. This experiment was
repeated successfully 6 times with slight variations each
time on the initial attitude and the target in order to
have a practical idea of the robustness of the controller.
After the controller penalty parameters had been prop-
erly adjusted, the helicopter would y successfully (see
the videos).

F. Conclusion and future plans

In the course of this pro ject, we were able to accurately
predict the state of the helicopter during its descent in
autorotation by building a model from ight data. This
model showed good accuracy for the steady-state part of
the autorotation ight and enabled us to derive a working
controller from it. This controller was successfully tested
on the real UAV helicopter and demonstrated great accu-
racy and stability once the control targets and penalties

020040060080011001150120012501300135014001450150015501600time (1/100 sec)blade speed (rpm)  simulationflight data0100200300400500âˆ’20âˆ’10010203040time (1/100 sec)altitude (m)0100200300400500âˆ’0.500.511.522.53time (1/100 sec)MS error (m)4

critical moments.
I also want to express all my grati-
tude to Pieter Abbeel for his mentorship thoughout this
pro ject, and his profound insight of dynamics and con-
trol. Some technical details would have stopped short
this pro ject without the expertise of Morgan Quigley and
the coding skills of Adam Coates. Finally, I was able to
work on excellent data thanks to Garett, our pilot, who
recovered the helicopter more than once from perilous
situations.

had been rened.
The practical results we obtained show that control-
ling a helicopter in steady-state autoroation is not very
dierent from the techniques employed for normal ight.
Our future work will concentrate on the landing itself
wich presents dierent challenges. Since we can precisely
guide the helicopter before te landing stage, an easy so-
lution would be to always guide it to the same cong-
uration and apply a dened sequence of controls from
that point. However, it will be interesting to see how the
helicopter can be controlled up until the landing from dif-
ferent states. We have already begun to lay the ground
for this work with the sonar implementation.

G. Acknowledgements

My rst thanks go to Professor Ng for the idea of the
pro ject and his kind words of encouragements at some

[1] Modeling vehicular dynamics with application to modeling
helicopters. NIPS, 2005.
[2] G.D. Padeld. Helicopter ight dynamics. 2007.

[3] R.R. Padeld. Learning to y helicopters. 1992.

